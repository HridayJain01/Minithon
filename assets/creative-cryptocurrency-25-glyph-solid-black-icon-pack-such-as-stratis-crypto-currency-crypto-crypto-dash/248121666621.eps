%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Glyph_8-Template_196183707356.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 710 827
%%HiResBoundingBox: 0 0 709.3340 826.2188
%%CropBox: 0 0 709.3340 826.2188
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Cryptocurrency 25 Glyph Solid Black icon pack  Such As stratis. crypto currency. crypto. crypto. dash</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Cryptocurrency 25 Glyph Solid Black icon pack  Such As stratis. crypto currency. crypto. crypto. dash</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li> nem </rdf:li>
               <rdf:li> coin </rdf:li>
               <rdf:li> crypto </rdf:li>
               <rdf:li> crypto currency</rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> dogecoin </rdf:li>
               <rdf:li> coin </rdf:li>
               <rdf:li> crypto </rdf:li>
               <rdf:li> cryptocurrency </rdf:li>
               <rdf:li> currency</rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> dash </rdf:li>
               <rdf:li> coin </rdf:li>
               <rdf:li> crypto </rdf:li>
               <rdf:li> crypto currency</rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> stratis </rdf:li>
               <rdf:li> coin </rdf:li>
               <rdf:li> crypto </rdf:li>
               <rdf:li> crypto currency</rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> antshares </rdf:li>
               <rdf:li> coin </rdf:li>
               <rdf:li> crypto </rdf:li>
               <rdf:li> crypto currency</rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> bytecoin </rdf:li>
               <rdf:li> coin </rdf:li>
               <rdf:li> crypto </rdf:li>
               <rdf:li> cryptocurrency </rdf:li>
               <rdf:li> currency</rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> qtum </rdf:li>
               <rdf:li> coin</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T19:51:59+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T19:51:59+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T19:51:59+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>220</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUHqrX62qGwFZ/rFsHGx/cm4jE5+Lwh5/wAN8VYfql3+ZY0a7ezhk/Sn6QlRUSO0ZUs1Ev1drcPI&#xA;ocOwh9QyNyAZqAUw7I3R91c/mGk+pCC3gkU2Ekmmj4QovkihpG1WBZGkaThUjoeRA44rug7S8/Mg&#xA;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&#xA;Vdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:9A2A6107D177ED1181BCD970F5CC96A3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9A2A6107D177ED1181BCD970F5CC96A3</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:f8e4dbde-2357-0a48-91cc-d3d3ef1e16ed</stRef:instanceID>
            <stRef:documentID>xmp.did:f8e4dbde-2357-0a48-91cc-d3d3ef1e16ed</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:304a2dca-86d8-ed4d-81af-2e8a745e790f</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:27:30+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fb57484f-ef74-fe4d-8609-60c326141a2a</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:30:21+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f8e4dbde-2357-0a48-91cc-d3d3ef1e16ed</stEvt:instanceID>
                  <stEvt:when>2022-09-05T22:18:15-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9A2A6107D177ED1181BCD970F5CC96A3</stEvt:instanceID>
                  <stEvt:when>2022-12-09T19:51:59+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>709.333984</stDim:w>
            <stDim:h>826.218750</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -826.219 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 826.219 li
709.334 826.219 li
709.334 0 li
cp
clp
709.334 826.219 mo
0 826.219 li
0 0 li
709.334 0 li
709.334 826.219 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
559.334 391.295 mo
659.334 391.295 li
659.334 491.295 li
559.334 491.295 li
559.334 391.295 li
cp
1 1 1 rgb
f
432 391.295 mo
532 391.295 li
532 491.295 li
432 491.295 li
432 391.295 li
cp
f
304.667 391.295 mo
404.667 391.295 li
404.667 491.295 li
304.667 491.295 li
304.667 391.295 li
cp
f
177.334 391.295 mo
277.334 391.295 li
277.334 491.295 li
177.334 491.295 li
177.334 391.295 li
cp
f
50 391.295 mo
150 391.295 li
150 491.295 li
50 491.295 li
50 391.295 li
cp
f
559.334 520.113 mo
659.334 520.113 li
659.334 620.113 li
559.334 620.113 li
559.334 520.113 li
cp
f
432 520.113 mo
532 520.113 li
532 620.113 li
432 620.113 li
432 520.113 li
cp
f
304.667 520.113 mo
404.667 520.113 li
404.667 620.113 li
304.667 620.113 li
304.667 520.113 li
cp
f
177.334 520.113 mo
277.334 520.113 li
277.334 620.113 li
177.334 620.113 li
177.334 520.113 li
cp
f
50 520.113 mo
150 520.113 li
150 620.113 li
50 620.113 li
50 520.113 li
cp
f
559.334 262.477 mo
659.334 262.477 li
659.334 362.477 li
559.334 362.477 li
559.334 262.477 li
cp
f
432 262.477 mo
532 262.477 li
532 362.477 li
432 362.477 li
432 262.477 li
cp
f
304.667 262.477 mo
404.667 262.477 li
404.667 362.477 li
304.667 362.477 li
304.667 262.477 li
cp
f
177.334 262.477 mo
277.334 262.477 li
277.334 362.477 li
177.334 362.477 li
177.334 262.477 li
cp
f
50 262.477 mo
150 262.477 li
150 362.477 li
50 362.477 li
50 262.477 li
cp
f
559.334 133.658 mo
659.334 133.658 li
659.334 233.658 li
559.334 233.658 li
559.334 133.658 li
cp
f
432 133.658 mo
532 133.658 li
532 233.658 li
432 233.658 li
432 133.658 li
cp
f
304.667 133.658 mo
404.667 133.658 li
404.667 233.658 li
304.667 233.658 li
304.667 133.658 li
cp
f
177.334 133.658 mo
277.334 133.658 li
277.334 233.658 li
177.334 233.658 li
177.334 133.658 li
cp
f
50 133.658 mo
150 133.658 li
150 233.658 li
50 233.658 li
50 133.658 li
cp
f
559.334 648.932 mo
659.334 648.932 li
659.334 748.932 li
559.334 748.932 li
559.334 648.932 li
cp
f
432 648.932 mo
532 648.932 li
532 748.932 li
432 748.932 li
432 648.932 li
cp
f
304.667 648.932 mo
404.667 648.932 li
404.667 748.932 li
304.667 748.932 li
304.667 648.932 li
cp
f
177.334 648.932 mo
277.334 648.932 li
277.334 748.932 li
177.334 748.932 li
177.334 648.932 li
cp
f
50 648.932 mo
150 648.932 li
150 748.932 li
50 748.932 li
50 648.932 li
cp
f
559.334 776.219 mo
659.334 776.219 li
659.334 770.495 li
559.334 770.495 li
559.334 776.219 li
cp
.968627 .733333 .25098 rgb
f
432 776.219 mo
532 776.219 li
532 770.495 li
432 770.495 li
432 776.219 li
cp
.980392 .623529 .235294 rgb
f
304.667 776.219 mo
404.667 776.219 li
404.667 770.495 li
304.667 770.495 li
304.667 776.219 li
cp
.796078 .278431 .611765 rgb
f
177.334 776.219 mo
277.334 776.219 li
277.334 770.495 li
177.334 770.495 li
177.334 776.219 li
cp
.494118 .407843 .776471 rgb
f
50 776.219 mo
150 776.219 li
150 770.495 li
50 770.495 li
50 776.219 li
cp
.168627 .74902 .909804 rgb
f
277.67 52.0879 mo
302.766 52.0879 li
302.766 55.2119 li
277.67 55.2119 li
277.67 52.0879 li
cp
f
309.896 52.0879 mo
334.989 52.0879 li
334.989 55.2119 li
309.896 55.2119 li
309.896 52.0879 li
cp
.494118 .407843 .776471 rgb
f
342.119 52.0879 mo
367.213 52.0879 li
367.213 55.2119 li
342.119 55.2119 li
342.119 52.0879 li
cp
.796078 .278431 .611765 rgb
f
374.344 52.0879 mo
399.438 52.0879 li
399.438 55.2119 li
374.344 55.2119 li
374.344 52.0879 li
cp
.980392 .623529 .235294 rgb
f
406.568 52.0879 mo
431.662 52.0879 li
431.662 55.2119 li
406.568 55.2119 li
406.568 52.0879 li
cp
.968627 .733333 .25098 rgb
f
280.459 33.8052 mo
280.459 45.334 li
278.971 45.334 li
278.971 33.8052 li
280.459 33.8052 li
cp
.164706 .223529 .258824 rgb
f
295.395 44.9575 mo
294.847 45.2314 293.752 45.5049 292.35 45.5049 cv
289.1 45.5049 286.653 43.4526 286.653 39.6724 cv
286.653 36.063 289.1 33.6172 292.675 33.6172 cv
294.111 33.6172 295.018 33.9248 295.411 34.1304 cv
295.052 35.3447 li
294.487 35.0708 293.684 34.8657 292.726 34.8657 cv
290.023 34.8657 288.228 36.5933 288.228 39.6211 cv
288.228 42.4434 289.853 44.2563 292.657 44.2563 cv
293.564 44.2563 294.487 44.0684 295.087 43.7773 cv
295.395 44.9575 li
cp
f
302.087 39.6382 mo
302.087 42.1011 303.421 44.3076 305.765 44.3076 cv
308.125 44.3076 309.459 42.1353 309.459 39.5181 cv
309.459 37.2261 308.262 34.8315 305.781 34.8315 cv
303.318 34.8315 302.087 37.1064 302.087 39.6382 cv
cp
311.032 39.4497 mo
311.032 43.418 308.621 45.522 305.679 45.522 cv
302.634 45.522 300.496 43.1616 300.496 39.6724 cv
300.496 36.0117 302.771 33.6172 305.85 33.6172 cv
308.997 33.6172 311.032 36.0288 311.032 39.4497 cv
cp
f
317.247 45.334 mo
317.247 33.8052 li
318.872 33.8052 li
322.566 39.6382 li
323.422 40.9893 324.089 42.2036 324.637 43.3838 cv
324.671 43.3667 li
324.534 41.8276 324.5 40.4248 324.5 38.6289 cv
324.5 33.8052 li
325.902 33.8052 li
325.902 45.334 li
324.396 45.334 li
320.736 39.4839 li
319.933 38.2012 319.163 36.8843 318.581 35.6353 cv
318.53 35.6523 li
318.615 37.1064 318.649 38.4922 318.649 40.4077 cv
318.649 45.334 li
317.247 45.334 li
cp
f
333.689 39.6382 mo
333.689 42.1011 335.023 44.3076 337.367 44.3076 cv
339.728 44.3076 341.063 42.1353 341.063 39.5181 cv
341.063 37.2261 339.864 34.8315 337.385 34.8315 cv
334.921 34.8315 333.689 37.1064 333.689 39.6382 cv
cp
342.636 39.4497 mo
342.636 43.418 340.224 45.522 337.282 45.522 cv
334.237 45.522 332.099 43.1616 332.099 39.6724 cv
332.099 36.0117 334.374 33.6172 337.453 33.6172 cv
340.601 33.6172 342.636 36.0288 342.636 39.4497 cv
cp
f
357.625 44.8208 mo
356.958 45.0605 355.641 45.4536 354.084 45.4536 cv
352.34 45.4536 350.902 45.0088 349.773 43.9312 cv
348.781 42.9736 348.166 41.4341 348.166 39.6382 cv
348.183 36.1997 350.543 33.6855 354.409 33.6855 cv
355.743 33.6855 356.787 33.9761 357.283 34.2158 cv
356.924 35.4302 li
356.308 35.1563 355.538 34.9341 354.375 34.9341 cv
351.569 34.9341 349.739 36.6787 349.739 39.5693 cv
349.739 42.4946 351.501 44.2222 354.187 44.2222 cv
355.162 44.2222 355.829 44.0854 356.171 43.9141 cv
356.171 40.4761 li
353.827 40.4761 li
353.827 39.2788 li
357.625 39.2788 li
357.625 44.8208 li
cp
f
365.669 39.2104 mo
367.191 39.2104 li
368.782 39.2104 369.792 38.3379 369.792 37.021 cv
369.792 35.5327 368.714 34.8828 367.141 34.8657 cv
366.422 34.8657 365.909 34.9341 365.669 35.0024 cv
365.669 39.2104 li
cp
364.181 33.959 mo
364.934 33.8052 366.012 33.7197 367.038 33.7197 cv
368.629 33.7197 369.654 34.0103 370.373 34.6602 cv
370.955 35.1733 371.279 35.9604 371.279 36.8496 cv
371.279 38.3721 370.322 39.3813 369.107 39.792 cv
369.107 39.8433 li
369.997 40.1514 370.527 40.9722 370.801 42.1694 cv
371.177 43.7773 371.451 44.8892 371.69 45.334 cv
370.15 45.334 li
369.963 45.0088 369.706 44.0171 369.381 42.5801 cv
369.039 40.9893 368.423 40.3906 367.072 40.3394 cv
365.669 40.3394 li
365.669 45.334 li
364.181 45.334 li
364.181 33.959 li
cp
f
383.395 40.5444 mo
382.266 37.2261 li
382.009 36.4736 381.838 35.7896 381.667 35.1221 cv
381.632 35.1221 li
381.461 35.8066 381.273 36.5078 381.051 37.209 cv
379.922 40.5444 li
383.395 40.5444 li
cp
379.614 41.7075 mo
378.417 45.334 li
376.877 45.334 li
380.794 33.8052 li
382.59 33.8052 li
386.524 45.334 li
384.934 45.334 li
383.702 41.7075 li
379.614 41.7075 li
cp
f
393.986 39.501 mo
394.312 39.5869 394.722 39.6211 395.218 39.6211 cv
397.015 39.6211 398.109 38.7485 398.109 37.1577 cv
398.109 35.6353 397.031 34.8999 395.39 34.8999 cv
394.739 34.8999 394.243 34.9512 393.986 35.0195 cv
393.986 39.501 li
cp
392.498 33.9419 mo
393.217 33.8223 394.157 33.7197 395.355 33.7197 cv
396.826 33.7197 397.903 34.0615 398.588 34.6777 cv
399.221 35.2251 399.597 36.063 399.597 37.0894 cv
399.597 38.1328 399.289 38.9536 398.708 39.5522 cv
397.921 40.3906 396.638 40.8184 395.184 40.8184 cv
394.739 40.8184 394.329 40.8013 393.986 40.7158 cv
393.986 45.334 li
392.498 45.334 li
392.498 33.9419 li
cp
f
407.367 33.8052 mo
407.367 38.6289 li
412.943 38.6289 li
412.943 33.8052 li
414.449 33.8052 li
414.449 45.334 li
412.943 45.334 li
412.943 39.9287 li
407.367 39.9287 li
407.367 45.334 li
405.879 45.334 li
405.879 33.8052 li
407.367 33.8052 li
cp
f
423.759 45.334 mo
423.759 40.4419 li
420.115 33.8052 li
421.81 33.8052 li
423.434 36.9868 li
423.879 37.8589 424.221 38.5605 424.58 39.3643 cv
424.614 39.3643 li
424.939 38.6118 425.333 37.8589 425.777 36.9868 cv
427.437 33.8052 li
429.13 33.8052 li
425.265 40.4248 li
425.265 45.334 li
423.759 45.334 li
cp
f
281.007 71.1421 mo
279.4 71.1421 278.136 71.7119 277.216 72.8511 cv
276.295 73.9902 275.834 75.5625 275.834 77.5674 cv
275.834 79.6665 276.277 81.2539 277.163 82.3306 cv
278.048 83.4072 279.33 83.9458 281.007 83.9458 cv
281.733 83.9458 282.435 83.8735 283.114 83.729 cv
283.793 83.585 284.499 83.3999 285.232 83.1733 cv
285.232 85.5723 li
283.89 86.0796 282.369 86.333 280.668 86.333 cv
278.164 86.333 276.24 85.5747 274.898 84.0571 cv
273.556 82.5396 272.885 80.3687 272.885 77.5439 cv
272.885 75.7651 273.211 74.2085 273.863 72.8745 cv
274.514 71.54 275.456 70.5181 276.689 69.8081 cv
277.921 69.0981 279.369 68.7432 281.031 68.7432 cv
282.778 68.7432 284.394 69.1099 285.876 69.8433 cv
284.87 72.1724 li
284.292 71.8989 283.682 71.6592 283.038 71.4521 cv
282.395 71.2456 281.717 71.1421 281.007 71.1421 cv
cp
f
294.233 72.9214 mo
294.787 72.9214 295.244 72.9604 295.603 73.0381 cv
295.333 75.6011 li
294.943 75.5078 294.538 75.4609 294.116 75.4609 cv
293.016 75.4609 292.125 75.8198 291.442 76.5376 cv
290.759 77.2554 290.418 78.1875 290.418 79.3345 cv
290.418 86.0991 li
287.668 86.0991 li
287.668 73.1553 li
289.821 73.1553 li
290.184 75.4375 li
290.325 75.4375 li
290.753 74.665 291.313 74.0527 292.004 73.6001 cv
292.694 73.1475 293.438 72.9214 294.233 72.9214 cv
cp
f
295.077 73.1553 mo
298.073 73.1553 li
300.706 80.4932 li
301.104 81.5391 301.369 82.522 301.502 83.4424 cv
301.595 83.4424 li
301.666 83.0137 301.794 82.4927 301.981 81.8799 cv
302.169 81.2676 303.16 78.3594 304.954 73.1553 cv
307.927 73.1553 li
302.391 87.8193 li
301.385 90.5112 299.707 91.8569 297.359 91.8569 cv
296.75 91.8569 296.157 91.791 295.58 91.6582 cv
295.58 89.4814 li
295.993 89.5752 296.465 89.6221 296.996 89.6221 cv
298.322 89.6221 299.255 88.853 299.793 87.3164 cv
300.273 86.0991 li
295.077 73.1553 li
cp
f
314.833 75.168 mo
313.74 75.168 312.943 75.4883 312.439 76.1279 cv
311.937 76.7676 311.685 77.7896 311.685 79.1943 cv
311.685 79.604 li
311.685 81.1797 311.934 82.3208 312.434 83.0269 cv
312.933 83.7334 313.749 84.0859 314.88 84.0859 cv
315.832 84.0859 316.565 83.6963 317.08 82.916 cv
317.595 82.1357 317.853 81.0239 317.853 79.5806 cv
317.853 78.1289 317.597 77.0313 317.086 76.2856 cv
316.575 75.541 315.824 75.168 314.833 75.168 cv
cp
315.5 86.333 mo
313.861 86.333 312.59 85.7441 311.685 84.5659 cv
311.521 84.5659 li
311.63 85.6582 311.685 86.3213 311.685 86.5557 cv
311.685 91.8569 li
308.935 91.8569 li
308.935 73.1553 li
311.158 73.1553 li
311.22 73.397 311.349 73.9746 311.544 74.8872 cv
311.685 74.8872 li
312.543 73.5767 313.83 72.9214 315.547 72.9214 cv
317.162 72.9214 318.42 73.5063 319.321 74.6768 cv
320.222 75.8472 320.673 77.4893 320.673 79.604 cv
320.673 81.7183 320.214 83.3682 319.298 84.5542 cv
318.381 85.7402 317.115 86.333 315.5 86.333 cv
cp
f
327.731 84.1094 mo
328.402 84.1094 329.073 84.0044 329.744 83.7935 cv
329.744 85.8652 li
329.439 85.998 329.047 86.1089 328.567 86.1987 cv
328.088 86.2881 327.59 86.333 327.075 86.333 cv
324.469 86.333 323.167 84.96 323.167 82.2134 cv
323.167 75.2383 li
321.399 75.2383 li
321.399 74.0215 li
323.295 73.0146 li
324.231 70.2764 li
325.929 70.2764 li
325.929 73.1553 li
329.615 73.1553 li
329.615 75.2383 li
325.929 75.2383 li
325.929 82.167 li
325.929 82.8301 326.094 83.3193 326.426 83.6357 cv
326.757 83.9517 327.192 84.1094 327.731 84.1094 cv
cp
f
333.431 79.604 mo
333.431 82.5923 334.535 84.0859 336.743 84.0859 cv
338.928 84.0859 340.02 82.5923 340.02 79.604 cv
340.02 76.647 338.92 75.168 336.72 75.168 cv
335.565 75.168 334.729 75.5508 334.209 76.3149 cv
333.69 77.0801 333.431 78.1758 333.431 79.604 cv
cp
342.853 79.604 mo
342.853 81.7183 342.31 83.3682 341.226 84.5542 cv
340.141 85.7402 338.631 86.333 336.696 86.333 cv
335.487 86.333 334.418 86.0601 333.49 85.5142 cv
332.561 84.9678 331.847 84.1836 331.348 83.1616 cv
330.849 82.1396 330.599 80.9536 330.599 79.604 cv
330.599 77.5049 331.137 75.8667 332.214 74.6885 cv
333.291 73.5103 334.808 72.9214 336.767 72.9214 cv
338.639 72.9214 340.122 73.5239 341.214 74.7295 cv
342.306 75.9346 342.853 77.5596 342.853 79.604 cv
cp
f
350.273 86.333 mo
348.315 86.333 346.827 85.7617 345.809 84.6187 cv
344.79 83.4756 344.281 81.8354 344.281 79.6973 cv
344.281 77.5205 344.813 75.8472 345.878 74.6768 cv
346.944 73.5063 348.482 72.9214 350.496 72.9214 cv
351.861 72.9214 353.09 73.1748 354.182 73.6816 cv
353.351 75.894 li
352.188 75.4414 351.229 75.2148 350.472 75.2148 cv
348.233 75.2148 347.113 76.7012 347.113 79.6738 cv
347.113 81.125 347.392 82.2158 347.95 82.9453 cv
348.508 83.6748 349.325 84.0396 350.402 84.0396 cv
351.627 84.0396 352.786 83.7349 353.878 83.1265 cv
353.878 85.5259 li
353.386 85.8145 352.861 86.021 352.304 86.146 cv
351.746 86.2705 351.069 86.333 350.273 86.333 cv
cp
f
365.091 86.0991 mo
364.704 84.4023 li
364.564 84.4023 li
364.182 85.0029 363.638 85.4751 362.932 85.8184 cv
362.226 86.1616 361.42 86.333 360.515 86.333 cv
358.946 86.333 357.776 85.9434 357.004 85.1631 cv
356.231 84.3828 355.845 83.2007 355.845 81.6167 cv
355.845 73.1553 li
358.619 73.1553 li
358.619 81.1367 li
358.619 82.1279 358.821 82.8711 359.228 83.3662 cv
359.634 83.8618 360.269 84.1094 361.136 84.1094 cv
362.29 84.1094 363.138 83.7642 363.681 83.0737 cv
364.223 82.3833 364.494 81.2266 364.494 79.604 cv
364.494 73.1553 li
367.256 73.1553 li
367.256 86.0991 li
365.091 86.0991 li
cp
f
376.783 72.9214 mo
377.337 72.9214 377.794 72.9604 378.152 73.0381 cv
377.884 75.6011 li
377.493 75.5078 377.087 75.4609 376.666 75.4609 cv
375.565 75.4609 374.675 75.8198 373.992 76.5376 cv
373.31 77.2554 372.968 78.1875 372.968 79.3345 cv
372.968 86.0991 li
370.218 86.0991 li
370.218 73.1553 li
372.371 73.1553 li
372.733 75.4375 li
372.874 75.4375 li
373.304 74.665 373.863 74.0527 374.554 73.6001 cv
375.244 73.1475 375.987 72.9214 376.783 72.9214 cv
cp
f
386.159 72.9214 mo
386.712 72.9214 387.169 72.9604 387.528 73.0381 cv
387.259 75.6011 li
386.868 75.5078 386.463 75.4609 386.042 75.4609 cv
384.941 75.4609 384.05 75.8198 383.368 76.5376 cv
382.685 77.2554 382.343 78.1875 382.343 79.3345 cv
382.343 86.0991 li
379.593 86.0991 li
379.593 73.1553 li
381.747 73.1553 li
382.109 75.4375 li
382.25 75.4375 li
382.679 74.665 383.239 74.0527 383.929 73.6001 cv
384.62 73.1475 385.362 72.9214 386.159 72.9214 cv
cp
f
394.118 75.0044 mo
393.244 75.0044 392.544 75.2813 392.017 75.8354 cv
391.491 76.3892 391.177 77.1968 391.075 78.2578 cv
396.95 78.2578 li
396.935 77.189 396.677 76.3794 396.178 75.8296 cv
395.679 75.2793 394.991 75.0044 394.118 75.0044 cv
cp
394.621 86.333 mo
392.608 86.333 391.034 85.7461 389.899 84.5718 cv
388.764 83.3975 388.196 81.7808 388.196 79.7207 cv
388.196 77.6064 388.723 75.9448 389.776 74.7354 cv
390.829 73.5259 392.276 72.9214 394.118 72.9214 cv
395.827 72.9214 397.177 73.4399 398.167 74.4775 cv
399.158 75.5156 399.653 76.9434 399.653 78.7612 cv
399.653 80.2476 li
391.028 80.2476 li
391.067 81.5039 391.407 82.4692 392.046 83.144 cv
392.687 83.8188 393.587 84.1563 394.75 84.1563 cv
395.515 84.1563 396.227 84.0845 396.886 83.9399 cv
397.545 83.7954 398.253 83.5557 399.011 83.2202 cv
399.011 85.4556 li
398.339 85.7754 397.66 86.0015 396.974 86.1343 cv
396.287 86.2666 395.503 86.333 394.621 86.333 cv
cp
f
413.207 86.0991 mo
410.444 86.0991 li
410.444 78.1406 li
410.444 77.1421 410.244 76.397 409.843 75.9053 cv
409.44 75.4141 408.803 75.168 407.929 75.168 cv
406.767 75.168 405.916 75.5117 405.378 76.1982 cv
404.839 76.8848 404.569 78.0356 404.569 79.6504 cv
404.569 86.0991 li
401.819 86.0991 li
401.819 73.1553 li
403.974 73.1553 li
404.359 74.8521 li
404.499 74.8521 li
404.89 74.2358 405.444 73.7598 406.161 73.4243 cv
406.88 73.0889 407.675 72.9214 408.55 72.9214 cv
411.654 72.9214 413.207 74.501 413.207 77.6611 cv
413.207 86.0991 li
cp
f
421.295 86.333 mo
419.337 86.333 417.849 85.7617 416.83 84.6187 cv
415.812 83.4756 415.303 81.8354 415.303 79.6973 cv
415.303 77.5205 415.835 75.8472 416.899 74.6768 cv
417.966 73.5063 419.504 72.9214 421.517 72.9214 cv
422.882 72.9214 424.111 73.1748 425.204 73.6816 cv
424.372 75.894 li
423.21 75.4414 422.251 75.2148 421.493 75.2148 cv
419.255 75.2148 418.135 76.7012 418.135 79.6738 cv
418.135 81.125 418.413 82.2158 418.972 82.9453 cv
419.529 83.6748 420.347 84.0396 421.423 84.0396 cv
422.648 84.0396 423.808 83.7349 424.899 83.1265 cv
424.899 85.5259 li
424.407 85.8145 423.883 86.021 423.325 86.146 cv
422.768 86.2705 422.091 86.333 421.295 86.333 cv
cp
f
425.018 73.1553 mo
428.014 73.1553 li
430.647 80.4932 li
431.045 81.5391 431.31 82.522 431.442 83.4424 cv
431.536 83.4424 li
431.606 83.0137 431.735 82.4927 431.923 81.8799 cv
432.11 81.2676 433.101 78.3594 434.896 73.1553 cv
437.868 73.1553 li
432.332 87.8193 li
431.325 90.5112 429.647 91.8569 427.3 91.8569 cv
426.69 91.8569 426.099 91.791 425.521 91.6582 cv
425.521 89.4814 li
425.935 89.5752 426.406 89.6221 426.937 89.6221 cv
428.263 89.6221 429.196 88.853 429.733 87.3164 cv
430.214 86.0991 li
425.018 73.1553 li
cp
f
556.341 640 mo
657.5 640 li
657.5 740 li
556.341 740 li
556.341 640 li
cp
1 1 1 rgb
f
621.791 701.8 mo
621.791 681.8 li
619.768 683.9 617.846 686 616.024 688 cv
613.192 691.1 610.259 694.4 607.021 697.6 cv
606.718 697.9 606.415 698 606.01 698 cv
606.01 698 li
605.605 698 605.302 697.9 604.998 697.6 cv
601.862 694.4 598.929 691.3 596.197 688.2 cv
594.275 686.1 592.253 683.9 590.229 681.7 cv
590.229 701.8 li
590.229 702.6 589.622 703.2 588.813 703.2 cv
588.813 703.2 588.712 703.2 588.61 703.2 cv
588.51 703.2 588.408 703.2 588.206 703.2 cv
583.148 703.2 li
587.902 710.9 596.501 716.1 606.313 716.1 cv
616.126 716.1 624.725 710.9 629.479 703.1 cv
623.106 703.1 li
622.499 703.2 621.791 702.6 621.791 701.8 cv
cp
0 0 0 rgb
f
606.415 662.8 mo
591.544 662.8 579.405 674.8 579.405 689.5 cv
579.405 693.4 580.215 697.1 581.833 700.5 cv
587.498 700.5 li
587.498 678.3 li
587.498 677.7 587.802 677.2 588.408 677 cv
588.914 676.8 589.521 676.9 589.926 677.3 cv
592.961 680.3 595.691 683.4 598.423 686.3 cv
600.851 689 603.481 691.8 606.212 694.6 cv
609.045 691.8 611.574 688.9 614.204 686.1 cv
616.834 683.2 619.565 680.3 622.397 677.3 cv
622.803 676.9 623.409 676.8 623.915 677 cv
624.421 677.2 624.826 677.7 624.826 678.3 cv
624.826 700.4 li
630.896 700.4 li
630.996 700.4 631.098 700.4 631.198 700.4 cv
632.716 697 633.627 693.3 633.627 689.4 cv
633.424 674.8 621.285 662.8 606.415 662.8 cv
cp
f
428.881 640 mo
530.04 640 li
530.04 740 li
428.881 740 li
428.881 640 li
cp
1 1 1 rgb
f
489.88 700.5 mo
489.172 697.1 487.856 694 486.643 691.4 cv
486.643 691.3 li
484.519 686.8 482.394 682.1 480.168 677.6 cv
478.752 674.6 478.246 671.4 478.752 667.7 cv
478.854 667 478.954 666.4 478.954 665.7 cv
478.954 665.2 479.056 664.7 479.157 664.2 cv
479.258 663.8 479.056 663.3 478.651 663 cv
478.246 662.7 477.842 662.7 477.336 662.9 cv
477.234 663 477.134 663 477.032 663 cv
476.83 663.1 476.526 663.2 476.224 663.5 cv
472.581 666.1 470.053 669 468.434 672.4 cv
467.22 674.8 467.827 677.3 468.333 679.3 cv
469.345 683 470.963 686.5 472.581 689.9 cv
472.885 690.6 li
473.492 691.9 474.099 693.2 474.706 694.4 cv
475.92 696.9 477.134 699.5 478.246 702.1 cv
479.056 704 479.258 706 478.854 708 cv
478.651 709 478.348 710 478.044 711 cv
477.842 711.7 477.64 712.5 477.438 713.2 cv
477.438 713.2 li
477.438 713.9 477.438 714.3 477.438 714.7 cv
477.438 714.8 477.438 714.9 477.438 715 cv
477.438 715.4 477.64 715.8 478.044 716.1 cv
478.246 716.2 478.448 716.3 478.752 716.3 cv
478.954 716.3 479.157 716.3 479.258 716.2 cv
479.359 716.2 479.46 716.1 479.562 716.1 cv
479.865 716 480.27 715.9 480.573 715.6 cv
480.573 715.6 li
484.215 712.7 486.946 709.4 489.172 705.7 cv
489.172 705.7 li
489.98 704 490.284 702.4 489.88 700.5 cv
489.88 700.5 li
cp
0 0 0 rgb
f
468.839 697 mo
468.231 695 467.523 693 466.714 691 cv
465.602 688.6 464.488 686.2 463.376 683.9 cv
462.668 682.5 461.96 681 461.353 679.5 cv
460.948 678.6 460.746 677.8 460.544 676.9 cv
460.139 674.9 460.442 672.8 460.746 670.5 cv
460.746 670.2 460.746 670 460.746 669.7 cv
460.746 669.6 460.746 669.5 460.746 669.4 cv
460.746 669 460.544 668.5 460.139 668.3 cv
459.734 668.1 459.229 668.1 458.925 668.3 cv
458.723 668.4 458.621 668.5 458.521 668.5 cv
458.419 668.6 458.217 668.6 458.115 668.7 cv
458.015 668.8 li
455.688 670.5 453.867 672.5 452.552 674.8 cv
451.54 676.6 451.237 678.5 451.642 680.4 cv
452.35 683.3 453.563 686 454.879 689 cv
455.891 691.2 li
457.205 693.9 458.521 696.7 459.734 699.5 cv
460.341 700.9 460.442 702.3 460.139 703.8 cv
459.937 704.7 459.633 705.7 459.431 706.6 cv
459.33 707 459.229 707.5 459.127 707.9 cv
459.127 707.9 li
459.026 708.3 459.026 708.7 458.925 709 cv
458.925 709 li
458.824 709.5 459.127 710 459.532 710.2 cv
459.532 710.2 459.633 710.3 459.734 710.3 cv
459.937 710.4 460.139 710.4 460.341 710.4 cv
460.544 710.4 460.746 710.3 460.948 710.2 cv
461.049 710.2 461.049 710.1 461.15 710.1 cv
461.353 710 461.656 709.8 461.96 709.6 cv
464.894 707.2 467.119 704.6 468.737 701.7 cv
468.737 701.7 li
469.547 700.3 469.647 698.8 469.243 697.5 cv
469.041 697.6 468.939 697.3 468.839 697 cv
cp
f
506.672 698.7 mo
506.672 698.7 li
506.47 697.4 506.065 695.6 505.357 694 cv
504.244 691.5 503.03 688.9 501.918 686.4 cv
501.209 684.8 500.4 683.2 499.692 681.6 cv
499.489 681.2 li
498.883 679.9 498.377 678.6 497.973 677.3 cv
497.467 675.5 497.669 673.6 497.871 671.8 cv
497.871 671.8 li
497.973 671.3 497.973 670.7 498.073 670.1 cv
498.073 669.7 li
498.073 669.3 497.973 669 497.77 668.7 cv
497.669 668.5 497.467 668.4 497.265 668.4 cv
496.859 668.2 496.455 668.1 496.051 668.3 cv
496.051 668.3 li
495.848 668.4 495.545 668.6 495.241 668.8 cv
495.241 668.8 li
492.914 670.5 491.194 672.4 489.778 674.6 cv
488.666 676.3 488.362 678.2 488.767 680.2 cv
488.767 680.2 li
489.475 683.3 490.79 686.2 492.004 688.7 cv
492.813 690.4 493.622 692.1 494.331 693.8 cv
495.14 695.6 496.051 697.5 496.859 699.3 cv
496.859 699.3 li
497.467 700.6 497.669 701.8 497.467 703 cv
497.265 704.1 496.961 705.2 496.759 706.2 cv
496.657 706.8 496.455 707.4 496.354 707.9 cv
496.253 708.2 496.253 708.4 496.253 708.7 cv
496.253 708.9 496.253 709 496.151 709.2 cv
496.051 709.7 496.253 710.1 496.657 710.4 cv
496.859 710.5 497.163 710.6 497.365 710.6 cv
497.567 710.6 497.77 710.5 497.973 710.4 cv
498.073 710.3 498.275 710.3 498.377 710.2 cv
498.579 710.1 498.883 710 499.085 709.8 cv
502.322 707.2 504.648 704.5 506.166 701.4 cv
506.672 700.9 506.874 699.7 506.672 698.7 cv
cp
f
301.42 640 mo
402.579 640 li
402.579 740 li
301.42 740 li
301.42 640 li
cp
1 1 1 rgb
f
362.521 706.4 mo
340.569 706.4 li
340.569 692 li
360.093 692 li
362.521 692 li
366.566 692 369.804 695.2 369.804 699.2 cv
369.804 703.2 366.566 706.4 362.521 706.4 cv
cp
367.376 679.8 mo
367.376 683.8 364.139 687 360.093 687 cv
340.569 687 li
340.569 672.6 li
360.093 672.6 li
364.139 672.6 367.376 675.8 367.376 679.8 cv
cp
368.59 688.6 mo
370.917 686.4 372.434 683.3 372.434 679.8 cv
372.434 673.1 366.87 667.6 360.093 667.6 cv
350.381 667.6 li
350.381 662.8 li
350.381 661.4 349.269 660.3 347.853 660.3 cv
346.437 660.3 345.323 661.4 345.323 662.8 cv
345.323 667.6 li
340.468 667.6 li
338.04 667.6 li
330.655 667.6 li
329.239 667.6 328.126 668.7 328.126 670.1 cv
328.126 671.5 329.239 672.6 330.655 672.6 cv
335.511 672.6 li
335.511 689.5 li
335.511 706.4 li
330.655 706.4 li
329.239 706.4 328.126 707.5 328.126 708.9 cv
328.126 710.3 329.239 711.4 330.655 711.4 cv
338.04 711.4 li
345.323 711.4 li
345.323 716.2 li
345.323 717.6 346.437 718.7 347.853 718.7 cv
349.269 718.7 350.381 717.6 350.381 716.2 cv
350.381 711.4 li
362.622 711.4 li
369.399 711.4 374.963 705.9 374.963 699.2 cv
374.862 694.7 372.333 690.7 368.59 688.6 cv
cp
0 0 0 rgb
f
173.96 640 mo
275.119 640 li
275.119 740 li
173.96 740 li
173.96 640 li
cp
1 1 1 rgb
f
238.803 693.2 mo
236.78 693.2 234.858 693.7 233.239 694.5 cv
229.294 689.3 li
232.936 684.4 li
234.656 685.3 236.578 685.8 238.601 685.8 cv
245.378 685.8 250.841 680.4 250.841 673.7 cv
250.841 667 245.378 661.6 238.601 661.6 cv
231.823 661.6 226.36 667 226.36 673.7 cv
226.36 677.4 228.08 680.7 230.71 683 cv
226.967 688.1 li
221.202 688.1 li
219.886 682.9 215.031 679 209.366 679 cv
202.588 679 197.125 684.4 197.125 691.1 cv
197.125 697.8 202.588 703.2 209.366 703.2 cv
216.144 703.2 221.606 697.8 221.606 691.1 cv
221.606 691 221.606 690.9 221.606 690.7 cv
226.967 690.7 li
231.014 696 li
228.283 698.2 226.563 701.6 226.563 705.3 cv
226.563 712 232.025 717.4 238.803 717.4 cv
245.581 717.4 251.043 712 251.043 705.3 cv
251.043 698.6 245.479 693.2 238.803 693.2 cv
cp
0 0 0 rgb
f
46.5 640 mo
147.659 640 li
147.659 740 li
46.5 740 li
46.5 640 li
cp
1 1 1 rgb
f
125.809 713.2 mo
124.797 709.9 124.089 706 123.482 702.2 cv
122.167 694.5 120.75 686.5 116.097 682.5 cv
111.95 678.9 107.094 677.4 102.137 678.1 cv
98.1924 678.6 94.4492 680.6 91.5156 683.5 cv
75.9375 670.2 li
76.2407 669.6 76.3418 668.9 76.2407 668.1 cv
76.1396 666.9 75.6338 665.8 74.7231 665.1 cv
73.813 664.3 72.7002 663.9 71.4863 664 cv
70.2725 664.1 69.1597 664.6 68.4517 665.5 cv
68.4517 665.5 li
66.833 667.4 67.0352 670.2 68.9575 671.8 cv
69.7666 672.5 70.8794 672.9 71.8911 672.9 cv
72.7002 672.9 73.5093 672.7 74.2173 672.3 cv
89.6948 685.5 li
87.166 688.8 85.7495 692.8 85.7495 696.7 cv
85.7495 701.6 87.9751 706.1 92.2236 709.7 cv
96.877 713.7 105.172 713.9 113.164 714.1 cv
117.008 714.2 120.953 714.3 124.291 714.9 cv
124.393 714.9 124.393 714.9 124.494 714.9 cv
124.898 714.9 125.303 714.7 125.505 714.4 cv
125.809 714.1 125.91 713.6 125.809 713.2 cv
cp
0 0 0 rgb
f
556.341 514 mo
657.5 514 li
657.5 614 li
556.341 614 li
556.341 514 li
cp
1 1 1 rgb
f
625.129 580.3 mo
593.669 580.3 li
626.95 545.8 li
627.658 545.1 627.86 544 627.456 543.1 cv
627.051 542.2 626.141 541.6 625.129 541.6 cv
607.426 541.6 li
607.426 538 li
607.426 536.6 606.313 535.5 604.897 535.5 cv
603.481 535.5 602.368 536.6 602.368 538 cv
602.368 541.5 li
587.7 541.5 li
586.284 541.5 585.172 542.6 585.172 544 cv
585.172 545.4 586.284 546.5 587.7 546.5 cv
619.161 546.5 li
585.88 581 li
585.172 581.7 584.969 582.8 585.374 583.7 cv
585.778 584.6 586.688 585.2 587.7 585.2 cv
602.368 585.2 li
602.368 589 li
602.368 590.4 603.481 591.5 604.897 591.5 cv
606.313 591.5 607.426 590.4 607.426 589 cv
607.426 585.2 li
625.129 585.2 li
626.545 585.2 627.658 584.1 627.658 582.7 cv
627.658 581.4 626.545 580.3 625.129 580.3 cv
cp
0 0 0 rgb
f
428.881 514 mo
530.04 514 li
530.04 614 li
428.881 614 li
428.881 514 li
cp
1 1 1 rgb
f
495.14 562.4 mo
486.845 547.1 li
478.954 534 li
471.064 547.1 li
462.769 562.3 li
478.752 570.4 li
495.14 562.4 li
cp
0 0 0 rgb
f
478.752 573.4 mo
478.55 573.4 478.348 573.4 478.146 573.3 cv
464.186 566.3 li
471.165 578.9 li
478.954 593 li
486.744 578.8 li
493.622 566.4 li
479.46 573.2 li
479.258 573.3 478.954 573.4 478.752 573.4 cv
cp
f
301.42 514 mo
402.579 514 li
402.579 614 li
301.42 614 li
301.42 514 li
cp
1 1 1 rgb
f
343.199 575 mo
332.476 575 li
332.78 579.1 334.5 582.9 337.028 585.8 cv
344.615 578.3 li
343.907 577.4 343.502 576.3 343.199 575 cv
cp
0 0 0 rgb
f
339.153 587.9 mo
342.188 590.4 345.931 592.1 350.078 592.4 cv
350.078 581.8 li
348.864 581.6 347.751 581.1 346.74 580.4 cv
339.153 587.9 li
cp
f
338.141 557.6 mo
349.977 564.3 li
349.977 560.7 li
349.977 553.4 li
349.977 553.3 349.977 553.1 350.078 553 cv
350.179 544.5 li
332.679 534.7 li
332.578 554.6 li
338.141 557.6 li
338.141 557.6 li
cp
f
363.937 559.3 mo
361.003 556.8 357.159 555.1 353.012 554.8 cv
353.012 560.6 li
353.012 565.4 li
354.226 565.6 355.338 566.1 356.35 566.8 cv
363.937 559.3 li
cp
f
347.65 566.2 mo
332.578 557.7 li
332.476 572.1 li
343.3 572.1 li
343.705 569.6 345.323 567.4 347.65 566.2 cv
cp
f
353.012 581.8 mo
353.012 592.4 li
357.159 592.1 361.003 590.4 363.937 587.9 cv
356.35 580.4 li
355.338 581.1 354.226 581.6 353.012 581.8 cv
cp
f
356.957 573.6 mo
356.957 570.6 354.529 568.2 351.494 568.2 cv
348.459 568.2 346.032 570.6 346.032 573.6 cv
346.032 576.6 348.459 579 351.494 579 cv
354.529 579 356.957 576.6 356.957 573.6 cv
cp
f
359.789 572.2 mo
370.512 572.2 li
370.209 568.1 368.489 564.3 365.96 561.4 cv
358.373 568.9 li
359.081 569.8 359.587 570.9 359.789 572.2 cv
cp
f
359.789 575 mo
359.587 576.2 359.081 577.3 358.373 578.3 cv
365.96 585.8 li
368.489 582.8 370.209 579.1 370.512 575 cv
359.789 575 li
cp
f
173.96 514 mo
275.119 514 li
275.119 614 li
173.96 614 li
173.96 514 li
cp
1 1 1 rgb
f
248.919 549.6 mo
246.188 545.6 241.838 543.1 236.982 542.7 cv
239.612 538.9 li
240.422 537.8 240.118 536.2 238.904 535.4 cv
237.792 534.6 236.173 534.9 235.364 536.1 cv
230.913 542.6 li
229.294 542.6 li
231.823 538.8 li
232.632 537.7 232.329 536.1 231.115 535.3 cv
230.002 534.5 228.384 534.8 227.575 536 cv
223.124 542.5 li
198.845 542.5 li
197.429 542.5 196.316 543.6 196.316 545 cv
196.316 546.4 197.429 547.5 198.845 547.5 cv
224.641 547.5 li
224.641 547.5 li
224.641 547.5 li
232.329 547.5 li
232.329 547.5 li
232.329 547.5 li
235.465 547.5 li
239.208 547.5 242.647 549.3 244.771 552.3 cv
246.896 555.4 247.401 559.1 245.985 562.6 cv
242.748 571.1 li
241.636 573.9 239.309 575.8 235.566 577 cv
213.817 581 li
224.236 561.6 li
224.843 560.4 224.438 558.9 223.225 558.2 cv
222.011 557.6 220.493 558 219.785 559.2 cv
206.837 583.2 li
206.331 584 206.432 585.1 207.039 585.9 cv
207.545 586.5 208.253 586.9 209.063 586.9 cv
209.265 586.9 209.366 586.9 209.568 586.9 cv
212.502 586.4 li
211.187 588 li
210.276 589.1 210.479 590.7 211.591 591.5 cv
212.097 591.9 212.603 592 213.21 592 cv
213.918 592 214.727 591.7 215.233 591.1 cv
220.19 584.9 li
222.517 584.5 li
219.988 588.2 li
219.178 589.3 219.482 590.9 220.696 591.7 cv
221.1 592 221.606 592.1 222.112 592.1 cv
222.921 592.1 223.73 591.7 224.236 591 cv
229.396 583.3 li
229.396 583.3 229.396 583.2 229.497 583.2 cv
236.679 581.9 li
236.78 581.9 236.881 581.9 236.982 581.8 cv
242.344 580.2 245.884 577.2 247.604 572.9 cv
250.841 564.6 li
252.662 559.6 251.954 554 248.919 549.6 cv
cp
0 0 0 rgb
f
46.5 514 mo
147.659 514 li
147.659 614 li
46.5 614 li
46.5 514 li
cp
1 1 1 rgb
f
91.4146 556.5 mo
88.1777 560.8 li
88.1777 566.2 li
91.4146 570.6 li
96.5737 572.2 li
101.733 570.5 li
104.97 566.2 li
104.97 560.8 li
101.733 556.4 li
96.5737 554.8 li
91.4146 556.5 li
cp
0 0 0 rgb
f
89.7959 543.2 mo
96.0679 541.2 li
96.3716 541.1 96.6748 541.1 96.9785 541.2 cv
103.25 543.2 li
108.51 544.9 li
112.456 539.5 li
105.172 537.1 li
96.4727 534.3 li
80.5908 539.5 li
84.5356 544.9 li
89.7959 543.2 li
cp
f
103.756 554.4 mo
107.499 559.5 li
107.701 559.7 107.802 560 107.802 560.3 cv
107.802 566.6 li
107.802 566.9 107.701 567.2 107.499 567.4 cv
103.756 572.5 li
103.554 572.7 103.351 572.9 103.048 573 cv
96.9785 575 li
96.877 575 96.6748 575.1 96.5737 575.1 cv
96.4727 575.1 96.27 575.1 96.1689 575 cv
90.0996 573.1 li
89.7959 573 89.5938 572.8 89.3916 572.6 cv
85.6484 567.5 li
85.4463 567.3 85.3452 567 85.3452 566.7 cv
85.3452 560.4 li
85.3452 560.1 85.4463 559.8 85.6484 559.6 cv
89.3916 554.5 li
89.5938 554.3 89.7959 554.1 90.0996 554 cv
96.1689 552 li
96.4727 551.9 96.7759 551.9 97.0796 552 cv
103.149 553.9 li
103.352 553.9 103.655 554.1 103.756 554.4 cv
cp
96.4727 544 mo
90.7065 545.9 li
84.9404 547.8 li
81.3999 552.7 li
77.8594 557.6 li
77.8594 569.6 li
85.0415 579.3 li
90.8076 581.1 li
96.5737 582.9 li
102.34 581 li
108.106 579.1 li
115.187 569.3 li
115.187 557.3 li
108.004 547.6 li
102.239 545.8 li
96.4727 544 li
cp
f
124.595 554.4 mo
114.782 541.1 li
110.837 546.5 li
117.918 556.1 li
118.121 556.3 118.222 556.6 118.222 556.9 cv
118.222 569.9 li
118.222 570.2 118.121 570.5 117.918 570.7 cv
110.23 581.3 li
110.028 581.5 109.826 581.7 109.522 581.8 cv
103.25 583.8 li
96.9785 585.8 li
96.877 585.8 96.6748 585.9 96.5737 585.9 cv
96.4727 585.9 96.27 585.9 96.1689 585.8 cv
89.897 583.8 li
83.6255 581.8 li
83.3218 581.7 83.1196 581.5 82.917 581.3 cv
75.229 570.8 li
75.0269 570.6 74.9258 570.3 74.9258 570 cv
74.9258 557 li
74.9258 556.7 75.0269 556.4 75.229 556.2 cv
79.0732 550.9 li
82.3101 546.5 li
78.3652 541.1 li
73.813 547.3 li
68.4517 554.6 li
68.5527 572.6 li
79.2754 587.1 li
87.9751 589.9 li
96.6748 592.7 li
113.973 587 li
119.334 579.7 li
124.696 572.4 li
124.595 554.4 li
cp
f
556.341 388 mo
657.5 388 li
657.5 488 li
556.341 488 li
556.341 388 li
cp
1 1 1 rgb
f
617.34 434.5 mo
614.406 433.4 610.563 432.8 606.415 432.8 cv
602.268 432.8 598.423 433.4 595.489 434.5 cv
592.657 435.6 591.747 436.8 591.747 437.5 cv
591.747 438.2 592.758 439.4 595.489 440.5 cv
598.423 441.6 602.268 442.2 606.415 442.2 cv
610.563 442.2 614.406 441.6 617.34 440.5 cv
620.172 439.4 621.083 438.2 621.083 437.5 cv
621.083 436.8 620.071 435.6 617.34 434.5 cv
cp
0 0 0 rgb
f
606.415 445.2 mo
601.964 445.2 597.715 444.5 594.479 443.3 cv
594.377 443.3 594.275 443.2 594.175 443.2 cv
599.435 453.9 li
606.516 468.1 li
613.597 453.9 li
618.857 443.2 li
618.756 443.2 618.655 443.3 618.554 443.3 cv
615.114 444.5 610.865 445.2 606.415 445.2 cv
cp
f
606.415 429.8 mo
610.865 429.8 615.114 430.5 618.352 431.7 cv
618.452 431.7 618.554 431.8 618.756 431.8 cv
606.415 407 li
594.073 431.9 li
594.175 431.9 594.275 431.8 594.377 431.8 cv
597.715 430.5 601.964 429.8 606.415 429.8 cv
cp
f
428.881 388 mo
530.04 388 li
530.04 488 li
428.881 488 li
428.881 388 li
cp
1 1 1 rgb
f
500.603 452 mo
500.4 451.7 499.995 451.5 499.591 451.5 cv
479.359 451.5 li
481.989 441.8 li
488.868 439.3 li
489.272 439.2 489.576 438.8 489.678 438.4 cv
491.6 431.4 li
491.7 431.1 491.6 430.8 491.498 430.5 cv
491.396 430.3 li
491.094 429.7 490.386 429.5 489.88 429.7 cv
484.721 431.6 li
489.374 413 li
489.475 412.6 489.374 412.2 489.172 411.9 cv
488.969 411.6 488.564 411.4 488.16 411.4 cv
472.986 411.4 li
472.379 411.4 471.873 411.8 471.772 412.3 cv
464.994 438.7 li
459.835 440.6 li
459.431 440.7 459.127 441.1 459.026 441.4 cv
457.104 448.6 li
457.003 449.1 457.104 449.5 457.509 449.8 cv
457.913 450.1 458.318 450.2 458.824 450.1 cv
462.364 448.8 li
458.723 462 li
458.621 462.4 458.723 462.8 458.925 463.1 cv
459.127 463.4 459.532 463.6 459.937 463.6 cv
497.062 463.6 li
497.669 463.6 498.175 463.2 498.275 462.7 cv
500.805 453.1 li
501.007 452.7 500.906 452.3 500.603 452 cv
cp
0 0 0 rgb
f
301.42 388 mo
402.579 388 li
402.579 488 li
301.42 488 li
301.42 388 li
cp
1 1 1 rgb
f
351.899 440.8 mo
345.829 440.8 li
332.476 429.8 li
332.072 429.4 331.465 429.2 330.858 429.2 cv
323.878 429.2 li
322.461 429.2 321.349 430.3 321.349 431.7 cv
321.349 433.1 322.461 434.2 323.878 434.2 cv
329.947 434.2 li
343.3 445.2 li
343.705 445.6 344.312 445.8 344.919 445.8 cv
351.899 445.8 li
353.315 445.8 354.428 444.7 354.428 443.3 cv
354.428 441.9 353.315 440.8 351.899 440.8 cv
cp
0 0 0 rgb
f
370.613 440.8 mo
364.544 440.8 li
351.191 429.8 li
350.786 429.4 350.179 429.2 349.572 429.2 cv
342.592 429.2 li
341.176 429.2 340.063 430.3 340.063 431.7 cv
340.063 433.1 341.176 434.2 342.592 434.2 cv
348.662 434.2 li
362.015 445.2 li
362.419 445.6 363.026 445.8 363.633 445.8 cv
370.613 445.8 li
372.029 445.8 373.143 444.7 373.143 443.3 cv
373.143 441.9 372.029 440.8 370.613 440.8 cv
cp
f
379.212 429.2 mo
363.532 429.2 li
362.116 429.2 361.003 430.3 361.003 431.7 cv
361.003 433.1 362.116 434.2 363.532 434.2 cv
376.582 434.2 li
376.582 443.3 li
376.582 444.7 377.694 445.8 379.11 445.8 cv
380.526 445.8 381.64 444.7 381.64 443.3 cv
381.64 431.7 li
381.74 430.3 380.628 429.2 379.212 429.2 cv
cp
f
333.185 440.8 mo
323.777 440.8 li
322.36 440.8 321.248 441.9 321.248 443.3 cv
321.248 444.7 322.36 445.8 323.777 445.8 cv
333.185 445.8 li
334.601 445.8 335.713 444.7 335.713 443.3 cv
335.713 441.9 334.601 440.8 333.185 440.8 cv
cp
f
173.96 388 mo
275.119 388 li
275.119 488 li
173.96 488 li
173.96 388 li
cp
1 1 1 rgb
f
240.422 453.6 mo
238.601 453.6 236.881 454.5 235.769 455.8 cv
227.069 451.5 li
227.372 450.4 227.575 449.2 227.575 447.9 cv
227.575 443.6 225.45 439.8 222.213 437.5 cv
231.823 421.2 li
232.329 421.3 232.835 421.4 233.341 421.4 cv
236.578 421.4 239.309 418.8 239.309 415.5 cv
239.309 412.3 236.679 409.6 233.341 409.6 cv
230.002 409.6 227.372 412.2 227.372 415.5 cv
227.372 417.3 228.182 419 229.598 420 cv
219.988 436.2 li
218.672 435.6 217.357 435.2 215.84 435.1 cv
215.84 428.2 li
218.47 427.6 220.493 425.3 220.493 422.5 cv
220.493 419.3 217.863 416.6 214.525 416.6 cv
211.288 416.6 208.557 419.2 208.557 422.5 cv
208.557 425.3 210.58 427.7 213.21 428.2 cv
213.21 435.1 li
206.635 435.7 201.476 441.2 201.476 447.9 cv
201.476 455 207.242 460.7 214.424 460.7 cv
219.38 460.7 223.73 457.9 225.956 453.8 cv
234.656 458 li
234.555 458.5 234.453 458.9 234.453 459.4 cv
234.453 462.6 237.083 465.3 240.422 465.3 cv
243.76 465.3 246.39 462.7 246.39 459.4 cv
246.39 456.2 243.659 453.6 240.422 453.6 cv
cp
0 0 0 rgb
f
46.5 388 mo
147.659 388 li
147.659 488 li
46.5 488 li
46.5 388 li
cp
1 1 1 rgb
f
83.2207 428.7 mo
84.9404 430.4 li
87.3682 432.8 li
87.7729 433.2 88.2788 433.4 88.7842 433.5 cv
88.8857 433.5 89.0879 433.5 89.189 433.5 cv
89.189 433.5 li
89.897 433.5 90.5039 433.2 91.0098 432.8 cv
92.9321 430.9 li
93.9434 429.9 95.1572 429.4 96.5737 429.4 cv
96.5737 429.4 li
97.8887 429.4 99.2036 429.9 100.215 430.9 cv
102.137 432.8 li
102.239 432.9 102.239 432.9 102.34 433 cv
102.846 433.4 103.352 433.6 103.958 433.6 cv
104.262 433.6 104.565 433.5 104.97 433.4 cv
105.375 433.3 105.577 433.1 105.779 432.8 cv
108.51 430.1 li
109.927 428.7 li
109.927 428.7 li
111.646 427 li
96.5737 412.2 li
81.6021 427 li
83.2207 428.7 li
83.2207 428.7 li
cp
0 0 0 rgb
f
110.837 431.3 mo
107.6 434.5 li
105.678 436.4 102.643 436.5 100.62 434.7 cv
100.519 434.6 100.519 434.6 100.417 434.5 cv
98.4956 432.6 li
98.0908 432.2 97.6865 432 97.1807 431.9 cv
96.9785 431.9 96.877 431.9 96.6748 431.9 cv
96.6748 431.9 li
95.9668 431.9 95.3599 432.2 94.854 432.6 cv
92.9321 434.5 li
91.9204 435.5 90.7065 436 89.29 436 cv
89.29 436 li
89.29 436 li
87.9751 436 86.7612 435.5 85.8506 434.7 cv
85.7495 434.6 85.7495 434.6 85.6484 434.5 cv
82.4116 431.3 li
73.5093 440 li
96.5737 462.8 li
119.638 440 li
110.837 431.3 li
cp
f
556.341 262 mo
657.5 262 li
657.5 362 li
556.341 362 li
556.341 262 li
cp
1 1 1 rgb
f
622.499 326.3 mo
622.499 327.1 621.893 327.7 621.083 327.7 cv
620.273 327.7 619.667 327.1 619.667 326.3 cv
619.667 322.3 li
619.363 322.7 618.958 323.2 618.554 323.6 cv
615.216 326.9 610.865 328.7 606.111 328.7 cv
606.111 328.7 li
601.458 328.7 597.007 326.9 593.669 323.6 cv
590.33 320.3 588.51 316 588.51 311.3 cv
588.51 306.7 590.33 302.3 593.669 299 cv
597.007 295.7 601.356 293.9 606.111 293.9 cv
606.111 293.9 li
610.765 293.9 615.216 295.7 618.554 299 cv
619.06 299.5 619.06 300.4 618.554 301 cv
618.048 301.5 617.138 301.5 616.53 301 cv
613.799 298.3 610.057 296.7 606.111 296.7 cv
606.111 296.7 li
602.166 296.7 598.423 298.2 595.691 301 cv
592.859 303.8 591.342 307.4 591.342 311.3 cv
591.342 315.2 592.859 318.9 595.691 321.6 cv
598.423 324.3 602.166 325.9 606.111 325.9 cv
606.111 325.9 li
610.057 325.9 613.799 324.4 616.53 321.6 cv
617.744 320.4 618.554 319.2 619.06 317.7 cv
612.687 317.7 li
611.877 317.7 611.271 317.1 611.271 316.3 cv
611.271 315.5 611.877 314.9 612.687 314.9 cv
621.083 314.9 li
621.083 314.9 621.184 314.9 621.285 314.9 cv
621.285 314.9 li
621.387 314.9 li
621.487 314.9 621.589 314.9 621.689 315 cv
621.689 315 li
621.689 315 621.791 315 621.791 315.1 cv
621.791 315.1 621.791 315.1 621.892 315.1 cv
621.892 315.1 621.892 315.1 621.993 315.1 cv
621.993 315.1 621.993 315.1 622.095 315.2 cv
622.095 315.2 li
622.095 315.2 622.095 315.2 622.195 315.3 cv
622.195 315.3 li
622.195 315.3 622.195 315.3 622.297 315.4 cv
622.297 315.4 li
622.297 315.4 622.297 315.4 622.297 315.5 cv
622.297 315.5 622.297 315.5 622.297 315.6 cv
622.297 315.6 li
622.297 315.6 622.297 315.6 622.297 315.7 cv
622.297 315.7 li
622.297 315.8 li
622.297 315.8 li
622.297 315.9 li
622.297 315.9 622.297 315.9 622.297 316 cv
622.297 316 622.297 316 622.297 316.1 cv
622.297 316.2 li
622.297 316.2 li
622.297 316.3 li
622.499 326.3 li
622.499 326.3 li
cp
606.111 285.9 mo
591.949 285.9 580.417 297.3 580.417 311.2 cv
580.417 325.4 591.747 337 605.605 337 cv
632.21 337 li
632.21 311.3 li
632.21 297.3 620.476 285.9 606.111 285.9 cv
cp
0 0 0 rgb
f
428.881 262 mo
530.04 262 li
530.04 362 li
428.881 362 li
428.881 262 li
cp
1 1 1 rgb
f
502.322 325.9 mo
502.221 325.9 491.296 324.8 483.203 312.9 cv
482.394 311.8 480.877 311.4 479.662 312.2 cv
478.55 313 478.146 314.5 478.954 315.7 cv
488.362 329.6 501.311 330.8 501.816 330.9 cv
501.918 330.9 501.918 330.9 502.019 330.9 cv
503.334 330.9 504.446 329.9 504.548 328.6 cv
504.75 327.2 503.638 326 502.322 325.9 cv
cp
0 0 0 rgb
f
491.094 332.2 mo
491.094 332.2 488.666 331.3 485.935 329 cv
482.293 326 479.662 322.1 478.146 317.5 cv
477.74 316.2 476.324 315.5 475.01 315.9 cv
473.694 316.3 472.986 317.7 473.391 319 cv
477.74 332.6 488.969 336.7 489.475 336.9 cv
489.778 337 490.082 337 490.284 337 cv
491.296 337 492.308 336.4 492.712 335.3 cv
493.116 334.1 492.408 332.7 491.094 332.2 cv
cp
f
480.674 335.4 mo
480.674 335.4 478.246 333.7 475.92 330.8 cv
472.986 327.2 471.873 323.8 472.379 320.5 cv
472.581 319.1 471.671 317.9 470.255 317.6 cv
468.839 317.4 467.625 318.3 467.321 319.7 cv
465.602 330.7 477.134 339.1 477.64 339.4 cv
478.044 339.7 478.55 339.9 479.157 339.9 cv
479.966 339.9 480.674 339.5 481.18 338.9 cv
481.989 337.8 481.787 336.2 480.674 335.4 cv
cp
f
484.315 309.4 mo
483.709 310.6 484.215 312.1 485.429 312.7 cv
485.833 312.9 486.137 313 486.541 313 cv
487.452 313 488.362 312.5 488.767 311.6 cv
496.253 296.6 490.892 284.9 490.588 284.4 cv
489.98 283.1 488.463 282.6 487.249 283.2 cv
485.935 283.8 485.429 285.3 486.035 286.5 cv
486.238 286.7 490.688 296.5 484.315 309.4 cv
cp
f
490.284 312.7 mo
489.374 313.7 489.374 315.3 490.486 316.2 cv
490.992 316.6 491.6 316.9 492.206 316.9 cv
492.914 316.9 493.622 316.6 494.027 316.1 cv
503.738 305.6 501.715 293.9 501.614 293.4 cv
501.412 292 500.097 291.1 498.681 291.4 cv
497.265 291.6 496.354 292.9 496.657 294.3 cv
496.657 294.4 498.275 304 490.284 312.7 cv
cp
f
506.166 300.2 mo
504.75 300 503.536 301 503.435 302.4 cv
503.435 302.4 503.132 305.4 501.816 308.7 cv
500.097 313 497.669 315.7 494.634 316.9 cv
493.319 317.4 492.712 318.8 493.218 320.1 cv
493.622 321.1 494.533 321.7 495.545 321.7 cv
495.848 321.7 496.151 321.6 496.455 321.5 cv
506.976 317.5 508.493 303.4 508.493 302.8 cv
508.594 301.5 507.582 300.3 506.166 300.2 cv
cp
f
476.526 311.2 mo
477.842 311.5 479.258 310.7 479.562 309.4 cv
479.865 308.1 479.056 306.7 477.74 306.4 cv
461.353 302.2 450.934 309.7 450.428 310.1 cv
449.314 310.9 449.112 312.5 449.922 313.6 cv
450.428 314.3 451.136 314.6 451.945 314.6 cv
452.451 314.6 452.957 314.4 453.462 314.1 cv
453.563 314 462.466 307.7 476.526 311.2 cv
cp
f
459.026 302.4 mo
459.026 302.4 461.454 301.5 464.994 301.3 cv
469.749 301.1 474.301 302.3 478.55 304.8 cv
478.954 305 479.359 305.2 479.865 305.2 cv
480.775 305.2 481.585 304.8 481.989 304 cv
482.697 302.8 482.293 301.3 481.079 300.6 cv
468.737 293.3 457.509 297.6 457.003 297.8 cv
455.688 298.3 455.081 299.8 455.587 301.1 cv
456.193 302.3 457.711 302.9 459.026 302.4 cv
cp
f
465.703 294.2 mo
465.703 294.2 468.737 293.9 472.278 294.5 cv
476.83 295.3 480.067 297.1 481.888 299.9 cv
482.394 300.6 483.203 301 484.013 301 cv
484.519 301 484.923 300.9 485.327 300.6 cv
486.541 299.9 486.845 298.3 486.137 297.1 cv
480.067 287.7 465.804 289.1 465.197 289.2 cv
463.78 289.3 462.769 290.6 462.972 291.9 cv
463.072 293.4 464.286 294.3 465.703 294.2 cv
cp
f
301.42 262 mo
402.579 262 li
402.579 362 li
301.42 362 li
301.42 262 li
cp
1 1 1 rgb
f
358.575 310.8 mo
345.728 310.8 li
345.728 321.1 li
345.728 321.8 345.121 322.4 344.413 322.4 cv
343.705 322.4 343.098 321.8 343.098 321.1 cv
343.098 309.4 li
343.098 308.7 343.705 308.1 344.413 308.1 cv
358.575 308.1 li
361.711 308.1 364.342 305.6 364.342 302.4 cv
364.342 299.3 361.813 296.7 358.575 296.7 cv
344.413 296.7 li
343.705 296.7 343.098 296.1 343.098 295.4 cv
343.098 294.7 343.705 294.1 344.413 294.1 cv
358.575 294.1 li
363.229 294.1 366.972 297.8 366.972 302.4 cv
366.972 307 363.229 310.8 358.575 310.8 cv
cp
337.332 303.8 mo
336.624 303.8 336.017 303.2 336.017 302.5 cv
336.017 301.8 336.624 301.2 337.332 301.2 cv
346.74 301.2 li
347.448 301.2 348.055 301.8 348.055 302.5 cv
348.055 303.2 347.448 303.8 346.74 303.8 cv
337.332 303.8 li
cp
372.434 289.1 mo
351.494 285.2 li
330.554 289.1 li
330.554 290.3 330.554 291.5 330.554 292.6 cv
330.554 304.8 330.554 310.9 331.971 315.4 cv
333.387 319.7 336.421 322.7 342.39 328.7 cv
343.502 329.8 344.717 331 346.032 332.4 cv
351.494 337.9 li
356.957 332.4 li
358.271 331.1 359.485 329.8 360.599 328.7 cv
366.566 322.7 369.602 319.7 371.018 315.4 cv
372.535 311 372.434 304.9 372.434 292.6 cv
372.434 291.5 372.434 290.3 372.434 289.1 cv
cp
0 0 0 rgb
f
173.96 262 mo
275.119 262 li
275.119 362 li
173.96 362 li
173.96 262 li
cp
1 1 1 rgb
f
239.713 300.8 mo
235.364 310.2 li
245.176 310.2 li
239.713 300.8 li
cp
0 0 0 rgb
f
245.176 312.8 mo
235.364 312.8 li
239.713 321.9 li
245.176 312.8 li
cp
f
247.503 295.7 mo
241.433 298.5 li
246.491 307.2 li
247.503 295.7 li
cp
f
233.138 314.3 mo
226.158 325.2 li
237.589 323.7 li
233.138 314.3 li
cp
f
231.52 283.8 mo
224.034 283.9 li
216.953 283.9 li
223.832 293.8 li
231.52 283.8 li
cp
f
237.488 296.3 mo
233.138 286 li
226.36 294.9 li
237.488 296.3 li
cp
f
246.39 293.3 mo
236.072 285.9 li
240.219 296.2 li
246.39 293.3 li
cp
f
214.525 314.2 mo
209.669 323.7 li
221.1 325.2 li
214.525 314.2 li
cp
f
237.589 299 mo
226.158 297.5 li
233.138 308.7 li
237.589 299 li
cp
f
230.913 312.8 mo
216.75 312.8 li
223.629 324.3 li
230.913 312.8 li
cp
f
214.525 308.7 mo
221.1 297.5 li
209.669 299 li
214.525 308.7 li
cp
f
216.75 310.2 mo
230.913 310.2 li
223.629 298.4 li
216.75 310.2 li
cp
f
221.303 294.8 mo
214.727 285.2 li
209.771 296.3 li
221.303 294.8 li
cp
f
202.588 310.2 mo
212.401 310.2 li
207.646 300.8 li
202.588 310.2 li
cp
f
212.299 312.8 mo
202.588 312.8 li
207.646 321.9 li
212.299 312.8 li
cp
f
236.375 336.8 mo
246.693 329.4 li
240.219 326.5 li
236.375 336.8 li
cp
f
241.433 324.1 mo
247.604 326.9 li
246.491 315.7 li
241.433 324.1 li
cp
f
216.953 339.2 mo
231.014 339.1 li
223.832 328.9 li
216.953 339.2 li
cp
f
250.639 302.9 mo
249.729 300.3 li
248.919 310.2 li
252.965 310.2 li
250.639 302.9 li
cp
f
226.259 327.8 mo
233.239 337.7 li
237.488 326.3 li
226.259 327.8 li
cp
f
248.919 312.8 mo
249.83 322.6 li
250.639 320 li
252.965 312.8 li
248.919 312.8 li
cp
f
198.238 300.4 mo
195.103 310.2 li
198.946 310.2 li
198.238 300.4 li
cp
f
205.825 298.5 mo
200.565 295.8 li
201.375 306.9 li
205.825 298.5 li
cp
f
197.429 320.1 mo
198.238 322.6 li
198.946 312.8 li
195.103 312.8 li
197.429 320.1 li
cp
f
211.288 286.5 mo
201.678 293.4 li
207.039 296.1 li
211.288 286.5 li
cp
f
201.577 329.6 mo
207.646 333.9 li
211.389 336.6 li
207.039 326.6 li
201.577 329.6 li
cp
f
209.771 326.3 mo
214.727 337.7 li
221.303 327.8 li
209.771 326.3 li
cp
f
201.375 316.1 mo
200.565 327.1 li
205.825 324.2 li
201.375 316.1 li
cp
f
46.5 262 mo
147.659 262 li
147.659 362 li
46.5 362 li
46.5 262 li
cp
1 1 1 rgb
f
107.802 331.3 mo
85.0415 331.3 li
85.0415 314 li
105.071 314 li
107.903 314 li
112.759 314 116.603 317.9 116.603 322.6 cv
116.603 327.4 112.658 331.3 107.802 331.3 cv
cp
85.0415 291.7 mo
105.071 291.7 li
109.927 291.7 113.771 295.6 113.771 300.3 cv
113.771 305.1 109.826 308.9 105.071 308.9 cv
85.0415 308.9 li
85.0415 291.7 li
85.0415 291.7 li
cp
114.175 310.5 mo
117.008 308 118.829 304.4 118.829 300.3 cv
118.829 292.8 112.658 286.7 105.071 286.7 cv
82.5127 286.7 li
81.0962 286.7 79.9834 287.8 79.9834 289.2 cv
79.9834 295 li
74.1162 295 li
72.7002 295 71.5874 296.1 71.5874 297.5 cv
71.5874 298.9 72.7002 300 74.1162 300 cv
79.9834 300 li
79.9834 311.4 li
79.9834 322.8 li
74.1162 322.8 li
72.7002 322.8 71.5874 323.9 71.5874 325.3 cv
71.5874 326.7 72.7002 327.8 74.1162 327.8 cv
79.9834 327.8 li
79.9834 333.6 li
79.9834 335 81.0962 336.1 82.5127 336.1 cv
107.802 336.1 li
115.389 336.1 121.56 330 121.56 322.5 cv
121.661 317.4 118.626 312.8 114.175 310.5 cv
cp
0 0 0 rgb
f
556.341 136 mo
657.5 136 li
657.5 236 li
556.341 236 li
556.341 136 li
cp
1 1 1 rgb
f
600.446 199.2 mo
601.154 199.2 601.862 199 602.47 198.7 cv
602.064 195.5 600.851 192.8 598.929 191.1 cv
597.311 191.7 596.197 193.3 596.197 195 cv
596.197 197.4 598.12 199.2 600.446 199.2 cv
cp
0 0 0 rgb
f
607.325 199.1 mo
607.527 196.1 608.539 193.4 609.955 191.3 cv
610.36 190.6 610.663 190 611.068 189.4 cv
613.597 185.8 616.936 183.6 620.476 183.3 cv
618.25 180.6 615.216 178.5 611.675 177.5 cv
616.632 166.8 li
616.936 166.9 617.138 166.9 617.441 166.9 cv
619.869 166.9 621.791 165 621.791 162.6 cv
621.791 160.2 619.869 158.3 617.441 158.3 cv
615.014 158.3 613.091 160.2 613.091 162.6 cv
613.091 163.8 613.597 164.9 614.406 165.7 cv
609.146 177 li
608.235 176.9 607.224 176.8 606.313 176.8 cv
605.605 176.8 604.998 176.8 604.29 176.9 cv
598.727 165.9 li
599.637 165.1 600.143 164 600.143 162.7 cv
600.143 160.3 598.221 158.4 595.793 158.4 cv
593.365 158.4 591.443 160.3 591.443 162.7 cv
591.443 165.1 593.365 167 595.793 167 cv
595.995 167 596.197 167 596.501 166.9 cv
601.862 177.2 li
598.019 178.2 594.681 180.3 592.253 183.2 cv
595.895 183.6 599.131 185.7 601.66 189.3 cv
604.392 193.2 605.808 198.3 605.808 203.7 cv
605.808 206.8 605.302 209.8 604.392 212.6 cv
604.998 212.7 605.707 212.7 606.313 212.7 cv
607.021 212.7 607.629 212.7 608.235 212.6 cv
607.325 209.8 606.819 206.8 606.819 203.7 cv
606.921 202.2 607.021 200.6 607.325 199.1 cv
cp
f
600.446 201.7 mo
596.703 201.7 593.669 198.7 593.669 195 cv
593.669 192.2 595.389 189.7 598.019 188.8 cv
595.995 186.8 593.669 185.7 591.241 185.7 cv
591.039 185.7 590.836 185.7 590.634 185.7 cv
590.027 186.8 589.42 188 589.016 189.2 cv
589.016 189.3 li
589.016 189.4 588.914 189.5 588.914 189.6 cv
588.914 189.7 588.914 189.7 588.813 189.8 cv
588.813 189.9 588.813 190 588.712 190.1 cv
588.712 190.2 588.61 190.3 588.61 190.5 cv
588.61 190.6 li
588.61 190.8 588.51 190.9 588.51 191.1 cv
588.51 191.2 588.51 191.2 588.51 191.3 cv
588.51 191.4 588.51 191.6 588.408 191.7 cv
588.408 191.8 588.408 191.8 588.408 191.9 cv
588.408 192.1 588.408 192.2 588.308 192.4 cv
588.308 192.5 li
588.308 192.7 588.308 192.9 588.206 193 cv
588.206 193.1 li
588.206 193.2 588.206 193.4 588.206 193.5 cv
588.206 193.6 588.206 193.6 588.206 193.7 cv
588.206 193.8 588.206 194 588.206 194.1 cv
588.206 194.2 588.206 194.2 588.206 194.3 cv
588.206 194.5 588.206 194.7 588.206 194.8 cv
588.206 194.9 588.206 195.1 588.206 195.2 cv
588.206 195.3 li
588.206 195.4 588.206 195.5 588.206 195.6 cv
588.206 195.7 588.206 195.7 588.206 195.8 cv
588.206 195.9 588.206 196 588.206 196 cv
588.206 196.1 588.206 196.1 588.206 196.2 cv
588.206 196.3 588.206 196.3 588.206 196.4 cv
588.206 196.5 588.206 196.5 588.206 196.6 cv
588.206 196.7 588.206 196.7 588.206 196.8 cv
588.206 197 588.206 197.2 588.308 197.4 cv
588.308 197.4 li
588.308 197.5 588.308 197.6 588.308 197.7 cv
588.308 197.8 li
588.308 197.9 588.308 198 588.408 198.1 cv
588.408 198.2 li
588.408 198.3 588.408 198.4 588.51 198.5 cv
588.51 198.6 li
588.51 198.7 588.51 198.8 588.61 198.9 cv
588.61 198.9 li
588.712 199.2 588.813 199.6 588.914 199.9 cv
588.914 200 li
588.914 200.1 589.016 200.2 589.016 200.3 cv
589.016 200.4 li
589.016 200.5 589.116 200.6 589.116 200.6 cv
589.116 200.7 589.116 200.7 589.218 200.8 cv
589.218 200.9 589.319 200.9 589.319 201 cv
589.319 201.1 589.42 201.1 589.42 201.2 cv
589.42 201.2 589.42 201.3 589.521 201.3 cv
589.622 201.6 589.724 201.8 589.824 202.1 cv
589.824 202.1 li
592.05 207.1 596.603 210.8 601.964 212.2 cv
602.874 209.6 603.38 206.7 603.38 203.7 cv
603.38 202.8 603.38 201.9 603.278 201 cv
602.368 201.5 601.356 201.7 600.446 201.7 cv
cp
f
612.08 192.5 mo
611.068 194.4 610.36 196.5 609.854 198.7 cv
610.461 199 611.169 199.2 611.877 199.2 cv
614.204 199.2 616.126 197.3 616.126 195 cv
616.126 193.2 615.014 191.7 613.395 191.1 cv
612.889 191.5 612.484 192 612.08 192.5 cv
cp
f
624.725 194.2 mo
624.725 194.1 li
624.725 194 624.725 193.8 624.725 193.7 cv
624.725 193.6 li
624.725 193.4 624.725 193.3 624.725 193.1 cv
624.725 193.1 li
624.725 192.7 624.623 192.3 624.522 192 cv
624.522 192 li
624.421 191.4 624.32 190.9 624.117 190.3 cv
624.117 190.3 li
624.117 190.1 624.017 189.9 623.915 189.8 cv
623.915 189.8 li
623.814 189.4 623.713 189.1 623.511 188.7 cv
623.511 188.7 623.511 188.6 623.409 188.6 cv
623.409 188.5 623.309 188.4 623.309 188.3 cv
623.309 188.2 623.207 188.2 623.207 188.1 cv
623.207 188 623.106 187.9 623.106 187.9 cv
623.005 187.6 622.803 187.2 622.601 186.9 cv
622.601 186.9 li
622.499 186.6 622.297 186.4 622.195 186.1 cv
621.993 186.1 621.791 186.1 621.589 186.1 cv
619.06 186.1 616.632 187.2 614.608 189.3 cv
616.936 190.4 618.554 192.7 618.554 195.4 cv
618.554 199.1 615.519 202.1 611.776 202.1 cv
610.967 202.1 610.157 202 609.449 201.7 cv
609.349 202.5 609.349 203.3 609.349 204.2 cv
609.349 207.2 609.854 210.1 610.765 212.7 cv
610.765 212.7 li
610.865 212.7 610.865 212.7 610.967 212.6 cv
611.068 212.6 611.169 212.6 611.169 212.5 cv
611.271 212.5 li
611.371 212.5 611.473 212.4 611.574 212.4 cv
611.574 212.4 li
616.328 210.9 620.172 207.6 622.397 203.4 cv
622.397 203.4 li
622.499 203.3 622.499 203.2 622.601 203 cv
622.601 203 622.601 203 622.601 202.9 cv
622.601 202.8 622.701 202.7 622.701 202.6 cv
622.701 202.5 li
622.701 202.4 622.803 202.3 622.803 202.2 cv
622.903 202 623.005 201.7 623.106 201.5 cv
623.106 201.4 li
623.106 201.3 623.207 201.2 623.207 201.1 cv
623.207 201 li
623.207 200.9 623.309 200.8 623.309 200.7 cv
623.309 200.7 623.309 200.7 623.309 200.6 cv
623.309 200.5 623.409 200.4 623.409 200.3 cv
623.409 200.3 li
623.511 199.8 623.713 199.4 623.814 198.9 cv
623.814 198.9 623.814 198.9 623.814 198.8 cv
623.814 198.7 623.814 198.6 623.915 198.5 cv
623.915 198.4 li
623.915 198.3 623.915 198.2 624.017 198.1 cv
624.017 198 li
624.117 197.7 624.117 197.4 624.117 197.1 cv
624.117 197 624.117 197 624.117 196.9 cv
624.117 196.8 624.117 196.8 624.117 196.7 cv
624.117 196.6 624.117 196.6 624.117 196.5 cv
624.117 196.4 624.117 196.4 624.117 196.3 cv
624.117 196.2 624.117 196.1 624.117 196.1 cv
624.117 196 624.117 196 624.117 195.9 cv
624.117 195.8 624.117 195.7 624.117 195.6 cv
624.117 195.5 li
624.117 195.4 624.117 195.2 624.117 195.1 cv
624.725 194.5 624.725 194.4 624.725 194.2 cv
cp
f
428.881 136 mo
530.04 136 li
530.04 236 li
428.881 236 li
428.881 136 li
cp
1 1 1 rgb
f
502.12 184.4 mo
501.715 184.2 501.209 184.2 500.805 184.4 cv
478.954 198.3 li
459.532 185.9 li
458.419 185.2 457.813 184 457.813 182.8 cv
457.813 175.8 li
478.246 188.8 li
478.448 188.9 478.752 189 478.954 189 cv
479.157 189 479.46 188.9 479.662 188.8 cv
502.221 174.5 li
502.626 174.3 502.828 173.8 502.828 173.4 cv
502.828 173 502.626 172.5 502.221 172.3 cv
479.662 158 li
479.258 157.7 478.651 157.7 478.246 158 cv
455.688 172.3 li
455.688 172.3 li
455.587 172.4 li
455.587 172.4 li
455.485 172.5 li
455.485 172.5 li
455.485 172.5 455.485 172.6 455.385 172.6 cv
455.385 172.6 li
455.283 172.7 455.283 172.8 455.283 172.9 cv
455.283 172.9 li
455.283 173 li
455.283 173 li
455.283 173.1 li
455.283 173.1 li
455.283 173.2 455.283 173.2 455.283 173.3 cv
455.283 182.7 li
455.283 184.9 456.396 186.9 458.217 188 cv
478.348 200.8 li
478.752 201.1 479.359 201.1 479.764 200.8 cv
500.198 187.8 li
500.198 194.8 li
500.198 196.1 499.591 197.3 498.479 197.9 cv
478.954 210.4 li
457.205 196.5 li
456.599 196.1 455.789 196.3 455.385 196.9 cv
454.979 197.5 455.182 198.3 455.789 198.7 cv
478.246 213 li
478.448 213.1 478.752 213.2 478.954 213.2 cv
479.157 213.2 479.46 213.1 479.662 213 cv
499.793 200.2 li
501.614 199 502.727 197 502.727 194.9 cv
502.727 185.5 li
502.828 185 502.524 184.6 502.12 184.4 cv
cp
0 0 0 rgb
f
301.42 136 mo
402.579 136 li
402.579 236 li
301.42 236 li
301.42 136 li
cp
1 1 1 rgb
f
373.951 167.1 mo
336.725 167.1 li
336.725 173.4 li
366.264 173.4 li
369.905 173.4 372.839 176.3 372.839 179.9 cv
372.839 191.2 li
372.839 194.8 369.905 197.7 366.264 197.7 cv
334.196 197.7 li
334.196 204 li
373.951 204 li
376.784 204 379.11 201.7 379.11 198.9 cv
379.11 172.2 li
379.11 169.4 376.784 167.1 373.951 167.1 cv
cp
0 0 0 rgb
f
323.878 182.4 mo
353.416 182.4 li
353.416 188.7 li
323.878 188.7 li
323.878 182.4 li
cp
f
173.96 136 mo
275.119 136 li
275.119 236 li
173.96 236 li
173.96 136 li
cp
1 1 1 rgb
f
225.45 205 mo
211.288 205 li
211.288 188 li
217.155 188 li
218.571 188 219.684 186.9 219.684 185.5 cv
219.684 184.1 218.571 183 217.155 183 cv
211.288 183 li
211.288 166 li
225.45 166 li
236.375 166 245.176 174.8 245.176 185.5 cv
245.176 196.3 236.274 205 225.45 205 cv
cp
225.45 161 mo
208.759 161 li
207.343 161 206.23 162.1 206.23 163.5 cv
206.23 183 li
200.363 183 li
198.946 183 197.834 184.1 197.834 185.5 cv
197.834 186.9 198.946 188 200.363 188 cv
206.23 188 li
206.23 207.5 li
206.23 208.9 207.343 210 208.759 210 cv
225.45 210 li
239.106 210 250.234 199 250.234 185.5 cv
250.234 172 239.106 161 225.45 161 cv
cp
0 0 0 rgb
f
46.5 136 mo
147.659 136 li
147.659 236 li
46.5 236 li
46.5 136 li
cp
1 1 1 rgb
f
108.51 181.1 mo
104.464 177.5 98.5967 177.6 96.7759 177.7 cv
93.1343 182.3 87.874 184.9 81.501 185.3 cv
80.894 185.3 80.2871 185.4 79.6802 185.4 cv
77.3535 185.4 75.4316 185.1 74.2173 184.9 cv
74.2173 184.9 74.2173 185 74.3188 185 cv
78.7695 196.1 86.2554 205 96.5737 211.2 cv
99.8105 209.2 102.542 207.2 104.869 205.1 cv
108.106 202.1 110.938 198.9 113.366 195.4 cv
113.164 195.2 113.063 194.8 113.063 194.5 cv
113.164 188.5 111.646 184 108.51 181.1 cv
cp
0 0 0 rgb
f
81.501 182.6 mo
86.8623 182.2 91.1113 180.2 94.2471 176.5 cv
89.9985 171.3 92.5273 163.7 94.146 159.9 cv
92.2236 160.1 90.3018 160.3 88.3799 160.5 cv
82.3101 161.3 76.3418 163.4 70.6768 166.5 cv
70.6768 166.8 70.6768 167.2 70.7783 167.5 cv
70.8794 169.2 70.9805 171 71.1826 172.7 cv
71.4863 175.7 72.1943 178.7 73.2061 181.8 cv
73.3071 181.8 73.4082 181.8 73.6104 181.9 cv
73.6104 182 77.0498 182.9 81.501 182.6 cv
cp
f
97.3828 159.7 mo
96.0679 162.2 92.5273 170.4 96.5737 175 cv
98.7993 174.8 105.375 174.7 110.331 179 cv
113.568 181.9 115.389 186 115.794 191.5 cv
116.401 190.5 116.907 189.4 117.413 188.3 cv
120.649 181.5 122.369 174.1 122.47 166.5 cv
114.58 162.2 106.386 160 97.3828 159.7 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (Glyph_8-Template_196183707356.eps)
%%CreationDate: 12/9/2022 7:51 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7<+3o5/.X;MF3*g1COHpa1Tm=EXrBSnFC>8.65ZDZjL-e=/Jmen03MIfY>B3a0H/q.e\kItLs`b!-3
%5Ph.QDh%QEbHJYUp!^DMpFkr`SrS!goA8e=Q[bf;5QC)2roh+GouktEh);>.]alqOpZYdnYEEDtSG;I<Wup32roX*mIeWQdlgMQ7
%Gl.0gGMiAYmbp)X^Ua6"QbSj$]Y+-V?@VqHgOHb\qXr$5s%CX_nn7?J(LMUhqSh35DdImBfC'4Wb83;:DnhLBU]^Oao's\k]b/Yq
%?@W!ggmdqqk(!$H5CIjlUe#e/m-fH"qU])&p\h^jhgb=mS,`$!B_pf9\p"%QfAF<l5=fG%\4^l?9`B;2m.ETWr8Hu1opU*:Q2L7N
%5JBK$s7u)d^4kW0T%2phM8s%[r^nsLIf)=es6XEZs+Psc]5h!G3e.+[cZ"lF%Jk'GS,>;$$0fh@+Scmn&o[8X?GH=0l^-MDjql8/
%\=]VQr>bhclfaBUI[YWnrTJOKpHIkJPCLXRYeTXfr;*&#HMoM3\GNJ5?[hhISUJ[/n%ShP=9">/ZZ3)D;X3)^rB@,>mI.gfiTo+a
%rq;hb^6c=,='YSbro3=3YJ6C$h>P"]qB`oGl!a+3]uAmAI.usYhoeQ=qt1Kp*5B"Qa'jJpb9,U=q9.[.`o,$`Oh^bdof%Blp:p-X
%IpQa7_)n-HApG-i0"!1tp*e0MSiepGDgZ!Z*ds_0^W%,c?@OO/o<7#!p$8fqq8LZY5BOW8,4EA1#DV]>^AI3=4aKW4S,.X0I/!7)
%s-Nb8HN8=3hgb\&)h1:*J+<"EVg37:s2D0\(XKklo&8sTI%]rto;TraDe*m9rV"k:fDU>OP:h=Zet.eO0E1OESFG&fkkObqr_ibS
%^\I,uIulnol+=DhI/@R6r8ZPX5Ps,t0AlcHlb!2jqUP=YhoR8Go'W^\iIB"25JI"4kNLaZ]R0HHqN0U^k5OIDhu<07kYRlBh<R0$
%X.7A*o"Y3\s8A>VAHIcBfc@$`q)A?OqWkWJSiRA'bAY,-qsQ2qIJYais7Ots^NoYCNdll!s88pIQG:(s=13J5ZB+9OL=*L$P'@Vo
%gg&jJ1cYHuUFu61qgT7Gqtcd8^PgtAkKV8Pn70'-eSj=B_qVB0qX.("Ga?:_5P"6VJ,Sf)^\UE<oA'r7rR9T[]RB\MIM(;Lrj4o\
%]C5E_IlA1#`p^Nir:/Z_k795\rq`[&^O,eD5CN4iIJpqDmr>$3SGQ0YkS<"OqlY2B;dA\Z)?6;2j+HRkQX>U?qnTT<X_iO[0/((i
%ohV;gro)\VG@/&_*HMgbpE.0H7[E&G?iBKEpTO>cHMci/(iso9qPT\;6B%3`:+^\)m0d&>c3qG6J,\2hL3!%\RraKPIJ<<UY@R%r
%`SJl>p7#u,^6)FSf-ZZGooQ5e?S8Bd]6jD9kF__OkF__AT7;%B^O4P+*F_MY:QC4j77sPTQ:>'BBmN=ro8u\K\`]6Mk%FL83D(a&
%FBR@jQA>%D*];JO>93CYkF^;&oiZ_"Ng<mdXc9dCe+Tjb4n[TGDgh9.TCdp<X?Z/,`\Go_UQ.8/(h8OQj6:e*cc5R%bV\o*X(%At
%j_/_Z3L:^]k0s,[T?ZQj`I+qNQ'U4Z.]]_lUT]5\CTSt)4I+qmNb<ApQfH'JT</pq`=mOL-V9=L8)[<j1`i4.i%aV$EVP#Zp%\G@
%q7dG`4L=)Dj`ob)e)PJEpE-#Wp,"upb'T3GJYQK]l1$7f+*EMQ+4B2)r\je!L\1B3Xk1T5dc3j*qtT1^4as?Ks04FR&tMogX7Xag
%cU=rV.An)Qj_9%,?ANL@U0UqD152@]L\s9L-qX&(2%:cK70`QDdkXAa9S]3:/Q6#`e>/f%RGOf7r?jA)+54'pSGL5_Nq`j-;X6F[
%^%:ahB<$;Hq`sn?cotr5C7rp>EkE5BW/71*8n]F5NnVSHOm"26PgE%K>Vf59*RmlbTi=O!/Hn<!a0\56P9*HKq!3?aj-^q6j*9Mf
%FkRFrm;e#Cb,;#IkGTI^g7s;S;0qRN4N9l5F!&ijr&p,6gCNQ=GI7-nO,r`!U]6N!5Oj7's60!^BU#Eh;4^^YW227\J3TF'P/:CJ
%6@7gJfINBdAB4m[7942+/`h]MPAGEc'RfNpg>nnjWRN<UXA@OXC6K;,jL8h;f.!_"VJ2<n^Jh2C?5X%.R!*aqd4EUhh!13-?_CiM
%7E_X$&PXJgASW4aD\(I#Sp>K>Sj,97D:FTWBUoZJTDX9#7K^c"pc+9*]C]#Adc59AlbDHSm98scFo7rRJ#aVD)W_Y3pKMu<G%;YJ
%8#=8VWQipZH:"1"<mm+@[AIiBVVRP3,5>Wn9Z(GhE3P`WFkf@::"_Y8Y*oiDP?UfAR>GAdlY1Cf4G`t.,4)3Wq@48TL,eh]1[;T*
%Np*_W.M4WCcfBVB91+">4U3Ptkd`:mD@b67nD+T>[77>/#Lq$$&(+d^]2Vk2Q=:)n;=m*'6I[li;-[W+SG-se$HtW;n@kKn[j>Mc
%51fM0cCWM<)nPl!\(9s25I#n3hm<%scej47*5D.X&,.5soMIj8O<-Wdh*_4p6[J[o[f;J9FH,kN`J\@^T#tM%?F1O17=+smq(qj=
%9.!#i.@?^?GkOgcaHB!)5HE-$ZfC#`_m>,r1<cZg;]j.LHMTrtbCbbU7Gk\7%prkc*`&BNBRVE8d1gB,ak/8PU)pW25*J"t6tXW,
%\^P*.04G/+@N.Fr=nYfGLF!_SO;V/3-6eJ5jrp&2F.&k#`?&/;/Vd$e-FQMYRjF%]/=>TU^E5GaT?)t`1@r+k!)X]0$*n5tUWEUq
%4nPh4e\eBX7&DUaq@F*fs!flu(<r#r!?ED6RQRka2hWJ2Go+[FZ+:.NV,jVUfp+&]-l/4!4fHCFY7]J]F;PL56(G;9$WM+2_$hA]
%;nQdP2b!bi35jB@4K*Gp$QdW>4L;r'QA8UJe[S1.j.L,\q.KW_*_/:4olQGAEVj+sL\-E&4WY^0`<VFd^\)guX2hQ-4ruoMO<-Wd
%h$:f"ml@2aO)Fh:WQ.5:PWriG5A69GBTu<Eiu^,#+#M+^1s-msb,=Qf)Pu<hd2,U9IK%o>qL?WehiIfthi%8Yj>msY=hWEE$NAF`
%'LFQEC]$[`g77t%s2]EO5gC;h!jVF;Vs<a8GB0UsWg12^mLR]^EJYX>\*W?Caa\N2hY5ObV>9N9r1"pY[+t-@EF88TQZI'Ek3"Qd
%kfsVd^gE]tgUI@+%X^C1+FaAeOF\c--Tls]%smU;a#-?Wn@K0;X\Ouu59>9g,C7eZd.P02QFV:*Ab)FaG?HAq./a#@OO[6p:K]D`
%M<(Gj(,]J`iu#8G.0A`ONFl&'ae5"j!hWY8kZJnODi]CW4o#6#B[C[DNK;`uM6D"!C6pRpD;L&]GiI?`D'NtCb.E-I(OD1Hnj74A
%,PW]pCr^tcZcNl:\KXg,jV]!QE@bRTiI8X%=!^oD<*_:P"5m1dcV[mOr3W?,+?<V27t/cKhP\:U8UjPDdT8L1HBt_POO?=TOTufu
%8A,og=ACB@46OQ(V]5I1:U[>'kU6/4n)MHha>2YR+[mrQf9:fnUm<CU4TXsQ>?-q_"<VNIm(:-)qB_OG5c6U)H,-28;i5OdmH;ZB
%IZ>^=2%f=c8V"\9s&0=&(P_h=M!NEPc=TO12\Z#o:$6C`1X'Etb0U)^cT/$L]Gf%iC3X*Z9cEe.Y`pI;e@KfR#P/m+"9ic?!p"=(
%]nf?C4bMXudJ9b4AX_n1E`l@2[+oN!,s,P_CV'/2l\+oN1HJ>Cr3kg$0h!k^:>tF7RW,=sFVDL_go>L(VnMh>frrE]]s-S#?8J`t
%cC8'3Y._%%=%n'C3d'u+kV-VrOY?e!0$:dA=&Ig%*5s5u<TX(4>jjt]!9^RW05q<X%Mj$di<1bND,!Kj(l%&F4d44#A3;afPt>4C
%EU`%oVMnW9No\eeQ7=,l-kTj?FBN7nCg"pI),k.&--[-A1utp5&CgK6!.fb6!Mn!j;eH(;/:rp(%"8>p5fTo$%t3io>b`ol+Mfi=
%$Q(;-;uRleJ6*a^&>b=pK2:>(-I7dp1Z7d3>7@04BZ5"CDlj"A4D`[$#BfF9[XE\7h6><@V"FVYdN6^r0&WQ+\e#:UTcbR&B)<W6
%Ut'DVq?E)H[l=IM2Ip;b1EHX+:G=H83s4QG$QRJ+b"O14@/Xc"<Y2'aji]DNgmB(1?rFKg&WHANF/F=8'>-m$,)'6gVHlm0,,pH1
%B\XU15Wen]i(jK)2!ji5'kH.'+UmTt,=q#I"$)S(S&V*q7[SqhR:crK4CR_j0Z6j,6:hTB4D3%#ko]?]8)E(@OR=kG1@;\q/D>=H
%39l/bk"KLYhF2:X1>_U5)L?2UQW3k(Gl2Z3WbL5R+aR"S[%>^!FY%H,hQ6XMUnRLf\El*7p\][BomFMp.d)0VA:9pBrM-,14l'U^
%rhPYkn'g.R+V%MiUP_t.o<`V(`QrPrWR&5q9:bPIa!2DZ;tTcF>_M"@Sq@cL=u3+R.4;=9,\N1T7<`P'Y?pMMR.n#_EgLRT(W@j'
%8GujaEp!P^4jj<*]77Zsrh)KgN:lXgUVHh)q=jn'l+`$=GkW"uJ,_`n].ZD3=hd?,^QNegpBK&9f=UqOMqILacd,n0=*X*4`@YHp
%acgr+5Ps^\MG.Bkqp!qM1lCrR:Z&nb)E#G+'#)^:ShH\LI.b88IBnn,MdNb4o"X+ArseuUT)1bNTY3J:L]/eE&@m\iMQ_IK8b<pU
%CR(=+C/c(TnftD='j+81Ji.,Lh#6&%mHaTq91nqKl2@cA-91'SI8TR*=Ve``[dLc/D0KG?UJeMU[371GaU=KaIcb\&g3jT6H2!3Z
%c#tbO=M3`H;[DR2EaM70hUQa%b,UAmh^?gMGI?4ao#uR>\j'_J]dr[*_=!(b0@0N]`='siLAb<?/rtA,k/kmfotCja4*TmC\R(Wg
%*2:ePf%YeL[(5U^4@qQ5SL7=_7cR7Xr"R\Eqma]#Iokb%0ZS2enpT8C+ID>Rf4ENka`:J[4cm-s=l)qXIGWLr?c;lQM\`.G$MLgS
%]f;THDE[`KR"C&.i5YM??dl$!WQDW7DdfR:qisdg_^3`9]I2rB3h*O7rbgiS65Qru`*'M5Mu.e2:G(ObQ[(6Q.c"*MPHq3F5jj8I
%c&@624&K=4a+m7(*i0qPinI!/o',\%j`cDJ_1uCsi<gob]N0;aITCR.kos1DNA&&II^e&!j_"J'Q#nZDA2n^W]qThZS3N2Gl<`TL
%a\jIDWa&"SmW(>``-.^\^Eg#ODKMt!PHRkbhMUpC]b>rj=7N/`UFlX$NBP!deo^Ngj`so;H)N"k?rm*]o!r9LE&c&1Pf;FlSD9NG
%?[;<")Co,_agdj'h3?BX%'LiWO5kRt*IrI-Htb;o1RG6fDkZ)0b15SHO&ki-UKPXdr_[>(1]@06!?doLM=]jRQ!oF"*J_qWg*L5;
%c]S#ENqdH98T%:>e(mRW;O%d-HSL(Y/4R6DALt$FB%E$%4?d(VblrIPigt<LJ!T<^k2H$oQ\7:A?YC/$">\3X>btGUR@"I>RcSsU
%5Wis^*28OaI*iMX#F&)PA?tQ6<Nj%sEe.NBc?!^6cXIgLm>fVCQ(`0.SdFaG^TD232]a!q4PtV[s7Eeq^OQ--X<iAih%tS2;ASJO
%\)72IMmr`-[Dg9Ts3$0nq;pp\?bcO<op9&^\6X4mQm)Is^OKVlP0q_S!KD/Vk#no[AFp@W:KVm1=cM4^/!"pKZ5ED[;lA8=9bp]%
%VJ7?%94@IT?D5G6Pf6b3?([jKjfN;+jI4$0f/K!`nRP1%#jHUi<tU8!)bmpT_6Oi&SkB`a-[9+?!\\>89&1be+F@EBM4Rmfn_Xde
%5\n8IlFhm>%-tIMFK)2^:4RTS$*C`**ke%5qEXsYGqC.iaRXdKo=VV+`I`YI9;4>F\37"H&f)hi55*Hs6e83mG8n3;,)]QF&d#\r
%IcHZMXd^Z?jo$/[MrS9eBia[aMH52PdEg(4h+ifr6!28a/"@V7I`nH+e:o_td-)T07V[?,Lb=-ERPk;TXLNYk9qLtgc)+)JF'BD&
%,X,e!'n(5GT>aC4lPO,6jptUcAGs:q+3CqU+j+'fKfcFhctZ.Z4]]X(AOW2r@`hq_Z<Z3;=Z+,'Z1G21aAX]g+L4i!E@mCYCPg.Y
%cDLLT<KY3(P!s#clmnGo8"7*\LhaNEY`+<!j2A7Y+HZ:q9GPr+8#^s/8?4l'SLg"]s6t&WMU`kCn#S4ADI:QH[0UgXMm?U"*HD[/
%Y#7A?eo5oi<XZq_L/A^tR.0\6pT&PlA*2T<li[$:],):9`U#FJb1@\DQUO+@n$r(>2&FnjG#,`<hfX$_o5M160ASeep(M,S"?TT6
%>$*Cd3nX?>Bp3H^hc_)Z5"unVne!5R20@*)YoEho@U`unO>o+]f@e-Ug)[`>Y%Qq.FPJ)nI^_BO"2)`hf[hp1S`dHsc2>SVURUF.
%]gd)%oJM)LBq/`#1`4RV6_Za:<PnFEMV[AUM><T.m>E^C4&"Ylb9Ril,bGINH==\C!0M7+Pq4Dr@J#I0I@i7AA6SUm-;9k!`Ut2P
%I3\5(?oiQ`R8-`OV>/bP!c`q>.tL:2!pX&j6\:k$c!Tj#Z)Qm$$6n1aQ3-PgblQ*5WZq-i`n92ne^QqBOt8u3`i1*s)]N0@/lE)7
%#auQ<=OM7B0iGJK:R+@o9c4AOU"ndD[;q8&@s!li,I15=;dE)i;Et70,D;,.\_If[%Is.6SPAs_oMh68KnEQ0eIENi54X-$=IE]A
%*XVa;b?*OW:9Q)gnuY=SE]DM'P94hb9Pc[Bh%+iOa#Yf[*!Z20ks.("/4HN3,lT+(_l,?FP:Ys.MA%+iH611@Pl.OemSOtbJgE`a
%1jN`>/?D5-i-)Ik?J=A&E6'A2C:Ii^`@s12iB&mO:aJC:T1#ZR5]fY.YZ.\,VhS@26;OMn6=AEP1IE_^UQfkEl:Xh)0(\:K;3TY3
%EHfea*[!MUIFA'L`;eB>KFr[?CmI:LoP@>X/f&q@D#"/G)%<QO,X]7)q_TJ9A=MuSe="OBKTEICC(`V9gh5%.kD$8l=")YU=\,\s
%%<:00F;BpVqlH^i+;9P!8/u5&^i-ARH->\u'Dr*JmQ/nU:Z?C/$qhCiR];akdB$.B_U23dm!>j_n>We9G_*CF*G'St\=O"CgA>_U
%1V[qukk=h$LUHlOJmIk6&!:4N>>TfgjZKsT#GW"ON#p_G<=Cj,j0#X==LYS6Y)$qo$R-M+@p:X0O/(9AC^[p.(jmCZJhlH\4LULl
%1D(XJM/?+^67I4s9-4*S=Q5-R6'1\4BIi2EAtXjdTRXp'8.jRMC(rnp)VUot(&KdR>?Fqee^XqB7>k)X$VIhX\aMXlZ(`#/:)_kZ
%=f0*J7^aEY;ma&)[_d:YfG:@?/9>*,>L:Wsbd:ka1:("N(sbNQQt`kG>U*H.+kqSBB7VX3$SmgMa0ju@WJjNBi`].m"h7#0CIoVE
%o]8q%dI$M@`\j\@p,_d_*n+:LZq#eVAGs:D^'(gA)V7Lld)$0D($b<?\b\I09@nDhOpc?"Gs!V!fG.>!L/02NQp^W]cV!\d`su`j
%V*/Fo&^F!)l]Ai6Z`p7Q2"kmS>Zk*H\SI7=4dp&F(HEA!"('4uSeY.a6t'cQ-?cbMW`!HgW*SCc=Oo7o6>r)"5=NfBHZ?kJ^9j^P
%L5LFB:_d'D`3\HpFu+U`n*'K(Y3K99W-XG9D5i5_TJqcG)'5[gMcH:c[BAI>kZjbu:<a9^nF"=#kO?oc=qk^qA9"Vt]lQ.`mODE9
%D+?fL:\XmgB\&4M,_uNCPD[KaKl8SQRHf_H7^bZ"Hl60c1.fLt1f\<4eqT5`1LgDr*Ct4lM\h!ZkI"b2;m,$+6<9IE@p##uEMY"^
%-;k<4ZZ)e!_N?q+.0Pq^J@Rmf/&_FB3!=;+qSNJPkll6f!)h%)UZ4OLknBo#k]5%36&[etPJA5YMYk9dmHrmB-B"N]I]&5/&`_62
%.i&OJU+?Y[`M,K6.B".mAr7gG94C/9p6N/*hB:5mV4S]=c"NV.F,=6]U?X'HQ;rmhi0*Ul``6;RVu#dL_u4-&fqW3Y#n<`P8&/a)
%IFXfD+FG7\qT&c5@EF$3GTm]2DJMBjHBnl%'j`F_SEd)h,\JAs%bg9b3[>c!B;.L+85le_)T/]/Y/<9JJac.IW/?FBq*92PI:-$"
%64c2>[hfoJXCA(-S#6Cog*M^K8.(6N+X<\fSJ=Ps6,nD%:.tH"eJ!j]m(B"8%CnT6VRJk4VRj5J'/lH"PCmtrjC7<=@*rf?2*FM%
%'qE46+%/`(b-`H[QtWo&/+Nfd4a=IpOW]>U.]ZW7AI'emMOP,<748P95*b::_.5*K&m7Q@2-PmuU881doU5jP4<]:V.q?AAV@[\9
%W1b.n<Cj$%iAj&&R#_:^FmW_5W)tdDI//Y9@:hQ5VO]@#WHdRH(F$l2a-#NmdGZ(Umt;k$V=]*YALK(&(j[6"MO\,#E&M9!NML!;
%g.Y0F]$<s(%b#4I&2>T%Wh)/&j'(QHh`[R0+3kk#$0U!2)tB0C4Kk;;7+?mN'`#D'>k<`KL6``?FVYV%l8=>&m4]Kcf[^o[A]C5"
%WZepM&Pikr&YcVdB73Q&1!;Xoo(Hs!M$Wor-q;W;-Wu[(g:9?_>]Yb6RB9DcSjHnQ]OhiI\Jso&h%q'%PY[W&_)7dnS&NWB:Ua-q
%+2e:T-#)9o'uVGIQt-)jkD6m2",b(m5c>6C^:[tNbD_$O+rZW-E+Usb."c\$)DRu].q1Z98T]d2`AI#H'(a/$Ag;Le,R`iU5io?V
%V.jZr2(7ZJ<Epk4<Rrd/<DG[ai^F.*@d/42W/oc8!f%4n\osSZn<5irb(RJ?-:_$[,q]9jKHOgj&p&A0AsK-`)N&^,E$]^8>B66u
%d2'oXk_^IQ<DaPme^IN(o#a0Hmr#W+#Dg)84mDF>M`s_X)X/RYM/1NXd:N:3T!_%RiBY7/dah!K-q#G#o%&b-o2O%,6a,^X$V>'q
%5o/JFK?R9G\[`(?e9+<bWU&Be;pq)?U7<N@S4;0Ij0Q18Z5O,.dHkp[?djf%f,80Xn=OW:`5kj;^,+EHd!AkU"P53uDW_>kh:ItF
%7B`+q0$"G<6t\3^);OhA]&9%$5.-:RLq[c!oI%gp6_fLlQoAnrLtrN"^neT9(ab4*>hi/S(\&Md\=rECdM,.7DC>Q,$sd2pd"j*]
%)]E-NG;'UQ+$G[c)[bd!3'"#Fe5[CDmY1N+M\GBmn3IXRn&S4XDolg,=oH>H74<"Pgg2grpZG<8j#?h+864>=ajg^R@eUfZ'uDX4
%h\,tQV2ZEAP[UIfo;Q/e)LpP5L#h5'T#BbMm`sUsgfM0KU&4P,_g&KNm.ORHS/qW,Jbn(/K7fONo%.et`5DMP>!9pZeMG$`4(.f9
%,bjsj\t0hW%R=3;G8:h'C1n@r08j"%B<l?1T'N;T\g1b`Q>;J7nHdOqmBceFWUbucbWN55)0?kJ)%`-F%>(Xd)BH@Be397Y&G(!@
%hiGVG"99o%i%$QdQpX6b5:9I6C9P^Z(,%3PMm7<RLM!255TCXZ<35$s"X:#M1D)ek"pQVaIJNA)GGGV.S<Xh2,YqY^=6O5ZWFPVD
%/2;e(Gf0*lI%2FO;"/")0W9bf']#Pf=`oB*f$HB'N%jcfh167n;3mQeAA7&^&)*+M//>*7[QcMK0]Q'@/d[COnT8d>q%-Z(-Bk;I
%;emj:[P)mJj%qtqgiMg>UlKJI;i,phOB"^L&0Z?foYbo)$uqLE*d2%JU@QU,IaP12#9&onW88#=a3J2_MNbkJF]?D6Dm>'H0S1-n
%Q<,k=3))>6i<:R5nPU'OFD<4^BU\>D=\.nZG%uhk_1[#F=kD6R<V'q44l'F$N(8]LDP-SLZm9^6XMZbfQ=Pf&(80hrP<fA#@cF.[
%d-ct].2e)Kfb+$K&>s8/K%cKFT*VWbktLUU[ljt[FjR%;3N4_CpM&R@\0IU$iAau&1[3QJ%EEMUjO.g_S164&?*)+e,DN5J(F%m=
%c/+Q'>hW6>(6@I@.arjfUSEVnF"/RnF'`\M@:1$B*;+cmhllrF000Vj<0r9d(`0GH/[:<YC7,nAoZl%@/V@NlrPB;r7pYh*J18la
%F*JRVk`ZW\ja]S\e6nN2VJ98iKl#3V9"*g#3$e[-EN1LUOmX+L4L2YahE7acgsaIp\!JhU$53JtC.A5e];/93N'G+GecBd$heKYl
%HDh5X`\>^s>TXLSa%?R='NdO]'#Sp3DT&g\c)Q>\?Di7[MVoit&H)ecZ0<EMHpG71L-nnVVp7V,c9]?"DQ(';GGi^tO[>2H^8ack
%e@<2*(lo6!h*1-R="(tR=ZK.U/no6A`(OU?!9Go,LIajD\toKM8mm]O%*"DDX)r))F#^X%B-FO\`i1:+(1W9JOS2,uF^NZFG,jHV
%DA\EGS_ZKqkrm*8=q0f(plttr^:B-+O:Pq9%ZeroUN5%X`--eV'Z!(3_epi;,,4S=YE8NJmF2]bA7Ej53s//eUjYu7D$n4"c!0Rj
%nr=bSk'dJi!)Ffq!.uqr2a3'K/80_fMD;,f&6e9'dcO]PQC(iB!!U2c(DG08>P$-8'"b07)WGQ[iU.+W$D^/b<DE&,DqJq\)TF"(
%B9/\XoH">PeQFV3iWjbK0>n.a_3TkN4>7CZ%arE#5.V^aD94<;A-cI#2$Co$=j?.\,_".F.84OYP22P)<^9=P787/=%(eH:[3*OQ
%HM!Rh=j/#HhH3XBTt>p7Z)[KPg.&ngZ0Dd$/Vh.eqGCk##94![O$Q\dNe@XP]ckT9;"uT=6X)A6Y5r;NCfOS:NePLmdql+<iR+s<
%81,8lSjA^slUJe@0ESm6i:,+'A_k5^nT;]_"We]c3P3f.)g]hfAY=&@K3m@K&eC>-W$c-NF"Zjqg]gM:,d65+@pM&O1s#Qn1RIl:
%_lY]ae@-<DagIMNh%t3*=HRoR]4!ghpN?A/+-$>K&puf_FZD^k>HCYc5b_bIa^A9kYoXO9N#8l!eBl#"]<;du2=8U!bJN-C4-%%0
%`MN;ta#SU^mk,Nu"%6e2:O5o_#U:QkM:d@B&]^/i=Nmsl,SXaGM)I3AQn/>c**u=&HmM5^H.:\H%Ei2Le`\J.Ia(\m.RnLj+Lg/E
%``HI/X1H6n6G9pC(:PAk4aPDG0Er-iCeQD^cS#G(2!,X_oSN[nT2q>MZ]Y>K9rBI?Y8L^h&dfh?#%/[XOn5^o#`4s==uNV>GsMGs
%G)OSVA>P1hAR_ZD=Op>15eBtN)lk!0QJH/!'Fu>\Y9&PP"Q2Yo$Jgl*5Xq7^@^1QGbd<9C%fja?gd)VbKZ#Dh.j!=P]d=j4K26<?
%LH!*613'lQEnY:61:'hC4a?>o+@pq<YLa7,8"p#FY8omnUQ"&Qm/UCTP;D7,"+Ugl(D=+XoO1?E]6XJ5DeCDs#6:T.E6!kAn0+`T
%UNuq+%>\TN['K6'\G:QEap5/FnLbjnho?mSa493k-Bt:<\Ija4#8W="l1<<SWIhnh0jk:`hp&5Ti7([rm#lO(LtuR"^46sAkGj5t
%fVs=<]4'KEFE[PS-a1?Pog$":'Et@oq%%Jp"^jAFRrab"F61U],@6+@jmEO(45inR<Kl(7LA=%k[(:cdB-Ffl28jK]d9/TKmB`D@
%K*1HpPX^X7qA,!4,M^>EqI0WOgkJu#R/W2#dN\C72tZZkh:\+H<F>P51i]ggc0jr&a4jZQM(+"c]kA7Di13#Wf&'mpJ!+Pu.nIt/
%#m)=fo`Ti.Mh6O27P6.t![AL-"bDeoeD1ia(I\LYOc-5k^rSrI_%e12FTm>YMo((]aE_@5'd=Hj"TaaDidu^%75"':Oc/4MJB10-
%5sXLSRgVV:P)8]G;.L4T\Yq8C,NPTC+:rS*cG2/T;.spba@2dg@-"uI+<Y]%BlHAZ7B(h?jLj%dn8VcOE5fkC\O"$k]\XdXEF*X(
%"iko16"&`cjrg=:<ci9a`^SED!9:`Y+E2<tGAtC;7GU8fihGpMVr>>]i/3Hag4Opp7I`[ZihH;-$B'i5K7Lp0rB]B$*m`+*jD>@%
%J&TBt`!0c\]RR`QU+YA]Mi7F_h9\e'G%Y$"7];lr#%`_<!q$h*^#J&2p.c(W&\PG?c[&k=R-V?Ci_ErMZT7m>nSV2KE.Pts.D]n6
%`<N6#6?:)ES\t_EgO0srD-uiBMi/O4<cRHQdHr`=aD9UW:B^M^H$Fig`/%J'2:*7abs3#&"aak@,W1F4(jm@V%7Po7Ra.IX`3-\H
%'.T;n#%`;Lb\Vs]<R4^`l1VdKIK]-+dBfDkacH#LDu$s-.[I)sTE/Wnk!klJD@(ld!Ve(WgelR/VKi`9M"m?U((HIYG]mF;Z&??e
%=J:S0Q3s6FCG5nFq5PdH;uQ-Y>s(CEFo.utGPWPS<obinU&KsPS8QSh0`l*#*!%6*b;k+JF<T@Hm\rk'Q#h\FBZS'0ek_iRM-\Z]
%^5LU:\EMb:8B-5oMQ=>,Y3NL*)u:fGc>K9IUoio=gB9#@k0BG81#B4pm8e#BqZ;_#@Ynl(>@J*FXO#,RL9`'ZC:cP8M-W!)^C\^d
%pnDteYh_EI;h*P9IV[g(oM!i\m8JJ6R<d!M7YasLI7<[)Df3M/I_hFBka'?IRZ&YjT\L$>;O?bGeT3o5"Jqif9=2$efMs09'OkWA
%MnU[aLecQ$6"gA42fEkc.dcHn1!_NFa*7WoW_QhdQG-P)kaNMG+Eg1Hc'9G;^@;1KJ^-K>GaFd"GUT@5g._eT7pfJ0(QGN(M8`=b
%1m#@'7!d*kY\T]gPrm<8F3uZ_+SrZtd[t?;+r#YL\+gMB=nUjB9<54.a?n-OdN.,*W?)n!Z2M*Y'3fIt25=%#,h)2#"a70?rDb<\
%]J>?4r=#ecfiK-U_YL^>i?]q%f@J?ELH?l6Zhi8]<C)cA%&pnJUMIlXA@[tZ&R7.%9Foe[VL"Ria3b=*MQ+mSFqb"iSt5%B$l/!,
%kQmAeXjcr:&/eukX_?iUmN(+IhbQ*Y\LPMFJbR$gesdU5m)*^07i@^E3'Ki5"%5`N>S:5CQVu*<nIekaG8:h'C1oU@%gBY=3h'`<
%m&SDF(!>e7U1$/NFE[P_T?%)EIAaVi0V!;JU9ed@@K^k9cA(4Xo:aPmg?I983@6G<'tM&i:<a9nlCE6AM-n]V$utFih!Mfm1b/*=
%9paM3IW)i,4B?QIqk-0=R1.X"NUnM$mU]%t+Z,9m-;$%n"bEi@AIH^</GD=#90:?[Ej8#>+gGg;;e]\dD$]Thc9QNAk38TeYVY>%
%U7L1kFER2B5Ks1>]]ZNaG*t/fbRUmu:\,St2]@V($;%$q=6Wpucc0g1f"'bU36A-Q(YCV*`5;iD5p39',SKXolfjQbM%?<S[N!6b
%7q]:AqT0L^!1/So*4#Y;buHfq2kjO7OsO%,K?@TSh\%_9Wfo/,6SZs'&p<Ij,^.RkqP[M&*SL%-B-Labe\8%V?MXQbmHoZ%"M:k,
%#Mj=f;qB.jN\\+?R,eB2ZrlgCj1KqcX-f%[o9RE\#1-&(ncfH'5p'Duh@l/)ZYbZq@!JeiM"e^:.5q6FR1s*mjGiU4W@&PJ"5_kM
%QpJCZ);U:(\;p%>i,/[6_-S28DIc;X-o]Lj"MkTREKSP7(sT@;h2O,e)d'RSmbl-0<&[HJF5Nqa%e'RklP$:F&@#7pW-^)^g,(ac
%S&RAHP@mEFU<.3#^+nH#O@uI%/aZ+T:g`MmeI=K77VLRCh([r*foYVlTD_X>F!:l"7<JWQDlL_*6,q"Wl6pK`fU%_<d+ea!M8$E?
%a:1mh`88lWS3b\0C>eF6Ol<Y@p!,PbI9YPZDVR:!oR+Cu"8(V=.es:`%>dH]i?/8>HaYG4Ha)/""C>;S3I$MbX\DihI"Ts=JgMAi
%,,*^E`&IN2UE+bf5h[uu(ZOs./YE>2!O#A;Fc4NtB@3t-fuFO;qq*$-i1hZc35]-:GVur9D#!66I@]b#*)[54XPRlWf9IV8>6o-G
%Cf"?QY,h59!F6XHK7]u(2Sdm/5EOFgSF+@I*3F+SosC3.S2J=:;:5otH;'h!L9ehR3Ff/4;;?($etQJS8n.t)&Y8?<_lMt)%sbn,
%7)f6Qfc48AiTI`9b?0-Kl_0H@Aa21JH:n\L:&67\Tc>BgL&D9ONNl[M8NK[%OOEQ0$dPF-/N*%hm`=nFEOdlaHJarYpMF,!O.L5R
%59b?S[2TDEQ9+5tdIIr%)H@1*(-O6]lU^=MSsDgST=YEG'ft_[#<R9&JVU\W?")3*:G1E]D;@=#[f+j4-.aO6nsbQe6-bj;<%*cZ
%/tdS5r<=p7TNdk_<`mY7?hJkQE'Z*pW?IeF++li!`Qga5\0Z&-:Z@r#52(I#cu#Uhh12<1e6pOGU$2uADCk?@6(ug[5^<M2;/_2b
%.c".o-j41Uns12eH$<edkC($"2L=8H2iAXLNc(J-5<?YSNI7sC>]`LWat,>\'f$C>g)3bk_=[UB'eRS2k&HP.2g_nF^,cB5JF]!E
%O?#?WW,l53N/*F_nj`.#hTP<(I40GtoR/&(^]cC%`=?oV3H(p(SIH^;XOc%:lNT&"r-93+9.*iQf*Q^?JdZTRUlKDQNZ80>f=O9o
%pO0Sshn++*p`Y,*BB;XGHcV1/s'.JeHN)0UG5gYHZW#4VIa;=d,,>n!p$k,E\R>WEW?C:b;_](\s6$[lO<Kd:hd(m$MVeBQpKT>O
%HiA[XmdJIt?+a6`mGQlDdiaB?74F'Kk6>=m!ei5-]3IXV]rW^DWY^h`V?FaY*3?t[%OnJ$OH"lZ'7tlE!G%YLRm_)iQmr@e:F/%?
%_E8\j4KS8`L+<_>@&#VR176r0\sgJRc.js;?>F,tXapFcJ:dktW@SV`+_-mS2.A84_>l7tdUh/o&D\T5dgdRPiY;LA2Z#U%$c,oq
%RY$%o2gm.;U0pOo)OQ,>pX:Q[I6jeiESX@r)$<^8;Md1nL1n(FGC;GR)AY4u?U0^9OsXm@FHN-%W.5S&E#!*f%+!qePFbqB;G#n]
%Bur?C%`XZ,Vm]0nR'CFRAj`s[dBHdPPd4VjqqCuVK$53'!8%OWC%3j/3+/3=8cqQO'q?Y"gI!AcTY1[jW35cgCmU/+Q;gd:EsKW!
%^@<TPW:/P#emR0G:DQ>DD8CcSPSREf:*ICWUnIVO%QdGR>'@Oh1A2m%0WRdF8s!Q8VcJQL'"3Fq(2,"B0aP:LAQNF\'dPe%G-'NU
%4h5C$SMfOD%(._u^5g/!,Q\I>CorkY<e`J$=8r9hUh71Yh0@EZMsTXU!]G!3rQo+N-)d:JTCtP26_U!GfN'<rkS>X8R]:,%e&YXU
%8Ii@SnK"-sdj>\R4mj-E1HVkHOYT4ss4.lOb45a-\2`2V#\bD"JknT?4/bi.#P(b`p.f\G(';P)p*%__i^YTKgFMQk*8i>M83AC4
%MdSZ3o@G$@BWt,qG(MCW_/"g,])^_MZf^IBK0m)>BAY-aOY<AR=aS1#-,`Ibm1-WNr*:OoMrZ8tK(@.j?7:tBi3cc7D,pR&AI6<t
%r#:f%TRbK.OVP&C_H`S+kHG;V1+']CGb:4Pk6`rEb_hso<WYSp,W8E%Uuf!Nd*nuPLtR)F6/3j&#BJ#OLO_PoC/L#M:``fId\sLq
%;%+]\L:9aCj2=@M[+H(7Jj!CJU)jg!_;_c"NSmW/_fF;5i":j]lPG0b0[4V$Uk=3V>!rT2E8ZLilm76)n)QaY]_iYq@crTA>#4<U
%jlc-)?hlXBFe.L:KJ/3Ygm\]iKW@Sk,X18@A#WO=:RC^"!u3*75a/E_&YRI*i["s68O108_>X]hrGY$bYVk0D9:H2TQYOm!*C4X.
%N<GXi8OJJGcqHp(19F@`HW-Zr-sm*5'k.g90X0dkd'S^8AlPm'Aqh4LL)p>dJc.*<0n<A.ClbgLi3m#*r_/t:6k"+:1J"j2bM)WS
%1J4*Yo/q"BLB3YV"kX62C]&b*#q85r]dmM;c5Xk.]Nth&3H)mK5a*YsgZ``$#\tSUZ"Z&fO9`WSN<(2&.eqM$/tQ19Q_lLV-K#\X
%%$gRi6YrtDW;4:nC]L;YdLdWfBsU7[e1*h.-%8H=jCTYg6p-oe.cZ@qeKMZg+J]1gl-=46;E:.?LbM1%`Q$ejIWCj9MBF+2Ka>g,
%#]t.mcM"5VjXKe^XJgHs9AC.BKm4]iSkWOmNYIWk%gK&D6Rm+S==dkK:!ul4^A7&*=[UULU!?#8pLKI+ckp&F=t[hUUSnn:"i,g)
%6Fj?37b(DJ9IM7tJ@km.9q]ha>%k&eR5EH>)]`,>.r#bZSH8f>6)d8q$3Jed->;bE=Fa>mi"?gLW=erYHY\1)?#>.7cui=(/,'8U
%k$0a\4oo3cCs^4$f`i$[/Fr_\(H'J^PZ'0)nH;gtU_R[-Q0o;2Q2t(o5^bSC+`OZRJT=Fb-H5Gl;S/t!Pq[$]c4`[sct6Hcb3`ik
%7`q"(-DHQ*T_Q)r7%noc2>+q%CbfLa:VX046#,/cKje"jOCer,@Cp+;=<PVdQB"s_OD&O9h.:#6(%J#a/_gEq<=%f"_kt9u_.cDY
%l(\^tgN/MP`kjRfgp'2F.W#7;@]?q<g9XLJZsqN@*n*r2<Cg_?$7BU-&T`;ZPGPau(i0*O5Oh$)8]p7(LTN\LTJ@]5BCXRMnn6)"
%!Y2tLf;sH(pD*nP[b6Fr/s$*4h;EX:ab.hAAl3]G>:NAW\j!X'TCCt]I43'h*jE'1P#Anl_ol,L4Q6M?H&!0cdAJAs:rHm6m8cE8
%;cm$dd\*2rJ>pb>O:I">VAA&UcnGb5;KQ#<0n)dLk8aPO@VoT8#6H$Y'dKmS)$qYX3;!#?^En6k?2]gfQ0fG,`S#Au4ME1:``5@A
%),?b2BP+tgfNjBdC-6\L]/5sAY9m1pTi*_9Te$m.(f_2j"p7oI6(ABUDD`\3<^%,Y$8_ldrRu(!,[FC3Q5q91(e=m0X,n+DZ_=as
%Et!b]8HgZF8"nQp`]fH*HF;HSL&`1`nDtqWa((Mc">bT+8PQQ]!p@R*+T2o;%-DlBDX7HW%51K6V3m`CW&8ChFD0h>T]o(P=ef"Q
%%X$Ubl7u.A%78?70IL8:5VSb`1A,gsb!V$s%\2o`RPd_PLp`p]DCFhimhtR,liBq((rl&<nUX8C/H_NOc5*(K2jW9]:3.S8a2`dX
%ctZ$)Po=K8gIALe<meu.*!QO:=loeRj:[/L-:N:amYnHF9'6q\+o1MB=B5Ec`b?*P"YpRMC8su*b0dKS02*Pi2IUGil/8DrRm_:"
%DA,@A\CECbXa5ca)3/EXrX?HQYtnl\*1aL3*ZqWipa19T!4C-,#e(-C%g,L5,UAFgfN%9a;!:u[`B\!#G08eH/460QT]!OKCk.(B
%2Oc.VfgXH0BMMeAEt24QU,h&iWY6Z&_p$]La=VDg$E3j,Pkks>9`K8Jo`RnZ"ZIL#+f^1CYg_Z)d)4N*e\f%=[c!@$mB8#i9'O[u
%aTK=;-\<]V\)WY*Ok=4m.30ni@rA5E>X+tl%A#6(j'f<>`9([O\25X>JTqadB%?Loe<1jeKX27T$'<.AmhTQPL^*<mg$.IiWHDBL
%7;9S[1[_'Q,"FaEc4a3J.HeSd#,!n+019Du'X\Ar^):4Cs'ogYQ\'1"<X%0#j`.b*a21F%pbFGUWLT.3#mGt;3*_aFEL6ra5W?ka
%[k,h"US&kM7QATFrF'Is(.[pY%2`4Kl_bbYfS;"a<bKK*4H[a,>J?jr&*8Xe+(K<@C(!j(28u8fX+YHQ;Of:plWk'n&Yl,5g!V8e
%i\R%%1]])0>#a@4'QMa%*/(Wsn32!Ah:UP]F=O5ZPV''%pbO[N0=4?Bi?d!-F3de%]!1a;Wg.1,U=7mLf$/7@Kq&hq"TDi+Gt29c
%G7\Gr@mcic+<nb;-!_?K?5k/LL"$ut$oL>Deg*<W,Y.4k=HS^2om/):q=PY):X-IZ'e8s*_XJK!a,J[gg[]kP>Z`(0Q6;iG#oA:>
%_BP[L>,G<OK(X0Kc3R+?!EhDiq!:G'<$ftag6GtXWeP4t4pB+W$oL@C9tE[opO0oH.nF1NrkP>-\8cEl::4nKUIDY8=`k3]?r,BR
%n7Gb`O*650KXV?h$RMLcp8DHI`_K6C@]<MX=PQqR,>1a:\FDk;EN/HLgbtF2Z03_##=^&u\RZ0TnN'u7W*1&R#%_]U=]#:!RqZ8)
%W2r0g>%n$E%:Z!529JW;pjO\QdBG4@[9IJT,IViY[M7Ch\.'^*q;YFXM%I-"Z;Pea*MH"J1pt8^K=#U0L`klup.U7iRHKlqB8?#"
%%_&UR5`3tp<G:7dji56U]#-3I,%\h'-B**PM#bPJJ!IV-?XA$%9r#S))^5K8'eN!p9rMX?]Np0rB0MkgPo#fB27?E,#ss5()eC9h
%f;@"@!`Srd=WW?bb?[#ml43s1:cZRM$1jn/>d+dnYh?i5(GRAS0ug3oe/D-6p*N]=kk0`O!TL%/=lGiYAJq#+U5QL`g=W!\Pu\,?
%lq^lG@^p3k9\Xf[c,FgT1m;l<_mj'Y\fj@,6n:#<n=6eUTii'2!"b$QO5-/VAia%d'sF9)c$ko;cr63ZqCl+Zd5m#)jXi0`[psXr
%S!#CY!tfc':Y$`1XU/TJh=lfKI2LWG.TWLMd1'U16tR<:A^thk^'>2^&a69pOTA3*cAQ7+#P4Cu.R-dKrd5iY-G@TBB\3WD)\n-d
%HTl2T-^Ok.X[;P$$,^NT$l6(EFl9\](;2X65b<Qoqr(4)PVVK`AWOc(:]aZehlH=VXCDYRUsn+f9t0!)o?[_1Nau:EO@9;>5mrJP
%&(t@Yp>/ngUX@qGk_pdRW4`rTaALGn0dY2rb6*?V6sll4*Vp]]5utuMB>Z4XfQ7Kp[WFP<hF/e*)?FQ&i3oX#oo)t&2IXYA1\Q;D
%Yk&]V2HZ>C'%:;C/4)?f!Ddg+I6+-B7uVQBG2Z]o&4J1q(+maD?7g1D0ULb15^IC!T:p6.!epGk+N&fGkAiVAL</;u#J0TDP*$&:
%>`H?kOFATYA]0Y&#T0hd5ci,"ZWN\Aed/!Hpa&CMC^)_=]>oM?0cSl/0a,u9$-"P"+T>W%1'L#cV,MSW6`cLMT\9X_]G!SeMkNOC
%ZVb^&r&Jihj?^egV-uJu&.7eGnc5ed%Eq#))Jo^jlp:L2b_:L?1REp(?-IT%Lq>o5_>XjW6WU'%s7'9]X!1_uH.`d90nmCf+IgQ.
%"J(_nqd@OuU83"f(KpB?4C,6*0/+JY`Xe3?'eK\cFPr$q54c'BR-3sHs(,43UPt('&BK65"HdO-c3`F]^.[p`HU"/s!XYYm7;#B(
%,LupQ@"^Kg?r9B;a<C!cD+i>F6c&,HbaZsuHp>+fl^8pLf0h;\fh12[@BNZj.u;j'9&r^`X>MlXC$&dO!KRJ^pS0f[j_Xqe<"^Y7
%YQ2Mn:tJ7Dl^mAiB#S:I6kZ>8\oS>C'*G.,Be3i@T/Hgg\cX9;WL^ULR*pr"Th0tOd:H9Zln`e5Q3;pUN&4'>Lf>)Mp"1-A3==-s
%ebs)-Q,nu#!d5*)IL(beDe@p9ZY3lD3f5FTT-lMY&Cj^eT83s;DL-IAQR`>60DdRm@j+RTarp\AcJd^Q2tLSYjQDUh!3(B7ITk.S
%UfJ..28kjcPidZ]5J+VG0J<N#abg'7e7(pi_JBe.S!cOD##Lgl%Tf-NM?,B+__TfK*u=$lpAKgB.&;+"m8/`iE`![?mEff+&i1TA
%o5OmV=&7?21L<&HL?>QP;gV&XU">93!'(u<(Vgk*=sfN:`kr\>6K'Cp')QP.OR;K!NC[ac:h-fR&Jr59N7SY.9E=)Ui'K$P#7VTE
%#j;W-^g:MZd!W<S>pN3DJ6#2(ap$FjY-%Zn<JYdIB[m`XQN/@D7B//\=kCs-6HC#T@C,kpq,!3b@o3R9GgY0=kW#3dl.%GF,bZFs
%;IcsUj:t&k9@#]=ZtEB`!2Rj3JP%V9lgN509Ff!2OB/XaLdi*ZU4QZV4h(R0>V(aMb]aM"bm`lu&Y$KC)U3K;;.sSm7]0HK[-k.m
%+<_Skh/?F33*RSJ/C!U&_+K$C`2_b.,JLujX.o`B"NrO@8\1@FGZo"M]+h"2i+''%=J.'>YBD>0^1;rI;6Vl:IKUDgaT<<Ri'$F5
%!XQjOGlre!dhIdpkB/hDH"+_F;qH%2_?*9gV*@D*Ze&.4YU`47.2K<XSt*$\MQG:R2p9MVB/^HR!;V-_MRf^(N&+:?9O:`4T%kmB
%>>-on?.&pDQF1hZG976mbA10uP8,ZY[-qkU+bf1]`?Jaa&AWVB@Zu-+W6rAelWHCdH,d:W[u2-%@r$b8OZJ7e:"m9U7D:p$ECXg_
%(l#SaS%qu('I^L5Xk=WX`.>b)9kE(Ta!Ie5-rFGE@iYSRc->c;MVGtS2PD(Vju'XW7q-i\AbnXl[+XlD9It_@N1$t_)qGgO%&)ep
%g?+S>`#bo`S[b"HA(DegQ=l^G&lIUCUa'0DaT4OodcFs%DOcTW[T*OLS4&;CR>.KX\Xslb!qP6F2$OI9L1`ji`F<c\Xa?kZiaBR2
%C9A8K*Lk[q4?#npUMWA]2P.pbJA2J[iaaI`'-A\?#_ZbG6t,FljQRN!0Mi2t(o!V)mAHF]j@$OU2_%jS5]Ab2pRiZrNc/XNhA>6D
%61^gD,WFEY^aknh7HbH@9C>+g7Ou?F]"9[%&=ZNa,2tqB<AqW<P3>Dml_.F^Z0Hmd4'Tj#9K^<B+5&gg@2?PK]N[R=R`]`&*Tms8
%mu4j'Srm@<VH=s(nChkbZu8JFL=X9dfm*:XlBF%-g'q3(:gmh>%`QWti/F;e/J:qa5\I8iVTd<n96?El?nlAPq<tJ*dQdm)`KbgN
%k,k?XMWT>lXi'EM,)a]a.YSmn&eZc:.^1=tE>-nrOKrX!#Q2G0\$C)5#p;cE"k4D(bYt$o82g*8(g0a34%=d0RNp46]G';`qq91m
%KhYFMNCAP>&-IK'6&c&?3V;B8MC!tk&aeafC;X]p\?GPQ8J\4Hi/k7`HSX:3YflE3W!3FP+UE334fm7HaGconKWmUm1W_%"P\Z2;
%QqYL6kQSoZ(k?.=PRN+CRt3MH9k0A0e`o0c$Kr?`5K+%WG\p_"7QNI<V/RX$VOeu'A/sQ%Xig&hFk]eo#]'MNPr\:0kr`F'%RYIf
%$fBqienWfhRYIJgho;lFpU8Hd,70mN[4qeV`K;\<pA;Oh5TpU'eHu2*'cQcp]ipXQ&fuZ2(@QTaC/rkI'`K:-LJNOV(a,sA--Un"
%_O:Mm,sb5d'[D>q$4q->:aU]@3sV6+h-FgQ4'CIV$@JkRBAt.O\:]M*gk<-b^m0L<b&2X`E>ioMpqiEYV!)?GBJQ4iG-jR1"o5YL
%`YZon<9B'c"t:t;QRM;HenA1X&G,L,-fEp6-l?T6=,I.#-8F2ak)n#`YmQJfcTVkT*oLL_qDna\(=PAW0I9=WAB2\d6P;t$_A+D,
%L%5gEh8uC#eB3;M*'3Q\iOI]%19!tM9ZYLR9IOH1!<bZ2NbCC;m8@a9$Y`O-T&pfN`'_=u#g]O61":aiYcQkIiY<T,7e]XSY8>C-
%5l`ip(sjsJ)lNcVoeAaM7(jaP7A=Sg!S0M4E8oXD9hbr1`M#5a!5Zh+G_35O84)SHJG'Yj/CWkIafs@k^%be43o.qfHW"q:c759d
%!PNcYMUWiUqL"lJYH/a_n7H=(]ssRA\*dQhbD&G'6PnlS>o#%gd]9cj"h&rK+ps2!,g306UR0i8cKA:.aZ8[;FCng-[m^ZqB-R"V
%bBF,6S^QH+af,QlY)Sh,%)aLr6]p$gfUG\Xk4'P?!/l:<D)t/Wkj_?C?>*!L*G0#c?e-fbWB9#]<n\9:8rPM&9B_>?F#Qh0\54d$
%j'gOe>TXji!s\n)66M(4o)XB?gbXVB<ZMt07mGIGO6V2)^3@Y&R]?QpNB%&9/Kfl24uKBcOo38kS&WAh9oK9-U=M2[_GAHR(fqUa
%YdR<;F'+5ZHp#o--okEqT<hOrY_orEH':)pg'o&-PMcG(VGB,g1#!TO71UXfUo\'XPfm#Y;6Q$Q.2>hL3Pl]H1[Op&;ZZD,PVR=;
%<3%<4-q9e\3$sQtpD>Dq82IY93A`KY=p;!'M,9qKqe4t4!<O^^0=JMN$O/`!'mJa,I3iPkq`3p4A,uPth4OW1qfcCqoBX#\4am1f
%eZ0eKr:97L0@BR'p<:!8JRLi\#(j&bO1]K&AGo(\guoZrWKReq-dn;'rA4S`!B=ONNjoRTB2t^ZaBbqCYpokp\Ld,>]7cq08eDZY
%as]KXar2D4Qcju;RKPL)R3'Xm]GiJo!Mo0\kK=NJfTU0*iRm,&BP*A&K^KZJpXiI]COq4"QWDE*P/D323kW"3m\.W>)+c5I-6^V0
%p<5l?=,;\5U82pk<*Np)dXi3)(tf1u:Q)f]!i,8c1g,q]`@1B9!74*^KRI)+,acMI.8MW`5Y00XqjrFo0&qDmd(3l`Um,gd#k6C7
%45&4sR2/Pu[I)EM0Uq.^X*P[-$]#JGUbs1B^WYP!p2k6\'DG9BqK,0D.Dl8Dcsb;9=OK+aKQsbS;jQoY2P]QZ)Ejkr2([Q38@Ic>
%]8'A+3RC$J*H`:kW!u2Z$nYopV!lLWUT%i-WXms$2aS&2%9#&t9G'LB1YdtmKpuTl$\h_hCQ:<8oWJ7L+/b6GL6N/bb4Lf3<E<\,
%!K\q4Spm2>m):*sr@knk;\@t'1um1u3i(^.4G)3&6H$aF#TcLDbt/i`"bc3o%4p_7o\o/D_d7UE?RAt`k5`@2p-%b];JH1q4[$sk
%:^'Nn0%EVfTuP->Q6'S2;\>O)Vcj5ir.3"XBSFF7-SeM3@N!`)p'<rY6WcL>"$j4)K):Q)LWhJ4icGJ2/NrH1(>HgGTc='(nau&P
%duMmn=I,Jhj=D(fkIo[eQu=[Z&/jY'#m!:"fU\]Vg6&ZCFnHq&P=[BVO?52p!>Z&F=lW=?#V!oINkjS%GR+Wo5V^D8?0(N5@99?F
%'F2Etgf4RO&@6,;>VB0:)P4;t0KfHJk$:u@ePh!3%kNSI$ED;m;lUBU2I#5T?lY_#=622FXMW7uWp[t"M73sO*\mui".2MtJJaRZ
%pXjaD/J^^P<_e6`.0/JR"IUe,H^E:`haK=RRMGFk"u4$e,X=)#\>CmL9p5aK.>hU`S,dWHa!PgM.lP9KiZCV0#S[n7ednTEKDES4
%2g?Cr<0ZfZkTcl+Mgbo%fZ4>A2<5Ul@p3e-I_T/Q_m,8>m*Qd,aHYUQmoa9-Z&e['>DHY80.*m'cSCIt+!)JRrITm9(eT;I0.nSQ
%@OhRP)?s6nZZH82]hhZ!gEhH9qZ\6QcfY;cH=NYF>0*eEb"TA7.eHELC9fW>`[LnG$ki>7m&[L%K=[rk?MDgkkV3@*/L97JMugo#
%!H2>BdTUI*"5d>QN<`QR](.8uB#S'fV<ORV>aH$>LL"=\Cahti9q1<2UM6SFeN8#jKa##uMoE,k&?nK`,fMf$2-J&N3?0=P#Vea8
%4IeV/2nLul$;m>Y6rUtC/69YUaU&'j^^1=jQL;1dOr6AaF`^QqeofLRZq57bP^uC3OoaL4\&sb6=C/*`b.t0$(F>*CUmW//'HUZ$
%4ZnkbUf:-$q@rNW+\#cK--BTM6in!LYD4So8kq+PTu$asRpmhs.?t-p;q-lLRN/]/O1*YE/^?j#O3[u+*jL@53#^a==d<9s")\Oh
%HaCV/'oAU#HBu@G=S#M\C#X"F]bl;#dj3b;6*9+HZ2X"d!gXR?F.9/(gPF=Af"JmV-34*Ce-&,Q9?gnS)<1[rZ6uX3W-)gAG?QN7
%X_R&D_,$W5$U&>0>mFijN36C&BUP\P))CN$E%7"&&:U-I8<ePRl:a56=[Tb"]Q4f-9I+K8O]Q&l,s1!n;W&HiS4q55Uln)96Zi0H
%!7jq`JYRL=,XS<UM((^:WZfrNAXi=,/1=c9bFhSj[[;ct4W?ZldcptB8&7d'bZHo.e46Mu-H39&iups<-fn<+MQ7KQ*=G5tBLI[-
%^<(('AVWaBoJA+?goMG)\rra907oN)U@JP&"@,:s_%6)@fFqk")$Q*If^B(W43#+@,n8naN.Su^eX3e,FZ>TdEroE_^m`9L@A@rJ
%gdt)BX88ii5u>1dq*T]4&PGTj3,190U+p:UbQ\X=I3LDha;Xen=/M8."VHmu$3Lidem/uGi#JimT-*g=5lq/e5,;"[.2NaeNV6B!
%Hi&I^SS9/]aQ!b,<j\d$r!5`_i8qP*)E1$l?lM]Tao9[%1IOOj7`u^KNUm>o,.NQ&i+?pjFf30F`o1>WUH@8NmlI!(,ARc&V#hoE
%Bsrs0U+e-9=ZQ%o2M+SHCP]D"eu0bc_`""/kLeVoKTnR9>4*Hi$/H+m_;,g@o?N[@$(qbh2_@@MQ0qC:@M\2!@CqV@]Ohe(S@42Z
%bSVt9T/DX)Y26T#'R3ed><hnlA,Qn\fofBs&dVDe#g4JUil`X?HtOf)!D%p/V,kM='IJ$kku@.=B=+6RM&h8>U)ZhWWllfN0-19<
%7\,*i'2E$`Bl(;$j7/!Fk+_j@erR[_ZP^D??X4!XjF.T?(Ig,g+g._Fh(dG>2G?5n'CQ:ogPV?a,:8C]^6j8f(4`.]!BTq'KuS=B
%QK"ms4iu`MnY)W$=XINZb,)@Ql7f.DQKkPI8'@l6)Nsdb;f`J&K%\c!Ra%]N8@I84AmR8K!.Z4I$8G!4&c/3%)[K>EQL!&'+I34(
%'RZ0\Bd9uu1[jo@8V^:2PDkWsBr[3.&^b8Z,8t_DiZb,")UZr9*34;q-i'a]DLj!;)"I=e0[l*`d<Ze@_U?DZ/s`Y<FoJgh%fIWs
%6i,'$c8,S34@$^Q0*m[-JKWrgOO>OCDlfEt\McdU&GYo4r&,6!q9#$rHCYd=,ZD8!Fbic?[1GJ-/QRh?6;L7M2-4Ls_?<:,aQ^(/
%rD"mk*'8?K.B52:aH-HIcA%\/!f_`3f[)'ak7&_>^g;E;\@WXR,>TiU>eBG!_Lh'jeK6>PXTE<L]$,p]i5KJ]]4/tbJ;Wh)9g(nl
%Om?:bq\B(3\MO0G#Z$lkN75:>"f`BLEhK&HS9!.eKM`I7'/UXU.1?Q$8S/]91Z2.hWhsTdB:b7o$]]<cXAPEi-<(n-rRP4)EPD_\
%QKRoGckl&8OZb"5fZ&In<m4T*@Thi:S1?lCHtC9b]1!Rp84HB*g`ceL>@]"NO1(@AC^Vj'D)eEVX/1YTb?e.\!]agM>h<DUSb!]%
%%Eb$pPX]*1RND;,H_83P]8a]>AgS/F<-("-_47nG16J@*Cf_dM3Ybgd5W.qGXF*[755\,]WN#JC:9.&^CWuj/F2L'%ft'&qIfdpr
%=rL<]Sp8A^T;IQ*N%8f1fep+YV0Fh0%m(2'gQ^p<(4eh)49Q$pdZ%WZ9^H)nJt/>J=Q;rf2,68B/8KmfQnoR\7dnS*9_>`VO+cAH
%6pN[.3,CqcUa\hd:B4p'hCMVP"D!5nd&s`tHt_r7#^)"i9l<G,X-l3O[WLF>=_MZ[L:n<R\^c[PE;?;,^rR_"ELq!k5r4I76il7I
%U*9S+D:ggngC#DK0HO%:E(;gL5sK-S!Ak8^$/>^4HLtR!\X_HM&@%7(Zns'$`?I,k4>gWKq%M$"!>9PY).HRW@+NMH-7/7ES;F62
%4E)5b:7nspOUKCeRi7HNB'[f_1b+Pg<$$YOKKKY,FG=/@?ia2p`U'jDbTo!:1WQi#k*Y6'0]HPY<CbY(&6RsVYJtD+o"pfSgL(q]
%$'7bo4BudfGroi&]-7=[U]C.o*Y*nUgg%E0g(A#kBfR"NRNR:KMutP<cRR)`>40p*A@:!!5]^FW.)g#@VkSkS!V5R/fTl:QjG(`M
%OYB#^lRJ4I?487qVhl*6IZm0?'uen"T?UhV2@Hfc,YeNp>@G[Ug![BH!])5<BL@a'fec+Y[<&Fa_FPa/kXlcZR[.]p$RQ>H9O%=<
%*oJE%gVX&HJ6(^;](7nBH#H69).nla_,oJq[$e=TL?s6RPd&@;Uk(p.CG2_DUL4Z\0a1o;\*qL-I:@Ocj)9QP4f%3=)'fK$C:PH8
%D@l^O#e8aE>S\!@R`-Wf"!s0*OVQm!5fq__\ZBRjb0%M+k^[F$mQC5"1kBM9hD;`n<#Y'`F'Dm"%7$c3@2%9L-4d/!Xd6bUKW59M
%O7j(G*OuM_@X;K#>@o]["p]T#/M3]cVL!9meQm;c=F7I(C\>]8C8tH8:%f'gl=JQp)#;s`fBS#Sb;$U:[uVjLkjMW5SECb8K^uT_
%ccP7;]&ZNYn"DDL-0\Z2Z)(U&eVA/o+m$nF+u[&Y)%lutqJ)-i.h#@GWrn\FL`k7)Bi`^'M!C?TBTgoe=6&"bA#6Q$E!ho:>,a*k
%W,$3Zh1efGUf@(GN8E#SD:jTthuW`&[VKX!&&aKnV5u>P$:f(e(N(G487ZaGM@#GH3'\Y&)<C03CT$h'8XUq$f(Qgk8J,:1<23G'
%p6]Tl)'(k\4(rkZ.\tBc-2h^GI0S3q$r+_,Zu-'UAYq[CF)GU*>I26r$,`D9=1=?\>:]!tP8e9:l%:hAs-hgDh/HCZAkW,)dNh'2
%I]huXkSMf\9]\*CO="UXQW8Vn)51[/^ic>E/k^8X:77's<&$J)0tDAOP("QJL7aLbm<m%FFQLY2QOL'6l@t+a/NL/YVZp9ZIcG=:
%.iH+&;CladA=f#h0I<LW0iei3B,:MSBp+%]1qlCj3t^@=pg-OTS&*Is*6A2;du62BA/(=RC?#`EeZ`=\K&j8&r5c8_l`S\]f:miV
%.m%c'>0@K<aC'Ut>NX_^e^F(kC1LrVno/4%C'Z+17W,[(??hT`(ff-nUIB@c\R7iq?q>FWR1pNiO^,og7-<o&F)=N[!XD?.@75!6
%.2.BUXXJcTplHrgm=l+]'k=Fd2IpookN5*K#)^#j+_*k\-%f#@A:Q`LPD_n`$qF+h.F(&s9[B$=BolIf2)Yb]T+8b"F!/AA-jI9B
%C-.10C7PACbI29lE$dj4o%r]p5A"2j'2E&[H263[rRbnrN;aY_FE;LFo;C+qmfWY"ABi:9o.`.sd5BO3O%3b4l9]h[//[BJa4NNU
%CTEX?!tTos[0u0fZCO(InouJCCn0u35Ik<pC$KZ_Wm5e#OtK6oFpuP%Nm<@EG]lfF3n5tI1d"oR3l\:'4a@\]"(d4cNUn-rQl%X"
%H&fE\P#^tf)pO)BNo2q[3ba8dj>f+`>e0DF'+]kDD`l'._^,J4Wf%2bZ'k4#+4f!$Fe3*UrkmZtLZ[li#!]F60AGC)=cRW6l_[dc
%`Si;,8D8d[=J^'B))28I_"ZbH4&kBKBT>)hLbLcVA(iq2QCZ<2[.?V*]SrlF=cPe*O`Z<hBoCu)VZ,?43*oakjV5bt9f^&[RK`jU
%o,C&QalW07#[*f%hV!m.,HY4\N<'Pt0Li%$0bY&aQLJ42rs7@B&K<B&rj<HQ`Z.M!=cK\V_M:6p)M:o<2ATb4\1P,6SC+i`]"G/3
%RXl?IcPSbU\?+-s2aoH-aGcSmfpp2%[F)LE1E#43YB-R#7&C+.B]h,<^;lDu6sruYE?R()[R$!r(jF/*3e]9imMJ)'#%L[WpYc7p
%!*.]'ct+kEG4@n+>ckHVfo*[-8'I]i(Fq.I\T/Kf,B7_kibB2i:0ih9TZt#$(Iq7j>g-.TE8F2l>c[E&>^20bWD09B7M*4um]=A]
%\D#?6XMo:c<cQRIgiW`ZBCW)M[tC=XGK(Obb7/#;C-rO91WEmCEAZc)-=Lo#bn)OU`MD?MB$_8O/)tZY@[r[>,sE%a_f=*&/X<@R
%=6eSg?9*gG<[Zp$<(t_s':j,#H=Nj%7QqhIXtr^*CA,iL5uNZaG6Y:2UY*%;]202oEYS]#(l=aL5eDLYr-.*I"s%j>m)1J[En/6f
%nXEP:B5Z^DBlKssk+kFg]J:/@cSI:qSXLUA@Uel@Zt@t#ELIV>>\JtVKa/^#dh4U?UMs7CfWKJp(K+]Z4hV%G0f0:p.7Qmf5;slD
%hMfC_)tNnE+YaUS.%k`Ii`6pZ]W_u8`^sca`;#=Ymqfqh.Y+L'aG=8uOjMXgL]K4u0ZU_[_-tfW21MeN8;U4J.haXFQ\^&L&M^gg
%9>0m-'7:t,b%Z[4"WNtc(pq+Uh%p]50OLD"Lo[AdSUhWZTq'qO!oh';ATI8NP9a*sMUN*rG?X+N5+It&l8eZZep*rg%qcNl?\sPr
%D2rGF_hD7$*43V;f[kL^*C_Y7CHWMMZ9bIl\#-[3%O1[jV&VrS,]=T1!(lAo3oMbH&0t\t&e<+K`CDl(@4[*.V9C=f]g9>?)b+O1
%)k1X\Nl*S0fC5K4q^^2NkjQOD9Z)*D-_B:LlL2SFN5Z1DX3NI/5\JK('=DSYdT<qT%"fuG$V+#%,<qnB^re@DPg\eg0T;OY0nNdM
%KgM873#fHuZLT3[RZt7H&-t0DGuG)(h8f1\/WB$Sb+"o((fc'&D.6rRIGkoaU!j?%N=?_50K<:qZ(FUA;1XVlU:gk=LDlDonb^NY
%lp<'67MQX6%6e2>EYgdq`R=W%Cr5*TJ3i4+_?\n2jWiH/bQ(-nRkSe1U^M0#iIeqTEl05_q+?$mZO-Z%GqO?L:+(FndT@rh[i.TP
%CbI.o@@1Kum0%`@BE!TX)"a#"EAB"P))kNT5p]25B=VF```dhe+;+m6cpZ[=M1hQ[(g+<[$$5G-3B*)i!B+kl#Fn@&/iGQKKh,;P
%c-k_d5)e.?BnR)2.J(\+N/0?#<_ahIPg@a7EsP,P*@"o?KX'NY']U*a0W5ml8`f&$#XaktjU]X2(C&n1AneajIhNWKhc"`$fZ>dg
%<8%WK?mNLP`5tiT9nPoJl<m_3?0dj!S]*1kAe!a-J0tra\aTg8ctS,`C7-j]CG=WQq+XWRGeg+/Cn*9ufEEZnV[UT&\Lkmj0c7dL
%m?eTL;lghmq1=/&aR.+c$rd3eJW24j/E<N`Y$d>&>NPT3GH;!_EMd,W4Sg2?!8NGU$SFQXYkAYBF<P+HU^&`B@/kWu#nEYK"Cn@g
%K5"p<;R^i;2M;[(2NG.#7BgZc13ub"VeTdT5nOP'KMn#)(kP\k9QMljURAF+)B]>"LiJXe5qp:B7.L_:ZG\dgE+8KN)`R]15]!Zt
%rH)f+]c2PFR$*l\%6lOm,W%=PJX,5;Q-Bi@=IsP+&5;Ba@bDHmi_-^"M%^#Uold-V6P)qr;T0P?0`JnQCCgX?+3\t8(kS"i\BN2/
%bU5g6-Q%I2Ve!H_RnYG0.kl("?tR>:7[tWh?\lpK(PZ>YX>E.R%)I0k8"F3I"R?V,3pt3'b]Fj-P0OV4;Hf=J4%1jt)dnWs64o/L
%TF*(aJoOGP[W@12p;p/"Kcufh/OhOe+da2jAD;rD6)<3/f<,Ou$L[2K+IE5u*TI:=O=2X/Kcui-\kK:g6SO+d)J4/I?q(qiqfucZ
%B#7=+Pq`CtI'i6OZ+=j2,r`CJ"G=la!S>I)%&uqjTK>:j[PH<kp!33FX*H_.nH6,Nf^-E;B3A8YP63$H`%UK4^^PR(D2E67j&$)\
%\oInVAb3d<JQGah`F&m><[-'5?=6/GFe^sl"eJ0IhguR[!k>@6;W*skO$2M+L-US7N=o>L-fp'p(kqB]Dek$AN6_N5&;7j;*jdY>
%#_Dg,q<4:ZR%KJHdKtK@>Dhq5Kb&E2dAG:l,8/"lK<YI;GO62!@#0Vo0e-T'E+o009YdGoQ0EE7!_rk(U_HM<)On5.#0SBu4t>CM
%R0f7\NSN75"O)'sFjMQ:"l:$erIkTG;>d-b@Zh(c!lX]#$CCmi&DgC%RKI:bW.6`s1Ik7BC\h\g.hsaURqOaY!bVBCX-.n;:t4Z;
%[Tp=m\Z#`T&'b=eXj=Oj>ek_AX<p&N!E4lK]l='/LQ@P+EreYDm)=Yd(fI7C-5S?>#hCsO0Ep7Jm`Yi.3%"_m7L%'g@A"1%$lCIJ
%!/V(&YX1JD$oVKO_rBfp^aWL!jMD*0.2*ZG"rp01AHP\<9H*<@"q2qt%VGm@!0KT\"/^V'"J+4rU!Uo'Ch1>mID\\&#0^ArTuJ^4
%^lYk1fEm*B\R*Gf6=:.&#(Is&<[mSb7L74u=I<fU^^uU0s$@"8bqFSUE'dqa(Wji,J[qg4#P=Dq=R1XUX)!C(fXlqI]/'Kjk=tI6
%Kb9^9Ddru!,B0[&ctnZVr657kV?Eb1L^'a[<YTi1*#1K]GWipE/sO-Y)qUKQ=:+_R>$<XP7c49"?Pn?."LbDC:B@QLF+IAQ1BO=t
%i(1>1^lTnoNB/:<,dr:F^<qAb3R:D+SG%+@7L@;a\6"Jb!i$T_nBia40V23[18b9;P-$0CUWnE31i=1^$.iYZSML?-7'66*7UWk;
%-&T2d!X#uO`;R[]N%r=$ie5+Hfs[YW6=?)h&]s$c^tbn`PJous9EQ?k<#7mZjJhns"BNXA"+G(]T:>srfgF`gRgrPG-ZZEl6gG?l
%DJ[*L"BN+^!E0?Kc09c+3UthK#7LW7XU?4)1\c"o*ADtQ'luQH(%cY1"30Gah0(hec4=L`UsXm=_eA!ep^W-E<9lLa0[lhs#L+oD
%dqnVJ"q3Y-Gtn^Yn'e:9^`@1QQrbVB#S3]sS_Ag?0ZjJ+#kGX6!-@m$H$N-dgoZ%Rg>F@.`.\9&gKq_A!"@ki6Nb\k4^f"5/08I'
%?S^lKl8!6$gj64)qX669Dodn7GM9q#UqWM4A^/Ykq0+Y);+ICU$nP0OlbCcY^EGDe?b(Xf30!TT*_IDq-N/)0A*<c\L[%""r1/W1
%-[',"`CWPSbD=J$W/L9Gc9oYBL$j0;Sk.0#b8d'B^W?*VEX"9;T#lH'rE<fPrAkar;uIoq/_]/MoEuQ!Q4s5V2j1Mmo/i1\pVQJ_
%%(>:D^VdLaEK4DG`,i[kr,skBSDk@VDmIYp/\^2U6_#$CS[loMI^&tfZE):>gTs3ScLei8PoT/)3/=#d7d^Yi-)P3KjLu``.jM!@
%O^(=)>a^#V8]Imul8?W%ngEVn7C&<5)PcsGk#YkkICVj#.rpp)\#YGJPePs%))$r_]U'Oa^>.7dZh\daeEW=CQZ[3`QH&%@NFp_?
%I%u`9O`.]sU\"6j9@t4=YDpL;KHCJ:JA`8(.\.u7VsfdhVXO`pNR!MB>3^#dJM.>MaNT"jmj/nY.dT![KqFoS9%eQh5q4MR^!ip3
%S\,a]J(A]ZG;&09;9F,qmTg5GQQY^Me&ndUXHM:eT4rX>Aur\=d-8]b3"5ON-fr4u]8V9\.=:$rE<\L90,Z"'mO#@kHQcDYZj+DR
%5[dK(GTBT3-3)3A9.Hs85ts4"J.s53egPmuJq2Q2AM4fZWcY0*Kb7L?YBLc\oG>)F3*IG"E40*0d%RSK;Ap=i1kOOh1]aWYO6^o$
%C/?>/Z#8`jC_u(=?*@BG-0TXuTU'Z1?4'g2IAZ>,?,i?m\mBDT5Tr-pmj$lR+mbMeP-:3<3cHHPpj+AX1t28H20)c=&G._!7iq[d
%@kXT/5fu&r00(lA]e];aW[$OjfS`7t^[HihiDM^F0B-a%1A4&eWuG`PJO@F`$?4`WU4us5L3a.E.Lh1Ip1hsW[ik$Kockp]c\/uj
%>90#/;a=;`jLd;B1+^:1qO+WJlq*u=ja]0=K5qCI$3l+?9\FcY1=i'Km-^+OjND5*.,'p!K\-BMj-766SB3brAZr@jPUg;uiJp;W
%(hKl`['^O2^%diaPV/36W)J7/lAWET[3?'g<WOl.=lmNP$TOF!L"#%90amC,FM3W,<S]!Be+GJRdWP"pV0"\5lW:"MV4_N/j/E`K
%db9>VQQ768l?'_P?Ck6,?3UJA&\#%<d^-$V6Xf($"'FW;4H]:\_IM>PZXaEE=`?<jWg=GG\R(\M;+X41?R+hV;p"[%Vfu8Ag4cC?
%_P6^mK_,d*Z?;>e@<:HqdL1$M1/;-u4-eaR)1"g).+*aAG;S>40Rhk5[!('RGnI\4+oRh!(RoP4jZ5D??aa+;EV"@3k?Y$3626,#
%PV_oSN>"?+0+"@B]@-7j*uQ?FPa*%j@'hpC0DF<Ej3#KuX^K]FJ$Fo'<Y>BJp#5&l^g@q(\^P[Q6-.5aopgYq(OTMm$nl_8Ya2WP
%(=RHZB!UWqOGpYPZ/gUs(N/H`6;&5oFU!IOEt.mRqu&k"$ht+P[@N)>HRRtg1q]KA"jlDK_M_Spg?V5FgR:$@%UK-Ti+l[JGTh_f
%i"WhSn2+_%V.0jgO&>-.1Ak01)r_"5XX_cnF;!o>0(cb(X=&LJ0nQn=n+=4?XMHrE@G_6H#Hm.K]5>Qba'90P'h!Z71\WMTQqC,e
%gMHP&k$?b61#fpg+9V(mGb,N9,/6,r:_=ZT7<-/5&dOK0X?H]]ZZ)!s:10U(.'Wq)f7e6hR>9jf]?@X%ElMB-Q:\`5-JSb7Q3Eo#
%\'(M?[=W94#])p)c>:*"eIJb<A[-<Sg;S!F:,)&j,60g]R<C`6mmOc9Foo:oKkD3uN:^V>Ap5-;U9j2=M]Z:sG*.g36/jV8.suOT
%XtjbRE@';7PT8'TrCWkKbr&%8)+01=HQh)([d",Q3ls"?Iq*CBa):Hb.F&pF].`3sKn,CPcEYQ5"b\oh*4mnLHt[3%%+[N7Cc@A[
%9,Fc^a"Ha9megK5]1e#i<H=,U8+taKLOEWlh.7Q$>Uah.l",Eu1[H=6lZF0=Mm3%*A),lOS43!.A)2h_JO&O6NEm@`0oL)rf4>Pl
%RcU?r>u$IHKXi"e4&PD!5_d8!&l!;"mCfC-392"1q5#mP/e*(m$Ck4b:)!6U:9;WHU")5BG$IKF=\`_E]"Bm7S-Q5M/Rq\P4Z]oN
%/M>D0[94;&a'I'W;SnuR0=8;QK,$[AX31agH=O=nnbYYRb9/S)%uaOjl^DGq>$^:==B9F=eRdO,q[3m(h]7SUF^AA-bZXa]:F2C4
%[;lUX>m1.0JRtpor-M9Rhp&1ES&5&D<o)ik7l[P%9,=100<DaLEip@^/d9`^`i;ZpLRO&-X"I+7gq0oX6GU`QB@V]di;*h^/q$^%
%%a(eE#fb;cP[5G8@qoUjZg,tO`Og1p>mtb<.QFK3juZ5LZKdUX"&'<PWiHI$e:Ua;R/ne,$`bnJ;jrm3WhKV*inU?@RSZg\[TR_Z
%[m2@a=`l/Ab+aeB),I:O(HTqG!7JhfDQLG1%87Zu*(mo2oIX?NFTK`P<7+9[RJWJC;]!LqL-mS`]&5JVp,ne[arln%Om4.`_NAj^
%eV07Bs!k!#R$_PI32nO96ju@e89N#Y#Og27FWmE?kG5['!"aT&eKm-e)%qm-=36WdSN<`&cXXf;R8c+&Zg=2](F?n>9:Ss_pPoJ#
%oSHP63Ad&W(o].V];jOL;I-NlOaH'2W=,D+brBhZq138i:0e2<PIYYt6:rF]kL='!^'*KGA^<q,"k]?V84b9?LiM_>'9br13H[].
%iRH[]j4$Nl%!"=1DBaTlcRYnG1:]6jU01M5a=28lpR+n1KheS98=9\'KG!Lh^q:6D1*MSPFskdNXYk.^:8l@+RVd>S&VH<#[HM^-
%,GPIP`X-dU(t7BS^4X>;l8NB[`I0/d#0AOf=#coj5$\e\275P([9];TcO"_3*1@[-?*Z@0=`H\oB8Vi\31hhdQ=[MN>DuN=+H0)4
%^H5>NcDM$N%AO<'/u2/R31hf,[aQi(F=B2VUO&@i=jsk"W6;P$!F!dI$d9Va"g<lrptjiJoZ:Q7:5#<Fc&tnin2&LuS-a=pB#r,9
%YB(]?\0dZ(:_s4q>D-9"FWi*`F"llWJhIe%\s*bjGG3MtO*)AY.Yem\Ik9K"8mOt)'g#@ZdO\s1egPZ4,rURKEdj<bXIa'"h%0dg
%0%VR>9q>4L05QqY;I,*$F;_&1"H4B)W@jYOkAqfsV3kW48Tg;XD&CO#19>(fKND&W@K@"7]BZu9G1@X"W_;IZKcHUSFVu?78[joK
%Z:L4)4(HIq']?<i8Tj:jUb,icLRs\dL>]qI];<MbKM>.)S&P/E*uX3*JI<U(UahMIM,%-Qnl)dW_U,3Yk%)%/*VXltV2HH1l]I0!
%[k!D"Quo6H!*kA&76&A4CQ,bgGp"U$7(R?TZ$XrR7i*4T5G'`^[gWmTK<\`CFAXTGg'FJ#`C;B#q4\;/LlJiBY6;E:Q\20Npi@$R
%6]J?Ldt/JTLm8?r/qfFY]#pV&=Ptod3u<SR-lKTmk5pI"l4U#?`UAKpK/)QK2_(OTbdjMlQFYtu\U`B9D\70u#Vhm<'>GJb19d[A
%2A\(<![V7)DI<oYGY;\t>[W<-*3SS8/CjbqR9M_]A3]\I_V3(M2N08T]Cm6kfQ'8>=H@_pQ<T4J(P4.R_"U;n?)n0\!4>d-VHcXm
%L396G_As*Vk/f1\gQceHP?X>^ABC!m*%dRTD9O+;cJ:5#*4aUus-t:"EOI`V+Vuj5HH9`N>XU_GU#XP)_[%BD*k*(`m)"bj+^n8<
%Nf0*e-;69LHPhsaR2WOP7a%3>S*aPG`44&nUD#@7TJDJa)_irF*#Q%PM[P/XUamlH_QM+l)(4i+@NVMd*NXk*'&k*,T9\f0I(7(=
%Q(/=#kCCe8_M/GK%eF[0L5U0rSD(u:$Rcl#1sT(1GXedsc@h+"^tc)H64p.aAG<rnMsqdlQqi:WI(Ia214e)Cmbks5gMI`3Vnhu:
%C1k?L`hRJr^u\l=AHi*N'ZV-jD.,kW]!C3oiu`@5>L9]#;eOmpXT[VGVS4?88$9[UgMGn!-baF%]Y*aj6<KJeQDe4)Fn?ZT\#nl.
%!Z0GBC,H/iH4.';g[/,f&&hr3)"L@G974Z+_0?=t'MKbs]Z"Xd54l^9$fS@:d+s:*F"2!^Cq#,/QZOOcFg;qK\h,I=cVAV@T,CFJ
%B"GrC3>D0TU>(9.W'iAY+VaJdPUk!1lCV/dVaVmXlg!IT\#?JS2=HsnQB_uk"i[ULOKDp#7I%7@/&,rh>)DP:[eL;$(2(+qn"[$9
%\SXe_k%L7=(=Z*j^%pUK_j,<C_JDj`HkV+a(5NXb*1b^t,<%,;mH1fn@$`o4XY#i7R$,a0MpTqHA@S,YG-U0nD,/j.ZIDT_$[&<k
%lGRAjPZT=ND3HQP7VI]G;:CfU(8D1jM6kk:%Z9n8Ze8gHj<L;=Cr&+4Y_I5P,"eh;;_1=e!p"@EA..$cgI/K+!U+)cYJVAd9>7+)
%PsGTYO'o4M0Plj'!kMX[%>QN%)Pq<Y>HBAe'A+MpRedJC/RmRPDYdOq>OE;9m'U:E<%T"OOk1@+FI]s$g\U<e[B,##J3#L<!XmFH
%nCGGW+]G)`etOMV8@P\.i;0WC>)T34T`u?u.\.ZUJ^9jo$E4jg3,9,*Zou,<luK<]=DcDZ>)PASdXW9P/HiWmJ2&31ZAq/_!=kqe
%bhW`V>/1r)*-9D/kH&^H>%H'YEm/F@>'TcAGWK7bWl9O-EP>V^2q2uHX+c.W@:<u[c)<LjX;8Rk]Md9<9>Wbh/Q.l?pcD>)kue!f
%54d:4VM$QCS-CneC_Q!("egf"b;N#\9Tbg@&H4UqK@Y3t#7)CMKq]>L]ME1=?+.:q&_)EV;uaGnBb<VNiooa9W!?f$bShXeLFh&2
%Rs%Q_2:ea@SWhSQB?/M<ab?)t;*7r*0'lMFY"hXU^Fu[q/p("F@EYm]c&Sqjl%P<:i6e8Y1^[mD:p)V&`pY],XUC\\Q8H1R"s*(b
%8r<uq/KhE2M_QtjE6BE5lt!KaR`ja676>>CA#H%AL<sr"=Uaqca-DGr9WlBB9?>gDb''\V"`DWm=+c2B@D&>.8Ob`8]5/6dL+Lf=
%K6A0,O&OD#gPX)jBPeRI$i_b&Uoc]V/<d9[=iD+QPI'pK53kU.c947eD%l![ZdWOHQ$IO.9<(66/(7t4Nt]k!GLd>uk+/>&c(LU2
%@kRftc8pkM*LL[[db2#eRUa;U$%5<ac<6IEj=B7A311=iEl(t<5:m^+^00?0qFW\.SMJ[IAsYSA:,^:)Zo2j4ArT\JQtC>2X)FS4
%']6,mnNo$i#UHt%1Z+LaAN7eJFE+1FSY"=fL=p9T*p8a[fm_nH"eJZgCR&4L-@L<Y)EXs=_-P])]+_lh'\ON_V]*#q@FDL=:s0@'
%'0V^o8N>/A-C,[m0%LI7o/Lp,XqKP2[`aT8b)/Fl=>-JUh'1(Z.GG@d0XX7/&=aVL[nmBB]<U8sPNg.lm<%HR-.&OG"e.'cCReFd
%(.bijYUc&V?!^9C<3cYgGMel__=YG^fM5m"a-;Gc)n#G)N/5JT;CshW-'<$KC^:MRjO[QC#2.sg`YS\ZA2Jk-GQ(]j<7VD!Zm;S,
%L:Y0JTKK4kr?)K2CK;!IE6$P2>FSls@k4'lVkV0-L-Vf]NB+Ec3:T<TMbOlXc7S_P)(2>A]es:@5.RBZ#M.PbO#<68FqGPlPq1#0
%!5bScY/mC[m)aGB>2#(U(S1p8pCm`C)K<$^;L6UK9\(^fFkOQuX9?bJX/fs[9sR)HQlAbDVGY,nf0&8BplQGD@R]^)@UW(7D@d#h
%`I`cQ2'jk>P_MJJ3ErjkgZd2iM.JH[_ptHaC4,\g9U.#CpThm"s3'8e\$^34C]FA1>hAQf,d9"0JCt`#:<_]$D\1q\M%`C0!#Zqg
%8L/:>rB'aZeNG^UAT7!,,'n9)!_q"hdp$rH^ToF#h*bQr!QU!9Bq/d?%X>';E9e]6%FNC].J6rGfd/`b#3/XDrZ"Q<EX@(%>nN3\
%5rj/Z//3H*1NGhl4[f[>!ji2r@>5EP/R1oj+,e$-=ONY_"K,N^)C9K+KaKrI\J[`YE6cD=3)ZLXe0?^NZ9rcL,HE?$(gDK@-kNF4
%;[nmZ^dp+[E]7XcGK;''KP2PoToJJ,.@4s`]_7c-%A@A_O.iPG@[X9RhZ)L^fs@%+F:,B7em(m*"JGrJ;uRiZmt$1%Z8@[Xmif"e
%7@KYS,uJ@(6UA''P/tS_8V/[(*m#NSp:Va?EWkCe7d:1#QWeGN:F`MHFI40ShS1+1[R]i%%9PsK!/uXT0mG@ISfl=Eh$)n#P"uAD
%%\"3L&;`m-iB+@"e^U9VYPc%rh(2SI/Teh!]8996QFQXB+Z/J<0Z2gm7dBILKIWVt>6.?$MdsOjAmd[2?Cqd#!$6lMO,a3758!YW
%\EN(lUD06<R/n859gYC6Q38Y#H>>]!9VOL$q`B]"C;OG1(KhCB)%l+A/:_-r0tno/BB_r\3JpDFncXpppS+P4F#9#ZPh<59<+BE8
%/3\P/dV=(3$+NKpi.L0KA!'WF36(\3GE`N4:rk?\"I<h!d\D0-4N,2Lb[M,n;9XU/&OZ^F:?!]9aD8jElSqA[_2Ra)()i+RM\RPM
%".nIln:flUl,H;'@::'o7$083#aLVg31pmM-O!`f@qF<n_LV;GgZfH^a$^mQAAOO/02XnT]9e^*Q'`QYRT(9T>TTJA9oVn9%m2`1
%GOaJ+n#lUWN]Irf"=EGg_NZbk.]C/>HHUC<>r=U\d*Xa)#i:j;;Q?>8DNY@k8fR$[,B7<B8IP$IPRpR/o&t<"CBMZl\-U`BEg@mc
%@Hoj6'Y,a2lcjE\[*-^'X?e21Qs!Z#E^DK3P'F!;2iVNnpK8[a.UD79H`<p)&ic.293pguWWo\_RFs1^%0tAt9<'UVR[F?>9oOme
%98mHXo:Z0&%NoJ!_l1'TU6s5r+h?t7?/>X0%;@Y]3]aUc\!o@O4aBG)0jFc(bn.s#;(9UM`]V_Z:lNI/':qk%S+B%S'Ja)-N]>BT
%5p_8J9B<H289#oHqTN`mU_-!=LXQ(QX\q>^L*3i8E1PDD5Loj)>X#J[QuN%,f4arNAW*U41B[ao3cKa<$rsA9A<^VoK!^'()C?"h
%,O&/?3iouW-E_MUIR&IZ_]eoYJX!Yaq*&r$q*Xh0E)+:E&!V/=,^H<t?oX]M'q/hb!YT#`\V`?Qe-V^R"I9o4QHWeP#kWGd$D9N=
%TU9.N-uhB^8[B.#1X;:sf3IjG:<Skc4@t;tbi41&'fQpC-Q$i6>C(<hGNl1JBh!94.@lCVN9#LY1&2>.@;%BW+I(YX6;cDPgn)&5
%PcOt-,'P>[Q]RZA1OC&9,&V'p*%b%X$fIJl.o_2YQG_AdPVZpWA.mZ/``CRt2<Q^Rdi?VU&e[FTUiE!g2M:T84QPMC#"-8HPJ\)p
%F6osK&;#ccA@0ITG,$Eg1D6=lCr)=$q4\ip'2fFaW#S5>BU%7,ZE[3X(31^SZ-jl,1PL]n/X.L^mB^7ZE?LWCoL03`hJaIR""*:)
%-,>4*PJfMq7@LIcC#N"Q?c*E<B9\L_(29'd?>1c%A!!'ZdhgaO97/0Z3VFYVOd,dZ2S!")(hcUG675csMLco\Sn-GI\]2X(o?A('
%g%kd]CB]0R%1Dl/Aq]iA,o;cG(??9()[M4Cj9\\HC/U]mP/>WVQR-'hG)18D18rD/O$!2%,HF]""gVZ1K(hef?H_K`62+J!Aq?bK
%@Gj;tlu8Y/7b:UE=e-s!i[q74Nb70AM:(=VbEH1'.8jul[.q2;=%/g*IAD-*;]FD8$2T0$Q?f0E7oD^oK$/;*Hep(6@[0b'mn.cf
%6o4^<PJ^$2V@=Pl5%OfIoL,LQ,(aMh;kWa$+ZAi^_aVpi=ltaJg*?%:IUm'!/=n\U_,ZFHgU9Mp@=`Y@j:uY]j$!d,;;d8)9L_oZ
%'QDU3/c4n6c7Goo-u[ITPgCcR[0dDac>V@LW0%1d-8q7)5j:3a8s8r0HBH&!q"^cG;FjIk("\9T`%e%hno2D29;R=)"MIcg7C^]h
%NX!``que,KO)Zup1lCh>j/.30qP*eKY/tnL$,eH0Osj1E1=DXY7)&:[%;J:h:pGcaNM'tDH(dM>L;u^jHC"aYcGY9C&OilpEcRmg
%\hIV\p$L0X,@)ha[ZI`R8PjKmSBn[K,tJYaQ_V2Qd=X(d]j09QNe)O=HpL2Oe.Nep7`*>!lIh-e'o_I4&j!pt.ns^p$A+_j69YHl
%T;Q9_FMWW]XJ%ca9*!h8adYWu*(BMsoopW]BOV*nZnR7A0_A/TS5JgRqE(7s*"kIL.1(#[&%XEUc6B>k5Y.Sj0g-X]&k"3"k%c*L
%CD>1\\=Z<JK]\Ll(#]M%R'4FX2m@Q-@Bh1r%t8LRd1XQ6j7CL2(_Nod?kVWP)pD)M.TE6BPm]NpGW`<#0?jVJH))8//AO6qE$5bU
%E%3+`E,e_4d%:hM;I;ki90UT#R::\s/+ddmbDfI,EuhY<`0?Dc`NdGuH;DRB;H0H6<O,%E6c^"idsW=L-Jo"-6<R"nEb%P#9`^,k
%IU,3='9O;'0hqR5m_TK'OpH!"Wre4O'F&%+MI^4\rHYYjGXcZmW.;rWd(YMb8rSdd3hd-Q$+`l5H:O;CqJHJro$21aSI[nCX#O!c
%,K^fI>>,e84_17@LdIXlTmeoW=I`j$ZiRXl!tN;1-U]n%Lsc1MQ!T[G(,I8hFZ2#><Q:S>kp*MeOqQIG))jn'CGGPsa#h$GHJK#6
%j;.Q5Yf>op%ipe-U3:9[IRm0\p)`_o@TbQGs&1%hZIfA`\V2@':hS8LBglgOM5f>aPe](0NNDbdMkPg$KG5q%#P!rsQcDl+q:WSO
%S9Y+[!#uG&5W+lHN*mc(j)[Mmjr'n_LV3e:]-idtAKC3uU&YH5Zfh/L]&I/<-00r:11mjA+bG=/-b9'fV317;YY$&Z#(5T]!b!?0
%'a4UH;(N!s7mJdln4QiG9?/Eio".D))i-H(@i,_!-\*h7cqRoLVpn(Zip)JG5[oKmQJ7?T'6pgMocO@C;$q74k]2B4_Q+&AQ@+P)
%\:1/S\/&l`<$\+V1PN9@cp<m=XUYa0HuSQT_gpbVOX]%G`&-aV7Y@QR-&@=a6UTna_Ilb,mt\2]TH\HEam7s$J[eRO_:1s=PoBCP
%NXoF,Ud@8B6Yd+&BoISh&0"MUJBOe-MmHQhN(qV+"A]']8*#p*`5jJ=br*]bA3tK2`V@7Z9%fDgLu9<U6E&nag)1a:!u-[=)T>OL
%UI<V^aLMBX.hp>1_$)--o.)8CH@b43iOs4$6j\K%q+s$#!olW0dGl!\)7X-UVq.HJ"cbP,MdqSsa7j2_4KD8bo.#JQ7!*rEJWg:6
%V3`iqfdM]:e;mMTLEe:rTm=KkN$7Ml:Jp+D#=Vs\?V$`:.&oU7U';ZP%oM$Ul=`lDLW/15(<k`1@L>t&Vm:]G:f:0FboqtINfA6,
%'\ng*B+PHo"P6Js6#.Ec:d-$-)W-kUC7AkQ'k/L_iT\I#b61#&KUY&nQjA_(GjS]f2Z/s#5N5OJB:<ZPeki*O/R0=?OT+j9@ALRj
%WP'[71f*&JZ.Q"&Ga]gM"jTc4=ehgmp]<jm!4rqiEiD$14"<9GDm/2X7>]a?>SigHU6_X!;_e]\kp_2q06rU58g+E$'-+tG/Hgn5
%(@u.4>/qOj1*XbZV.YPqZ[JWKO&?\NV[8<i$Yp8C$;"+Y.`]&tGb0NLB^UJP$m1(')[FZ*ln_-j"-@:r])j2T+dMDS@Y?mGP?9Q[
%YqK/k$cc'))N#>haiR'=;OVA@`SWZ_an(lh0oiZ[/'Kh^B'6)_gf07oneR'!b^ALY3H4+7l+\pt":U;e3_g5gdc_s<Uq6E_)_k>E
%=kP_+1FA]oRD_7)OubOuKYF.M^B'<ln--20+94BbUTT>iGk>kHV'6T"YR]23a8qaqrS]@>8NJ^XG2Tu"SR8D>+Y:`t,:`og:hZ1>
%P(3kn6U>pA7'4M0,3D)QX6GShbj@p7no$s"N^_DUl&8I@7nAk8FBd`@_I-4l&kaGJ4<D2a235@t-oig%fcJiF)m8EfaO7O1@hl:P
%,(7eTLBlY!a*,<Y=Kb*c,UVk9R8lOS#s;K%6]>-3KT=Q=Ce0'j-h?5`fn/sU,:VToLF7hj4>SQO1CtX/fYgZ(@i.f`/mF.='H&*X
%jICICekqhb&OQY;(_D$V&gGm$6m7KLPuQ<Of;aR%SG85J6&ZmQ8a7R9>bk@1Fja)F*]o)^hLUoCiu5BMVGL3tA;'Oq8tnjNjn-RD
%9@[A``D#-@FqLUkALns%c4ce#fF3c('@NXP[bs!f/IYf!$;jo1?pO7T9+#1^-R(4i1^F%Q/X;"(F?#AqQl/at&COmTQD+kN^Fg<!
%3;)(><QInYOY\,Pktth3jM<r7</q0aQ42]Ir$[R1RP;cl^9U:r?)VL<J5l@Sp'VqA.+rPGB?h_/f]8FYR5r:A1EO\@XaFe_0]5h6
%@MPEn@=@mKqSfs6%$HJ46"u^Z]-,iPgr#oP(ZA)iV^4&6#&'?Nj4reE\\jVg+U9"/=,E/Pk>-A:q(,B&B4)qilj5fofQ,8&bZCGT
%c'`5V-%p]_KHMH_]DuUtMBlG)=*%FV`5[pW(bR&>n2nP;;8DRZ2<$U?06A?(YW1-,.TK7Il4d>C[_o%_@)A3$O.]rF%E3iJ((t5*
%U[d+OS4TBi3@atQi^-3O^+3f8`l>o:8@MF:+kDr]+NqYE=DZll@N:aGKWIdBYJa%sUK:&q<P'[A-V&!CV\K@`9k'/.-)"0lk,/@s
%F#TC1n6Tp)E.s0+UsT5\3RX[KBrJ6OGhH"qDHO[#dtt@>r(ufNVF4uJ?c8bQ@N$^b#-KEA93VHkODD[WH*O.?KMiNd(nJu3#C:u7
%Dc<B;fGCSR?I.(W(4h>@ZmF5L>7*`(*&%o491ZD'>R[f<Cmq)m%?lCS>0O*jL!hdi-t-is)FhY7W)QCQWs`+/`+3M8)EZB)9\kO<
%Aq$I960ajNX0>A$`;kUkA8\,1*c_;`-'?"NL(NnaU$JRq85pP4^/,U\)KcQ_&q+,AVU<A5efd!g=fPMmb2btr,&na-W)U@G[g;kq
%CD/rX6I8>N/e^[ode@5L"YGEd:r:b1H!NufJsuoZ>nr966e`Ha2UI`t]p0[r@#C7kc4`c`=rE2*37M3)4OFb*$>gg]!@=Ie`N\n!
%KQ36e%&u>c-!6:)l*>eq;OT5M..E-rMT$UT:cFLo*=<lQU!"$?QnJa0W!YH68/#kG^8fbOakKhU#sG)#)JpaRnLREu<jF96[A'5n
%=d$:h1&&UH)[Hl\-8Huc(=SKQ*BMd`PV<A,8sKVBP'E+)W`$[d#NB.0'&R(03-'rOEXSMk=J?u*,9kj$NW"jBLg++`9SkTkjt=p/
%j%;bZO9g[Xg.m=KE-3l]\u7"]3Nngi)F.!;);YJ04K50!L&"?<=V6%dA[4]8'_oKV<siZ@DZBE&Eh=Tb!"Z$BaXuSQ4WL.%gkT"P
%/n@LT_.*Up-MI*(chp*9o`f[BLqYccIA&W#[oMR]8Rg3rqm&H*7Ruf5-;"gGSWGq+gP\E^j)PIrNR*W#nILa17dYIpdk.Qu&1%[I
%d'US:&X,$9"9nNOo'1Heb#g(>$b>N+J89iDS=I.8-DZNYY/M3S*>S6dQP7\&Hpu'>RUfl@V^)7p`rWn7O-BLs<&R,C5mAlAqu?fU
%A;Y"K>L+/d5\*=[kck7\7Ja[EWD&QPIX\97Vu&6Z=MRoQWdFT^H0YB$081OU%s9]r<T'6\J8,gP,1I2H`3MY:Ck]98$#-9:PPf7Z
%[l&OB(5qE:;HGhm5[@G3MgSNJ-Md-(W%4HHE1qCudFdXri;FXQ?;/?H!'?cDcqR*Y:W/_]PO1eW-:dLFPEWLH:dZM&>=%679>D4#
%Q75*:`q19T7;SWK:fpc:#,:1Q@hb,!iXp:f5fb^>I\(I;"Xo4tJiZmo&fK*aMQk=O&:aaISnB>m3dj9A]V.flAmT(!+^EPC!;""6
%_UI#p/gKB3,TfQ\SB.kP&t1i=AAd&IcV[J']&!.$I]3I"po<AKV_QZ%O<:$LVm3<cN6>"uUn&F=(g!RI]eP@76s,52MS.7;,jHZ+
%?c6H9"sdu!KlL'Mj?3:Re!AsG)D?chaHb%i+r#BkVhYkSXs5g"aXhHXQr4os9V8mCdKlZma.T2^>[LPEf&>=PCjK"+^1gn77icq^
%eR-dKSV6i9Y4j?$mFd]7f3$m`RT:p)TZ^k;7%IG]X:8KNf6[W@V"/\f]S?@.o/XO@GV#\bafMBHNat4?bU'U>q'PE(&o"/1Y6gOA
%*.feU?9u-dP+`X_$GM=FB*>I8Z;iUYW2kK&/?lb$NKEa3VaIr'5Vr>bbLmV4R.ME2^g8K3!K;H"=%as3AXDPJ5^%Y9NPO5h\5suF
%&Lh\L'co!H9G[[r1#:r$<Ms:9d@]$^SK'*\R21G<:Y"*l6oNNH;_MDB-D$Ld:s@0@#dg:M#"ND>(r=6pPYmU5/`TqZ>hC\mosSFh
%*#Mo_!l,?_)QW=i@s\omHF/ssTfc00%)pm9.Q`2GM"p;X66d"0EN!c@@ZQ5^P:AeCp8Xm=,V)9>DtD&d`It8t]e;PA?DU=fmpC3L
%OFn"UJ$$1?%P,??iYYF/7J\Z`NqtF`mNN."j,/G4[&o03b/==?-_SQ4M@mbFe=DOLXOo*GSg%aJ!hDiJHk`AS+HBBF*NlAtEU`<+
%,h*W*hC&k$nZJ'\I`4sJ.o#H'47!=(ggs/%[0:l\Tc'89/[93nP,ZBkf3E_Nh(u#4d/5P]hm#CC^I"9q=Or!S1E'eedLRD&'U_+H
%Idf%Yj5:NK;dR;T+GqF=AZVmBDWPsuZ&ZOHM:H1p[F,DC)PZ<.9'=CH7BD.aFiXYh!hVhi#Ii]u*\V$RmUEF;:QQh9%q3&Ao=te/
%Hn0T=PWkpX+GY?u5PPl0O?)=1:90PBjO1>*gk?.J<89KK+(7Ul4h/Dn6V1Ie9/\B:4D3-q@Z3,r<K;V5J>Ggc*_-&E]'r0-?ji<%
%7QWRVCMMpfHB9'_7pqSBIL-QbAT1)h<WT<tCttdcfdAdTj$_sZ/S!b%aP0h1*$KqoTmB_=ljA&c."15\02iQXaBY6KZiegC%%G3l
%R'E+0%)%(lbUM=%Pf2;*767-d8Ktei+aB`B9#]a_m2%*K"N?VpBt[<\2*[eGO%G47FnNlZ4!8Ii],0>qI"lPtcUbGbT*qj5L@Zo?
%W%#d^<-tO;&3;MaM$,f77c]KhYg&=Z:n%H9;n1>'K2GcC':\/u>&e.I9i]FYC+KaHDMF1*H#-;&I](Wm[-,CHUZM#]Wk(&e>8'Y/
%^d3pO(DSGMa-mTZE^6uI7jNsbXk3u">c8:K:TR23]J1HVZ'gCd=A=i_*8$IH.q9X>FP>pD`KZd#U\8gf2oW$p*OW)^lA<ImAg`-9
%?NQ3lNIu8>ffD?`C>`JNhXUNM,h?p&=)1GG883I$EMYoO@@lNDa&Pnd)JrF?eQ;mO@aSrD?KFbL+_6-O-5Q;=$:=,lM$Lta8`]#8
%1/T3Q>rBo`PDB;r]0'")0KJE;V%**_mg((6)X=B/-o'ib/9P4$Z,Tl^++!Q>;AtAq3&On^WG,8GTI:M!;;k-@>=,GD"$b<mQ71^+
%!h,`PKqs)8j[ia$SNmuV2jUOH:kZr+@"k<#>bVPiQgN`pOt^1.[Q@9k:I,;N+GN@Ej6G!Q,$)Tf.;T#1`hN:Qdq$<Jo,TMFM6C\.
%<.h`8_Db6^.-;G+Vu\B+@RiMJ7O:pG"bH@55UdFufLR_[:_9[jNp96nM?5nR#l1Fn*RbIKT!(6i<X_c>-nso@_lne3A]J1ciOC(h
%?Z$1Q/=^HT80q@AVC^+9R1_AgdF5Eu%n<D:'m#.tpE:H#)L@rI<?CDdf_Jr7JX.#E9&`qWV<mE>dQ1XqLp0TBn-G*IWL;&)d)i)B
%eSbIKT'5.(7\][cQ\ktfBEE(^-m>;f)(AK[DC4B[,u.pA$IP'bAN2p7&ZHW$+K/5eJiQqP-ZLE/0DW>@R7P9X4d2\\,g)@s(k`J@
%-9W@/)+t&<,dti-`+><D4W:H]GqUfe8D")=W5bR-@X#`*(SiaBBr5H)IZZn^%_T>'>(L?noZC"ZFCU"L.hN8U1q\?I!`PXA87GG+
%l'8^0;aj5b!g>l+Jp4@6\@MWh*jl/)/!1Wb7GjX,&i)n-@L6MPm4m<1VkMaG4Qa)J'1==dmWSBR]]Y($6lnm2@X+,na'V4=6,\I^
%!\P^DHNiu*XE,mdZ+fpj/-a<*U`uQY(WLGC?()"0EJ>aDF:@iq-qT%f`)Mdm6R\W=.n&6A*CNR.-0!#@9#RH)VsT`F%EM![D:NBK
%=>lq*M1fEOFi>BN!KW&f=jAqL8E2@cT@Qi/"R9YEOdVr0F/=O63_iGTB,o`JDCjka7.3Z62bMLt]JR.aUO[\W+Ei(c;"8U!e_cUg
%'_DpqJN]PX&pF`nZT\<74-G1*ljr`-K,:ShkCYUGRb-.6BFGEo0=hRh-=^,YCP2)UEr_@Bd#e[(YXi"5Jm:#$2+&CA6Q*OG0,@Un
%?b@UtmLW_00@$a8h^?Koic:L/WLpI<>O$!/)!fg:ootB."-U?Z!h/256dloo8G>jT[o'N:l]EcBec1D":4AjS`u_)GYK6We*.pc]
%j!7Zt=meaoUSf#sCGA0fl.$Ub!#-trJ&/5uV[RZ7$G@*F`(^]P2S/d2`UHL2X-+)\_QbV@k<aeq3fudg-g"Jkq;Pq%2fZZ.5bZ2P
%Ab$edNDN(loU^X*)]N]fEb1u/(5hA),>Pkb&0:<S0+hKo?>>BCNCAVPO;j*jKac/NNX&qk,f2MSTgC%\cm>ENfnr+iGmi(&E5I_)
%p7Bu!iJ^MB$Ij(_+kG-'a@p^WG;VdR8.^IoRL#ZZjUPAd%lrkfm]:-1-1mOQqiYt24r#mYnMKKrJ13/Y&SI_C(e^_4qZJ?f,S=If
%L?:;26KQ@0*K"6N,r16QWZf*U"CG!m..)\5L5l6B?#V'p<q;*fU2bp^Q/7=['\l1K"WF,[2L#jF6Ptt3;=o:5e%eXo&rc.QU"U/C
%23.R-0dU!U9ZZkaCh7FrAFW?JVVt+J,bB2TX![*dKB_daq&LFi#N6<V-DHYK"U(O2'$_C`l6Lu:!-u(V5fc[84%bG@ElIj-p4i\S
%A]>4[4orZ\$fMt4Y]F*(/Kg?+;VNm:H0T3[GVBsM^!sR\TK%`rPq*bpf+HgalYsq_F3Q:)3f6$-gEoq3GQd\$-m=?mE0]aD6V))^
%"sV,i411HJ&a\VJ?3iAP]L'0gK((+1,Fqh"c`1`CLp9cD7$5>ZfOSD6_LOq['_4D^3K+SF+Fk)NS=kNgm"M1![[0UH!h=%b=+T!.
%][1%p&n0EHs,Cf";kQ4:cAiA#``$(q,4e>F$=sJ'jFr:Sos0.m%SX(Y7-RWm#ih;>)'#4ILaC.8Q&'Z">H04A'6%Y/^k`jIe]3C6
%TmeG."qDdJbTZo8PB^/\MHn%Tk+s'D54q]P9b/17,[ogRhX*roD3q238#!G[:rkMPrNbZd$2hZ1&n6McPSL..R6D23WWukhTJ)1,
%)JhPkpP=TZg;IY^(2&e$bh59G_bnX2%n*&ondGhd$B3\#<h9^m$7!YmD)aN#A4GXbpR[lV-(l.3mAi*3g<)*>I#GcP2'*F(crLNT
%Ju^'fZ6:@A3@H&1*!n)>Q3-J;e1CoOnmiKH-.=a&VAZ*H4;RrYqVLfMN-YTYJZ^V]c4>=TaA]ogX:C+n2irbl/E7_12<[,cG634%
%])-3>HKm9$#Z+mL;DM)o"203e/B;IX@)@;&M=cU]TIlMJ+B"ONL2dCfZ,FG492ga#[_sj698o>`E("I)A-pdA;(QH"]bJ#tW$QRC
%k<knV/"&5KXtG:a]c`mSB*dm(PHcC_=>!Y8Q3[r.L2q@\7rcob!`LV1=X[#hS_@&5i,oo;aN:SAPgHEA;,$50`=2S:"'$Wla-Abc
%>odEpM;9rAYagRW+`VV)OqF([%h]Rn>Qt:A\B(LCECmZRXSu&!K[TAM8_-&b2%up_c!DiEC.r`M\5\/[U9WLp/P0G]/B`QM)Cnnm
%DVuAEnB0kHKlQ+NFQAg/:HrA)XSd>WGj;0M<9C-@&GRS?4jj<6fZUD&M7HZ#76iT4&Q$YcJX@E_9h!<4ccI+E8_O8aUMM%?Pt7u&
%9hY+=EEt0$Yr/,RrbRD2MHsT`RQu-!`1M<%XO5ZVXT0e4-O.A_'&;nRNa`ipm)Tf$JE'_FY@411F]ZFj_cXBc-e:!)+>B:qP#9)*
%@'X=Ri2J&cc!4i]%O#A03Q@=YN[8sD7E@j]&_HVsLJ*>4,1\T&)15S3',-0F]FoTjio]nc@kQb[^_4Y&.%t--pZL9b,HO"9YD>I\
%?>-%0qk@Et,K^m,%66<_l(C^FFMF^I4jO+j&-F?2Y^g&8.*;G=N8k4s"<@e[(DFJpLj#C2-bdEZ7=7m2AIrW6/'YpNE:C$j],2q>
%b_/URF,^-A+E/"M:`P`QTbhk$-!L)R9Ub)O+@*A1PiPdR0OH4eU"B?U,g?s>Q7?oN9r()6(l)a[%gWk[JN-S$/2WNQa(f-#>TNBM
%>+[-FOs@q5;?B6i4>+ZF^_dCX_jF,'.h+d9/I$[+Q,_qgBd>['@<<ei*BBQj$`k<a;Fbpb<90^-VUH(:;PAH1,Ss+8d$2.gC*<7)
%kDE_I/$aiO'5h`:?hbL`^e46TN:r-'1Js[+b=$ph[420JaRJo@6:L#UB8BKdSeAI7]!oPQObr+>PWkLk/0Um":X%+Y%59(XD'i_m
%a=G]5&;l#d%#Ve]"n+`]bSG9gK,ZoNb2>NW3A<1pT%#:EisgO0`P+fI79\#k$PEi'C.QN7[BI@l.+]]G.'@3^X7-?V1tG<@3s)C+
%Z%ccr8Bb(W*H]hB_SDk1Yn*g;XCUCTV(Lt-6!bFn2>F(39W"Cj@u.h-]6n?AC^CdIlHlFM3L)0>2;%CD(!1pJ4AgM1;GitTPL@1'
%''5[@(DO#'0]S+2PU8^t6<aSDaP=q0HmpeI0c>[f/:ut+'XaEin74X(,IC_8nQbbB8_$e>%s9`t+B?70QdQZuAS;/R6tB",R:*34
%QNGeui`)X"kukksfc"eKO=f<ON!b;HVT",#8V;^!!<thM72UqjB9QF\2@[Tm/nH3dSRXh"V0\56"<f"r(u<=OW@3fFOI(TRJI-a&
%nWG#/K_9^_<]tbUHR<0f]p-qFMWk8h'%/e&Q-72(R[YVso=CnUNsC^)N)I%i1>&)5U01B1M)Nm!4V>Tc=V9-6&`'5g<JeuhUa<UH
%`(IPI's[_aV?#S?69Kl?,4Rk<_qc.=6+nn@R2piG3b%`>$*<*>648TB&I1nQ%$2,7Q:+p"8V9q@'FCLH*IBIB@Ym-I?ULh]Mnh;r
%`?jRk?7A2g06Y;bQQZTKU1^grWZTsi[kPppR0`,PQ(/\maNNPE,".,'C.e0'Rhf8J'^lS];?k0(@GqERYsk?WWG7_D2ntSJ%MkOH
%#a*_;`Y7Z/XtX52e(NP]9EqZ',XA#iLbjS:`JpMHH(bA5jT-d4@VSJ'`Ng+k)?>io11L@,#TFQ%,3tK3UF/8+^*ZVUTSlCs]Uh(h
%..QQ0&;pXf?Kt(1dC^\j7u8%e:@V.DI-Eb%QU)Z.9d=1MTWL!#5ZJ"P*1+a4^UhcNiLjP:K5Q8kar#4KjP3l(m*o]8SPFm"6I;Dr
%VadN$5ke27$QB:2OT0#?&T*IQJ\94^!@7e.JlilpV>t_%Qd#$HE<'N1V@rm`9?!96l/uUJ:g,P-r2Hhd-2'@&F!Y.J8jM/q<b[4d
%(GD$j^(U0&E")J?Z00Iud9L+YkFjp=QD*Ig4cs<I1M)-k?Ki@BW+TD(Gb16On3#&+XHn&?:aF.&-/:L7;LpK;F7.n905!NX3tKi[
%U!,Qq("AG'DD!8enH^qHo?cjN7F4'-I"fM@$?edX[$YpS70J3Q[R>a%egP\D3CelcQX7QhVqZpo+%)QR)GOcLkK(R(Be0>6_taqt
%=lPo,=._h+l*$)YGY&B(&(M]*bVgi%0D'=m3V6R>Lf):V3)%?gN]GIQ[VA%L\`Sji'8%G;Ro*Y-hMP-Nj?<(a`Jo4!8A\+QO\aKc
%@94g1]gO^?jrXomS3V-b9.E2u'L<C4=iQl!GX0G.-Q'F,@HRJFPqL3VgBb5$"1=lI"c4h0%?erq5WCPGNd7^p(lL,p%S&@p=c.L)
%3?cQWF.>:Y:X_#A;b8o^#j/*:8'Wm*S;ojT&OeM2RmYQLb>V,=?&"[nOW'2g],\2;LkKn>QcH)0cH>5=1m-SH(0o-u4Pu@L#qD7/
%5t'(a,r.RrMZi#g/]<!<F+lf\i,Y'<M5:>-G:A9Y`ab=f9h_9(""n5C36NWp]O%CHCBH30WSB4gd4hEUr'\/1$!WE<8=K>_[N'!`
%Un5Dg1C4C'I3idA'IOM4/=%O$eHgq4;1O\HKU0.0.#oTe5e5uM&//d9Vd:eJfb1bV<B.b4QCEh2L0BUFPu*Nr3OBcq8ZF6BlFQYM
%Ar5V`@f5\P^iG[f1i%?t:n#=o=0oDW]MBrYN-Y%SZAFKG86P%gXQ3ICNh+1)s!X#PEIapKaahNt:]cL`VArIY8kdJQjcQG.ZAe?.
%'lhPDb/4:&11/BpFZ3;c3?T\s\D`X,ial;jPD?.A1i2_:;>dI\PG>oWbM%SW(SYi[!L'#.Z%bnHa%_t)3L-*=&is>KPWU_`>f.ft
%@i\i$,WY3hU'XcY$lmseK]2@`Wo^Y,,7dHrSAC<mNq"W"cN8cYL)Rpl_oMpK)d+#'@,e^*M];n?(tZnYo)*At,,]EAQ<?\TAqgU(
%4AZ$?j-5q0cQ#_&0Q9Y6P[_]Wfb%b$_N9+A*_Jj.\]9\),XQJV3\EDS$=*7-LL;6Xllq'%@7!)<)?`&31njK[8K`d25eTSm5Yg0p
%,FX"#=[Ec)B^k%jW7K''I2n"hnp_*r*7(C^f-&&#q9_>p*[bj%814uWZJ9E>9m5MOFr]WdYrF7V4@kH<?D6C5&5p,D@ZCP+c>dLt
%j*7V$0q5%*Ho"F2ET$#.\J^#Jn[f).VE#Ou_D*IU`WP6r?s)H&0D?*3)UAeKUiFD5#&[0S%il*j2k]]f`6sl0j.T%TAiShE$)]MF
%nPHP>Q71dPHBBt_iGkS+)j2tr;*g/Y7Dq/lMVl\j`e!D_PeR6XLOgj<96bFjb1ot13!s2';7nm>-FsDHki1[:&A>/aEO^Tul##A<
%TKPl.=-5'E$aQl#MA?^hp!>R,ED1DA%ng;M3k74ZZ"9"eTLofS(&,sZ>b[+n=.mVK%u_0Q6&POD1LD>`qo0_t!6()H<an.U-dDk(
%l6DGO`'"7`\8n,OE[88lAVkc5W2<04EM'[?n]%K^iR?^5&PLUkqnBq5M\pFF#=O'F'QMG'TGf^JLd>o^.l5*g28ttMLZ_W4+;fF9
%L9XaB=qh8%4Q1uS5s-nWNku<Ne;RMLLMITB:(MQu6>#38=T&?j3'5n-`+"`:GNR*,E(FF*0l/iC8L1.@f^OEJIO0#"i^*`%/XMj`
%$2*1a/SBf"![PsOiMg")b/EdKNK])6cI5RL$cfGjiZ?kB4`u"YY]*Y7]`K](a[['n?=8Jf>0s"\,72*18`@+N":DW7L(g/YWl*2u
%WKMA`]KfdZ<3<@+VXh**K]`LB7(=g*KQ,6A`u74Q)3uR43'n`S;PXI,Nh[B]9,Te#6g^cj*2A/H*aT[2"qN?%LVV+'i0`LteQp1I
%4+q8CIZ=Z*UD5J=gmelbhF!e][QS!<+K%VL3&#Sr-#m$J\7^o`,rdjom'N)r2L%gp2lmlT30pJ\Y8ou_6[g-f5fqpo*u_*H"b]t\
%hIj$j='@@=7&V5"%-Abg/[:s'TrUV7Ms):49K<t1!Mpo;k$W.U03A***LRO^XtO;$4iKHa._+q=e:r[/@keX@W$2lp:+h[kdZ=VQ
%IY%nWOZ9^E]o,KJE'e"Yoe7+nGDYao4E)"]K;F5'a5-Yi6nZCb^mQ<C56Gmd%TPks@Y$n6N&1bHYr)rk:SbZ4OsHYYp1e.M\1KQX
%E&_ej!o%+uq46=!(^6E@)*cCii4d3D=U$j#:t&Z9J>8@"@gM#^RW.73#CrQMl;<a8JYE`]YRLKb:PC?:iSSb+UC:=6Ig<uqaIp9[
%0Z);&!I=k(7.6*Jp_sGPP?4$GOeY$7K9WbI-0f\\WmL2g<Hf%mr;KA&cXh5M9F<@&1;>+g;]OoCDu0AdT[>I.l1)jAJ0OP'F-im1
%Mu6%-!C%MV1%;*?67NV_=m?d,h(mQpe,mBj#4%$61#Otp)ef_7.jN.;UVLgISg[^p.H'f-n[5d?DtnL5M:2I>`L4k5:AcG*K;#c/
%pe=7Ul7WV:RfFbgq+JYE((:"BM;RZt3!s`d2dL<7$7m@8l"1V*M+)mB_hO%$KD]<r="3A;L`_3UW1#WcDgLA'@:55Tn/r@.A-r'+
%2h#0p/+VF@OdVmXMYtHo'i]/Zq+^U#l=(4n)^V:O=Q[*>W0DI3a=?FHSh5luLA-oL1_'#FT$Yu.Q]U*HPG9VZ+MX<_Kkaj]I^=Q7
%^4cD"#J2B3I^9#e5"kfC$"GI.aDWn.R+qoA%?GU.YoDa_h5S=F>XX#sB="",$rX!,9^J"$r.^pj<33<`%Y.`Cb$kJN:.+R2[CgE'
%@[%S#"l=GAR^d8>I^<(Fj1]LP107,Umkca>XKZWCo;H.WY]$n%^2%<42r^Qj>+_nbe5ZRM6%+rZ/0RS#oF8L7jNCNJ2uI_Br*(o5
%FP-+OV4CQ!OV;',Kdu.&"bKTO`](%.'EapO^7c.'W,<o/;sQtM$q'f%6@#"U98%4AgN1<#+uV/GPD*/V2o:3B+Kgt1hl2>1>J<%[
%\?!;soLWY^(\W"^pI:j[1#QShj$'2b(:6"6cT;1R[:F3BIMArZ/L:4T_:9I2\*Po>4#9BR$]r]d9X`/s7s%0L2\TR,p_-p*95JM\
%CWs;o]ifq$5DJRM!^d.;g"n8lTU'#5o+=8t8D]HeBi%Hd>++aejYhMp/_ca<*>/QpU0eH9cKS8ZHS^b:^=ieZNPGsRV]!!'^QQO/
%(?+,QJ-45gKmPV^4#R!Am`h+/8*N)qgmc,;Q4"242bU)S12q/t8.s2lgm_WYiaSa+D^L_V2<n/R83l'g1r_;kH].&=3V\L+AjrGe
%%,MqMQ"6%2iOp]?85`.#Hfm#m#4IP7^d,JP]Jk^:3)R=I$`F%_G]/m=)R:RDRsI9<c77XSd^Z4XP7WnM]],)U!dsTQ7@+cWpi_L/
%f&R%PiB`=I)2a)c.HXl9_DcB[EP=d77Y0Xd-kX1]'o*87L@?dM#A&A-J_H0+,(<;^Q9_`P*!?q3C[tIH0SjY=FV874jG7_8Ue?RF
%7=<Qs>pbCP^0)YdTud"@0muFuj'+hP4CorEH@Ad@7$7!kJH0^X3KumI8N"*[&`;0U^Pqrb%*=1\#4[]A-JjjhnL_>7j+M>#80eUH
%&`6QJE!J4YDc)ihMF4Y-D`:I!UPs-A[NmlnRi7a6i)'!BAh=acc7ls]15`WuS9hF@Itma<+[UQ`%-*Pf7M7.C`&H(gY,:@,&`;(k
%9-Om8Ht1*Wj^AGPDJ4&C(CAt--)5[G+ac(oUpr?4iLAiAk6As4hlcW_0SF?nanaecT,S,M$EVF2M/fbIDqH7J4#D2#QQQl1YYlYS
%!mX@%?A\-q@_+`Rh]#?&%snER7YuBKQN5nk(6<=oHa>u=P7%)N&mF(JJ8[Q6H--QQ)\u<i+:R*Gk!T;LbjjOHLb`G_n@d:A4ZEnY
%)_7Pc_W>n.fJiM4/WEH8C;]b*&8&+lh]2$C;Ff-hgilR;80\:b_d>M<bufE=?j]q\P:P0F1?#a?=qmn=Xi0jl1o\&THH30,bRCEh
%);D\&Q%7`0@AcCtb,"?s35Q?lD$rrmn%;V.hMH.HQI-.hQ3=Q0;;Q;k3d=lR(TriGH/!o`a?)$iNcuJB>HP_dK?uoo?A[ZY\`O+U
%%4*s8;24%h!m,:]7!R`QKAi\".PY7!#2l%33qc5Emb$T*1\bhfE[88mik#5D&T29EhG%IcCB(6+Ym>![mZ(Sh>SbH;-qi*AO/O?=
%"Bp_LJliW=-#@el)!eJ*]49*CAYIp.@-DE`fc@'-@[Z'!YqeYb+M2,>M[RUD9=6RoDLh7jVDc5-J6X\Qg]F<Tl:WT)"E9pI>*[[0
%'aQe)7-fk<YsU%B)er`k)]2P`1g15Yp.1%%1SAWQi$Ca[Ek5aDl'='[9I?>83Meg#K:?Fo7g=NJ6?Mh$JfN-sn'!1&`H1'`?NoGn
%E07r#%%KC7*+ZtL0&.d$F%=5<CV\`10jbe*[p9nE=Dgqd-0/4.gfOp>,(_m2Bf/OWmNb]NHWr(%#/;=%_[eJ$d'a*u'0Vce3KG*_
%Oa]p^\.doa;SmE$L&c+)g^*AAH-j@:5ojSRf-6)6V:OGJ8_c:Fe*NqSDYnd;_k!,DL)[cFPH1.GCl,@n`"I_b2,#L;i5Tb9(';D3
%G3R)Ofa`'-2i?_d@ha62'-cVh>5N<J;RUb?$Q?0M7"?-X2bIQ!:)F0olYu,*(u3bRAa_;]mPH'+_#Uub*ob6hn[GhO'%^U_gO(N#
%@tWYc%O!R6lo]k(;C5UcptOjQ,`4@D%$[p:k[*7eZVq_aUASj<N_g>Fih5\=5A$=uc*X4B'r"`aAB4pL!Sj;?9ZpJ*qN_,!C*#q_
%.fm._9G\*>i"h$Bn)_?%.N0Tb8.i[4<>ZaF%"]FhXNs]G2c,n^/gUQX^4CrF)?P,3/iEiMRH]QEZNUdlo*28>-0@A:KW0],0cI%L
%&sa9-!kPW>DA7msK->1ibZ7Vg'FEQ.WOULs!]Pk-E3]n()oA9C_Nbtn\_q6?g`3N;Rm^p-7!up^7*?J'KjnV41D_n8%>M]Y&oh_<
%0t>?NTT>=GE4_p@.tKske\ahCb>*o1N?PD&,0Ji@A"eP_.t\f>/0Wdp"ug#bLf6)8DT&[a!ac&Y;pFl4#&qI7c=@FCB`[c`QP@?p
%`dm%DVSqAhieXYGiGVY7,]j8s79C1;Y\YJ-N5_57RP(SP).Ui!J"$uA`5sFJDc7UtE%HY!7aG#ZB^shk@Sl:mqDP(*KT<2(m3J!M
%ZXn&2b(q]X6uO:`OJ'7O]F>ZRZ47:f4#TBe-15prl-a:MgTcV12Uq-H9ViqU)^hC[&_kgB`!R_IaDF`^.3Ok2gMpnO*"(J]@uVg:
%gbo.LeGU(pgW18NQ.sZol1[J[K#4r@<H+7,gH_Q3/S@o7Og!H)'XUT3=tEP33G4gQY8lM@ZY?o[LSLPZ8%qP9<.o'X->;,OUsiUH
%Gnpf.77.,H?kYP0)a4u.Ai,0XQjYp^$t(%84,U-d^,Cq+`*++m2Gah3\/Dl$@%qa9E,BiG`P-=>KVP7R,RmqH7#TPSWZ"rP3%'h?
%@)1Ji!U'8=<u^453^]1:g5&dq",9^]_bdBOW&>,d%)=DK[8G*<Md^A<f.'`.2@na8`Y*Z1&ZLaQK_Yf\;*,1C#.\]DK`79^g-!ZC
%L7qQdHg!.GD7I?"2_X-sd0`(`d'U\9:ERoR#'"5V68-3__cUQC@;1L/F#,4]]TKD]bhP%94bkaLL89fg.PCLoL5@69.:KS,pPUpq
%.GB#.6#J)=)dZ[(S!FrGWB'/[L3=K(,`R].:*VW.(CAf7Od;YM"_afr52Pe8"f>u@P2,q;;L9iT4&lB9AS7dR4=s'9e&&tSKgB>j
%)i,eQ__mE)PnH&<M+uD,j^tCpJ82=AWDU;EWS+NGa:O61&\t%YN12^9;"XN9;6sCVBR"[YF3-"7G<qKR"!tmMW7`Ro8PLngCf7fc
%KS[Bt9n$#mAf#?`ctnpP.a()`>uq+.bKt&c3i-O#c)(Z7*jc-?/O0U7Lb#8AJCI+#<<LLCeX:cUJS'BaE9:oQY7/ZN2$I-NR@U3A
%XK]c^E!I3uA;Jp#1L*@^kPe>_#LR@!GhFL,Li11Cj#UAc9!iC=&dLEI4#OZd6bjJVAV$DS,9.c&$kYDjJE8'IfoWKI#.u-/RthB_
%DAZ80%sIRu0ViM7<&NGhVd36%.eIZ`Ab5"/TjjPX:R*e^r6e,Eb4JJ=J]'[i-Eb>:OIIFARmAS<Ff([F2EbZ:R<#TM8VrXj.tnsQ
%38'[rbhlegfoX&P$.gVHZ;E/%U(&Ih-$2tlTPTMRm&:UGRrY&Iok:H1nj6gb"I%(;m(!`US*rhs[D?Cc2AM4fA2=4?96(W.c-elK
%D$\T#-*j9P-Ca<EK5aGMCeCOq`[(>"*cWL]h.!Ze,#K4(9K#\rZE#B#gLX?W0AakB)H]oTWDUNCo8HCNDo9]:\X8L4#*UWnAj880
%aehCZ!#1(-jr$fIK.&(9J@\!o=:9G(cT$Lq9JuooM:Q/QH\TC<_IV-_L&*aIA@''Q-oSJd]M`.n78,TJW7h]<abJE),kEdYCt+TN
%<l/A\Go<#%J>UptFnDX6@\p*\.7(7r11O:GXVcd2:LGU(3.8q'.T*LNcmFLr:pM73MG.J-g!E6FU9-i*(6VW0kEKfZ0?TMY8iB<Z
%0MnKSMbe#NjHOJsMilG^P\aYUZ"?Es2YHWqR\%ruhpp2=Tk*aS.NnL1-!M?Tdj1i%ZNV\OQ]u=Ma+Pj=KOgiWT.,k<WmTn`'U$]R
%.[s%lC_R8*;'FVo-Qb`"ft=kr3CImY2GZhp^+fmk5?11F6F-37&gY(cXH76\68UWUI8+"33#<8Pff3r.4D66kH8m^>m(B!IaL7q"
%ONfSTp^nntgQ()F+e'6eOr=`PS'1jn2&JY</X[qe9()Jri`*le=U/?WjDdfufsF8<?Z"/O39+eP-uh%BCS(W<ZOW&A,s\n`=sn2_
%aB#]?OqY.#"&"XVZ:S)>4HkiC<Qc'_)?u;Ja_9H=MWp'$'i,5\)^UWM^'d9/%0Ma,b(+<nS4INOJ8COm/gl0c(5O&#Oc[goTI&D:
%Z>"rhZ^jBm6`hICXsHIoWFD<JK.(1ga@27t;@2#Y!@@DEM3(I#'@5a[i48n#8IYVkaJKlqGJ.LBC_W*%D@tPQ@:'mA2G<7E=^kq5
%Nq=JMN,36=,Rusp:">?&1*`8tYbsKK<:Qi1,7DVj!@*OtrXHIZfjY'*jp%2B5n;$!LP(Y*R?EP=)0:OqN=p7"16cV+U"`V)P0IHZ
%RA".!n1]lC8iAgU-$)^6qMu\h$p6J5D"nlfV6Q8$g4h!UQRLNdP7pi%.+sPuVAH([?UNs`qR\L/Rn#-@:mr;h&VEfc"XQQ[?E3cR
%A4I7^OTMgQ3sp@f6O1B='BVPA*]JIqB=DLCf][3;Oo?+WG,2\4b&H]<&\43e*N=A=U9PAC?'NI`M5hXLhc`DEF#%oJL0t=HSP\!@
%]M(l9QAV5H<)"6fNUSs>Cag$ej!F=+&fVlEe;T`MfEP,fJ_9HRj'lXLe"0#7Q[%.29GEXAfejs^*>o\PX]_WQN.pY5e<"6MUO\3P
%$jrK?"0.%#M0*9eis[1]Ch,ef;n)7VWB!Kc6.cIm+Ni;TYRQc<@^(9E8A%@,L<CAjdKY:ta6+Se);%2TV.BY8*u_[gq:E>Poka-L
%1ioWf2Q'p"5V?(mKjQ)&+]Luj<JS;?:J0hd'G?I?aOe.G=#AiNR)Yeq.<D[)"_<cNEta:f6S+lkQk4'YV"5f&3\[L,_n;l/0TC/7
%2*=fN]e0o#@6^KrDLg@.Q\k>?5Y%bDh>bX-lc:fF8u5hR3\'/!ll()Fnup!C%b9afU96kIZIP&>6f#i+UhaL.1_pO`Y2O@f_kV7T
%@2P'en+iQuF.+=p$HM@4q,`;j*IAEW?Qrb8ki`nV1X)Cl&S.2GNQ[[pVhDO6-:]VU9"0N\6*@qQ>Jis-@X3iICG\$!fFK`SktMhK
%&t`nmGXkT&>ln5'ls*An>\eXCW0rL^fLYKRAZ0`^'#>E^[:KOZUiiJPOYY=Q\T<!S"^:(Th9*(t2*e[1ZORDUe'P24<i4Er^oTmf
%8+ToM2;'iLn-I,Y1hlIgaZ;6g\0[4o8q#-dQ"*OY%?E`2Z,Y7[KqsC,%Q+1';QM%m8P2i;MUJStb2Fpb=MoYUHaQ.AK,;IOB*d)&
%q?iJgf"TE%W;LB5V$QBdn^U%M.=sUY='OIDJQM`Rfc/I0L]W`^9B^+#6$7#(XolrkrR24cg;;T;ghK7/8IVI#,l+&">!f@b?kZK(
%Ftq1)C;:7a)M[6JX%DTs88tOS@'peB!/'B5UOWX`"BXuY[&PEUFX@MNi\H9h#E%n*XQkltXTUfLW+m[+0W!DQZ$A#-fT<*f^ceMg
%kFh)O@=M%6LK\.MNB*aJ;[ojoUO_[#;Ou5olddV_3maDeQ;JYqFR1_MFge-DlEVdnC0.l^6`=&;feT0\iB^.1Z)rj5TjXs9X%UNE
%<o]l:@0=d6VW'=*3-CsN5m+#CWqg.<C2mG#ajdT;7\O4)cX]^%F/^Aj/BP0Hl="D+e?hA0lt-8j9nS?1e\j1GiNSV=NUbsW-mJsp
%,;_#Q/d?UN(u0FtO\*G:;9hQiNS7G?bJ:&>,:OHF21taJ.CLX>`;W1<L.\-HLE[4(bFqDdS\hUh(i&_I2\bP=3X7U!;"Ir3+Pm`a
%>!-)"5DN'&:RdpJU7=PEmo7>l=Ec>X^RC%=Qp=4SB\4:dn8kT-l^nTi2TOrbDCF"#U)?T5K\A]N/;$"UN0A2m5n0ZDY@LJPj5>[=
%$-<1G8M^[[^r?NX*[9jH"%s:>$Eg'uLRsqLMsT]T\3DBf)E)""YT!'hN2GV#?3F&ZTb<Mf?OmrTb!QN#7VZ^KA[L+S`&2.F.4!M(
%Li_d%lAAK6ba_-OK1-2h3]1&E$um3P?*02]pSk2tYJEpX/56h3=q,tSBs7`0:(kg]D-57&XDA0j5^ZBT/Wlo?8*(gk$9)YP"V#+u
%(6gN%VUSM@A)6E%4;n^P4A;(ae*nk'-'=K?Y+fG10qJ>J,YX\*$^`7_3t65EFDNW_-+l()XbFKbFQkbaA%J@,UEEDHE^?!KH0#K>
%3]90%"sb4EC/ljJV8;s_9PP"0`8l(q>\VD+922iskp04_ggHs]i"rWGe<mkgT[J[jAgpY>d<'@4.;eY*Q[mKa@uB5MH.)1;V<(Wq
%dVpSqQRpO[/YgP*Ukum_9hnj>M9am38fA:GY2W\\0VRRE2'clMGcJ$p6..='An<sMi+LHl75<5iY;0UE,+TLUBgTHUYWI#LLbtk<
%]jh=^0[Zgd1B_F%(J'@>!i5X/S`CVP3\f]"K9&e#A7k)RN1D4h\c@dlBXgK$j.4UH#=k]+\0I?Nd?oCl+#MX6e:[l@C38Du3AW]N
%(1MoT:=MC<q9W_b-j-7'`[a_tj[FgS(<$FcF<'Kg>J`g!L>6T;@8WqKh8#cL>b;/>=OF?]3L\>6l4a*`.T&5=7hL_807op,*&E0.
%_PVFnggMqbYd9%Pf._D5MH%-(+jlF/ZSRPR>>RXSkG:e,Ng(Yt_8J;Q]8@cW!RXG`5k;0$BFrg-:m_r4!Y&*[_kBB\&e]`#TlFTU
%N2WJEEL?=P@pisiaBUsP\^3=F)1FDT?(h0,AL_f#hBNdC%?aX,k"+^gJBA6fBK0H5o4`a%4PskS+%*gMQM$GO3,$HQDOAnGj\-ZU
%0PI&HA+(6B)COlNiR7Y`-kI)EU7_V]1G+f`!UDN0cKSf>EL$]T>U3MPl9a+d@\?Mk4(n<&TD`tReUN(`Z`SF\6&:-ecb#b@lpV04
%]?\Z8q,28mHV36Ms80RoL]!Y-a<*?I5CCgmB=I`ps"2lqn_OXlT07VZh/;fHEg+fDe",4Z?O,snp;a`1"adArUHu647V,r(f/R)L
%CTl:FmPX*1HF8IWc63-3r\aImf]4,e1HGDKTehRkrb/["[+8Qi[C\@WV-^'>+P!bV0GSMcFE@FtD%H=iZps?jX"iGT&'_5m;YR,r
%S\=/`pTO0m[_m[iWm_mY/$uKZHW[DOdUB&]]\&Ud7_8u!.Q$,5n=$SkqL5\t\CYuoT&5d`G(mAtd]I8&4DJZki2F,1e8BH<Rcf/.
%\a%tR@;e>o#'IKrK@XGrZmDp&S3H8PCpfa4erN_r@5SP.Fah5Sc2LSPapr#5%]_VHq/,@9*NX)e)Lk`OULN>YXcN'KG^ctW)u\oO
%?M!2S2Y3rMQH/8l>\m/NJU:E*cJNi80@*iZ$Eno%57FBH>+P7HW-d1`2$VlCKtb[0NqTd*lC9ci8p_Fj%BCWkh4rh-o3nhB\C]H7
%d\9>C)Z"hamN*?kqlN/ll10hjK(AC+0<h\/go9+t*9BYo3Kp5nj<urIb&pKBap"!(geP&8$,>ljh,]#GR%#)XrpAiIR"8alR&cl(
%R[iIdB=Z,eDK;&4SE7KSn.T'0ZWs?hN6,4?cFX5BS8+$#rKGN)o8dL1A$</nrGuGZ1)gX_Ip[DH)--4;5M0:Vrm=WqOU?l6@eF0;
%CU8G2g.q;O:H?=W!Zj7[qYaHiZZLNZ7U'c50\j+;/F2%X>h?$`TusCL4iCpFg@Q6XeZ6<gdr,`AQjmOff@SZ`Z(0omLr/ZDgZl5Z
%^"\&)SUPH*m5(Bg<HNjsDcgMPJsj<%eD"\R2)hr^eJ_De5$8Nt;)A'(c)nCKe)nn7C,d`bgh?=W]?sjNG5?h\Vb4!R^LV$FF/h1g
%ra1H::@gd]bV'j_"34[13#+X)W1SfMVc#<?r&gJil74aPmg@>7Hg!6)HFMEB4KYL>](PGs@md0Z;jA<A;WtZ5-@lOS3_%s]:g#RK
%Dp(-#A*"Q8'qg/O[U3U3ljn*!<,$tlV%*Fng/)4)hEO_k;eeZRg2/gOY=`YNLY%8MY;OroBF_&p@E3+q]YI8to"3m?[$M:ppG>uj
%Zq`b-:,^/_49T"ZdlT0G*RC1fh'Tks=@t[*-ed\KO)Ok1'/,u7Qd:N5EA*H@c[R0K@kOk0A#$3>XYbr*>]mZgqL6!0D(kRNc+bcr
%,;6YNP<3+p%_C9EDB2`FC8U!p3d83dDH&>GO4?8^Ek.W=BZ&KTA?5@C='e,*RCq5?*U\()h;&F]pBVg--Hk&_04U>Wn[_C;F&`9i
%-B$Kj,?J4V?dd+O]dqaK`b0`2+\Ld!:%0n2K"ZhgnWcSpW6b-0*SnJ572d56Krfm,obb^B=6Q?-*nrobK5Y!QShUHaSE?SF>huE7
%-O`!fTus#HI6WW_Z#sqb(fk.Q]2WLg796I_1u^q-gX>Y!UXNqc2k'-r<]-GqkEcUXI>\ia:)@j+kEcU&[omG<&)3)Gk!?=0Gh+ho
%b:VnMOkm0l%<j?u3_mrt;u>oO\+J_V%H`^OjASusUfYKshkM[beAc-^)?O=9>HMng#R5a$eflj&lW^4")"lQZ-(&d*GomcC"lhE)
%.l?Co];P!pFOSoW[G05:_:lfmd."Eu^M)f0Jom,Y_eMYpQ(cPIqs`crs)XZQXT#FBfkCE=pf*s%Z:/6LkZ(k_UunnMeEM-+bbPG`
%KH6WBIo,F36KOo_kS8DX'</jKBMbP^YaX!XFde9sTab4cp=?Qf'bBt(eR:>8fAr@._T:KgD@Kd!<#Tthl3L$Z42(&JPs'uSL:/I0
%32q,&SC>);5$9^'Xb06(eu`l`#+#>62O@*";+BPq[WS!#;5uHb>gsQ':R"`)cW1reUH[9_[3s,JAb&6g_C-?j=-S1^BAgi@^N%qQ
%`nVB,JnR.k^*o6Ne`cn)>`-dIlSA:1<,'Rp(M2Tano*kQ'46t946rEsJ9!Yu;(A](,JQ`S-=;ueN>WOhHJEpG.eUcZc]636Mm@Jn
%Hr6n#AmAsHf<itbUJFU\^:_7]1!I?ODg5S7&$JQ#N$"R!Hog8V^;Ve`i)9(Q(K]LtO9tOX.r0s\EW<&5nXGVhL(5cHFNKk&8=>mI
%CDU.*U<0uIi=eo9[E6!<=kCZ&?+]";8g`QOjV$16kg[_S2HeT0gT0$r=M%PLg143QXD7e"<NTpHH9VQ0p8ED&$D67KRUjI]!'$B9
%(S=1eA/\JC"I!OVR7=#-oA@WD'KWY+Jt&LIl\eB,MM8XZC/q\FY.+CF[b'8n:[a&Mo/LJp\^rt-Sf5m=DX`rmB=k_'lC=GjZfK\[
%fPCss.\U)SFbeL([gGH3%)=^_/Jf'Mbt5fk6DaJnc+6;BRf4J?2!6f16DYP`Q)<^#nXQ$eB)d$hg&KsOIa7q>-i69ugOt7hmf[YC
%ile9W7[GX'hnO-W*KGVeV*s?Rj2><,3WDN,rZRg\rp)J/OUmSX3+GF+IGX61*-V54d<4j?ZutXUY%PXW#aS3N`c;fmTI8Hs1/IV!
%3)-E[iA<Kd;B,NW*nVsLiAA/KW=?[W\)F^..^d)5U5G_t)XJJ$#?>r/1#*d"Mu4g72dU<!)65pk)o3=D`?mU*L5662mFXB#9d9N_
%p>:`*\(Ik2Z2Y:74?.(cH"-fEfRG:Bhhh;U@fJU%;.F)8SRa#a)uD;M.Th3ak>"G`CLZlU;$G=&lUrQ_hhfU%@e7:;W*M^9DXHd1
%opa.\:*uBOWf44/Xr,_tqp]Gk]76F0`-,p?DidtdgB)o3648i]0XR$AeWjR<,0@PuHY?;EKr+^G\!)YA<L[!k52pA8W:.)S]e@d1
%<4PF2%@Pa_9Jg:t>k]mClJ>,PmmKl.;3O`(A.piRX\5]APB4m;h-RG@\W]UAbraV8e_9EIq4lJW2[=PQc0[UK?DDSA?$i;1)oa4p
%<)@3crb`_r%8P*C=;lpkk-.<`<1u=sG4o-/rE5i^OOZ0</Lhs96J<9VDp!qW1nL`"1R>pB>Dt2@7V/<A(hr)!s00&!ab[WK(-+&o
%O,"(;:0W/J7I93(N:aL*\%Vgn@<T/j:]p;^-An.Hianj/R4)AgMO01ZAYOF;-sk3TWM!i8`J\J>W.13`?:O\m3`3Op7.E#pq;Uu?
%q2C76BgWCnA$&&.UnERf'2!Tp--J\f1sD5!]O;IR!!/i)S#Fbi$#F&rHm'lAM.&9C\qf,*muH9ZQ,etsotbsLFfN0(Z8ms7Ji;n`
%j+P?-)Ooc?`&,?#irtKJ,JQNFhb_=)Dk%B+/f0*'!rY0R02:Y'_]#EP%JnN4lMHRS`ch+&8WoOc(6r6X3]2c:*uU2Km).L,,`:A@
%D%/)mB)OU"TiIou'sasIdV)F;O^Gf54$3E'!4/BNgoe.4O5$13@iPH+B7MZ"h91'\(q#sGXN@aq-aZNj6?@S<lM2ZHY?B+kaAs;3
%NopUHRe(0-]96ftef3?:rLZ&4cadJ</up2h%T2Gleqbebmgu>P>`UUj/RL7r7PrM&N7"&*m.D4;-.$.$Bu<?"0sW1_ELZP54iTmN
%0krj-d:5lB(h9;\phu[fEC(U$.X@+]p@Hs4YH]ru[%DPH<SXnA\oYWA^&:cr[.T]tH%m$j^G0C2[SBc)Pn'=_pTi>P'QmZ\4gZ91
%TGY4=d%8P1_-/bAri"=8`QH)5PVZZte?dil2]q[\+-2k]XXZiNA+`?;oNh0%If^Og['C)\1iu;K6WI0E$"iD>]kr?=q?G35Y^+6C
%bu71Hg$*ViWbbV82S>>T85;&+<]ON0.gmEU7d4n)Cs]Xhr4G/WD'$*k%:qYeJeRuPPlpdm_q-@Y'?3F?Ha+]sM5%B"WW.!!HrXq,
%`8Sl\GDEB?Y0p`'md=)O$)?tUPm\f):Lb7>LGVYVo>IqS1FHFB9g!af''\C+3#djN.c0u&FRd85:FBeca]WNVbM;/82`],W:32WJ
%go)9J-E"D(pG>r;m(2P]\P)--2EB*CcZuYp"ChkdEtqk93R1?ZF-GY>j>co0A=4G#.\)"*bB9>Ue==X#DM4$kF7(>6crFl"kTB'G
%FM$;>]ge9(rN`'Y/mHbU$DR.qa>!O5>f?^>0hDI+p0<F\+*5;a(dkIE&0#h=(9anDa;Bpm\t'.JP,eHRB"P=UJ#=V^h8@65C[gS3
%-.Q1Kn>T\^9<IlA2=;r+A07:d<3\UH16!>_i/QhL\ocZN0*C*j]TTVdKUG@96X81<"?eAEY-mZFkKD=2Pfqkmo6FCt,oj[/=9J!;
%]h2`$D+tF&GLe6ACuFgkL=O#\)7DH3)O87N;XIo#We)Tis/<EUfP4H(<k8(f!;hhG;)p5qf^)8]'CB+HKt$ALR!Xh->6dZ`N+]T]
%YW=\B5T=IHZem74]*ib:eKf#q6X]J4/+I>M72b&u2='h8DttS^"J4o05*jXPAX@TfP/0[^"rGG(4#YMQ"X2VWquUN,cS$/>q^QEF
%k&'SeFkH(<0@[f8P)3!l&W4;r:c+;k^A<b(kStXZU$0q(n1U8`nqG#:M%DL@G(45X<7q!>X3?n.+\n=QD)`!+;JLhKg2/go2ke`U
%@&-R%qkqsn[D<ki)]HE@@.0ak$10rX4(NJfmca,"Qd#iIh&<@R>,NDb-_'-%05.,p3EBk3A9/`M2G?$LEB'VM_$4%j6^d;#j1dO5
%UBZ",CiE@-So:rYN)+qNe$g1;&TJ*p5*me#pn];MS]cU&9*>$%bkX0Ub`;NlIaH/R<rn[C(2LEaF7c)gI^19_\!B6ZR:N2S3%Tb.
%^M,jTY3qq@OuCl=]6:[Xm&[`Ug<7FrP)_.FioAc``!pbtNBJLrmP7$_jsioD,>ZGVG$:c:1hZ2_MME57llT`Y`23(-qi^J-"u_VP
%aIa]l,f#Xp%XRrqkfoI2:bi6'1\*oXXccG'/EQ,*7ob?l*4K'-p&anu>Hm#Q1j]a:]clZ*7]hFNNQird3u6OAY?!s.cN_.eWdZML
%*qF(:i2F!T@P!k.b;@<&j-ioYm)/2KA=*gQR(8Q50j>QrEsRgd#RPt5CNTD7<AH"^i0_9$WfIMm)N;>[j'mW'=NJn<8]-gh-`W5k
%HA=+kMs^6!K_)&#FlHm+D-SX,d2Q=E$.@AC<S)MG^U%d@+gERddJN+_c?aXM15=quI&X[2l4j9h^]/Y0aM0%l\+TGlp?sl9aN7b%
%EP&j9X=a+*qKoV_ND<umfrM7J[^10?muK@%lZ/cVDXGUGVc@)I]Bt;U=?@MHf,h:<K8&X!H$tD5[EC5m%2s<1)r[@ZGIgQDTJ66J
%/jLlc:]L7eDk"o,(41ZC&AS+qI!a<+rn67KQuoZmm8*\0j8HlTChPrWL4RRjCrQ4FBe(cSWB]Zak?5'%QhME#:/.`Nd'89o/81SY
%-XX;:BPd(.F4jHdhqBPce*HE\cb@K\0C?0=<k`]miQN4l*P?''FgFB@c+ck>D.CCFlg:VMrL[#8SGi('/,Q[83jiV.?[d-4g],Ir
%p]>rhrk"0eA#@b]\Mma&Q^pV!__I3e$gWf/i5BdjG<=PLXhe^G3r<Bnp71SrG5H93]_-'n/RNY)%W'bJZR*39lWdMp[A)R40CF3-
%"nDot'W/#lT=TSXRg]25TD)83qR(L&YB5=+l5otup>u'0ZXte#o;FSEWo(Jh8$fP1]mYIXr:Rgh1[k39&k"TihMDk0Fn%g9]+JpC
%+,*IYAH,BZ0M5.h8H[R=C2Y%Yr$l?/U8<%>Zi,s!&b#2mPGup?r"`p',J3+;?d5\t]Sud9V!U7XZ?<G[iTfiO45*g'7fBroZbh.L
%e,Cj*j#7j9hR=A_?Yb)i8jhTB/9Ypjpo0%&/523pj;)Al:*V.+3p4IRi+!(P>W7\[iN@6gA1V#X2I1.0rb8pN[(l.oqV'?JA@\9_
%f9>=m$^U*,9Mu.lDX8]P[2hL**0,o%2\S`q(lNU"3qupJM5j<)=gBDJp(oC8NV`r>]jN4)r9-h?m)bDR=gGeMa`b<R%&cU6K-7!s
%_/[rNkG"M6NSriP.#8oA0bo7eZ>*09m4VbQ[gokW5HZYUFC2_MXP/k<Ha7BnI+?LXiZMH[W<Q,7`/=_#Y)Tk8o)-je,gQEbK^?g$
%rT25qLEQA+@JuJ'T'T4<lcF01=fsEd>lU#%T.ISR<SQJ`o5`*&kWV3"K?9iL=`c$LmMBOp_Ba5uKO,6f&10.Pjob.0aF8)94G6$^
%Ne5oSaN3DP>`XPsr0No>m/H8HCFf:Gja+4;:R:<";FF#m'%!U&NI4h8P:-j1R&bCFXbT+>LK\eBRk39W7JdH.mA9MRZhD%'$H%ZN
%f#(X5?dPRtF5f04NBYYMT!*`DPYJXfV(kr*DS_`_nbAVqZYjlkDM4sRoji$C,MfQ2@fMAD,]ocJMi\a%g!V*W0df]=11V*oXt3S%
%lFG:[T>nQ,T-fH$Au#$J(ri_@X8N#NGhETNI.MsF9CMLkilthr:D,#ea2WMbH*Ll7'\t&)I*A81#o!0Q`3PAnr^m$(?b7T@,g!L[
%"Ns9%c'p]C`b(i6IFPUfjb;Y2h]hia+(D<^@@:_V"=sD_mtX)Dn;cPml9+MSE@@'XC\G/Eq=2c*Rbr3hI<?\VCLU;3mN2baj#8O+
%aA5]U^$k`)A2`a=p)iT+SIGiZ!M2ItU+mSu?8rf7-]X!*8.r3#_Y2/k'q3B,b!\3A%jAV=:EL&9\;c5mAMB'`f\DPs9E.;9bjo)D
%S"1-5[<D:<qY1Xc1_)khFE[R:40W]"lmW\4)m.$E]1V.(<kW4]n-KnAoj5'2mH0b;Tb#a55J5&uqKAtX)-o>-*=KiZk\Qp:lDr#(
%H-pG=oB-9@B;aGORplTH06VNnc'@F"2CSH<&l0U<.oohV1\mGspYcjj)nc=LZ#m;gc0U_%@J@(N^SU$"-0W(q2B-nUdcqp_)kZ3C
%lXu`#6H<S<<Ha*iI/`&KSp9Y7)MIFHYa_!t$>j,-VOXS$hc)f>SgT!qqrdOjFcLt,PHQlo/RLWI%F#`groG0f?^4k`cf$$-:=CoZ
%&#&#mGe&CDo*%UUEr:^!L0BsTf7)+4qkckP=\j\`NO\\qce$%aG5J4&+O"Q6q,d1KoriImI,R0!#Nh\Ma\IXQ'=p8RJ\qVfjIk<i
%."PMbF9[L:QiWCNs5L)n2qk=H:+hn5S2K:'a@i8Lg0SW5pS]_dVk`Q:0^`6%6FX=Yq-plWg"bA#27'H.*CjFK0$OD?o'`D\>e[R%
%0'5;HKI6l^WsoJ5?KY4FMsq[WHiIAXc.D8i5P^X,pck_:Gaukj'+ib,S<-33UNcirX6,t/iW=]^Lhh)0[o;l#082R8YIUVS`UerT
%\GlRBQfCOa%H1(IM6/C)ZSSa7")0rUZN&nT9^#^\mUGl_<o,fN%t6)_B,dt*_fibaR5he;Ob_cb<V0WG[b*J9auo6k((cgW^U%3r
%-([n<>]7!=fd)hpXD_-hn(D&SACjcMOF>8YYO`.7r>T+Hr.k=Nhtknq?YT5Y*n\+$kGhmi_=<gCrHdGhMn;aO@J9^oG9&8=?cj=*
%Rs-U4jO<Jo94OXUmWF[N^Td\8Y6_!&]NaIR?c^-,*Vna8Vh<63)n5Zn7F^S,daOe\X^11/*?AZWd7Ro1IFbIf(JFkL2L[7%=VTM0
%F#MX=gJ=;#K@cF8RT2!pIo!TLFFnC2feR[LXkS6"VjrLQ^&%_%<:SN5ZSS0Oq`c"4rge*j`E?dMiEYfcI@G]]f<P?TSSmV<RWDN5
%h;-e'DHH[.VWubQ\6n+.buSI=Hf=S&BkMRp0sf7I4D/FZ1pgB`CCZ5Or_^t:6!o%Im8LBRkb?MLW7'-^*s`Zi'Q3qJI9Ahkd2;@d
%kLNL[coi4sjmSZKdG+U(,Y%.)ffZ?";ZD`%ZZ1F,fRNdH0%X(jn,,0Ij*M28np\3YFa9;C`/Eb@2bAt8Htp"^Rd(0#I`IqX,I)^<
%:-.k@_7At1ZaEMKoD-Y[RNp4k3S+T"TlW5tH0==VQ^8PSAjqhHmlK_/h0*\YH+q7q&S[SIoN8$"B<s\@,Rk_pf6XRTo<Z1#ANmkB
%A:t;mQBLHD#tja8O=IQ\DC"*!TK-\%BB%KDGa\1G^Wc>YC/c[B\O(-K=iZM%f<&339I;),*S-f?3kInAh.CN;H['XG7c<gik=9-m
%+#^R:o@qEH3GA'ZO-fMM]7]-TNHWL(n^u(*mDIMfQ3CI!eSY'O`[n:D(68[Ug5AFMd-S1>DB?PC>@guCg[AZCo'Xnu[bL-%p7,$i
%eaKpcK4\s6.UV4q;Q?;=%NC2J?EN*G3,7WJ*Vj/r.KcIK4D\R,^%Eh$Chl,5rcdtd5X`R\Dm7o3oX8O<$bN9mTbhsqWKh4)p3(U!
%S6L3Hf<h=@gr_d\\VS,L%o9Co(>n*+]#AkQ[rVHXDWE1ZX_L>iEhi4rUVB\&SqX=Pmkt!ehB1"rbN</agAUEiTX!0b[g$GCZ*(2>
%gYL+DqaL,GW85dHZ)ib/!R[jEM(J]&AbWG(a*])&1p,^.1h_'<Tu0qOe-`4>gf5j$,0u_V4Zg)4_J1`mfsj-_SFDuW@-qWHQjrM*
%/idYGZte=]:CHps3pcR-hfH&p]jLe2o@"#0`Mr7WL2=8%LKVCN)#@=bDnF]Yqk#Mq`@H7^a14F'>D'#`ZgZf8Cn9(:`G5rXO*:P:
%p(!d6mN92QUXM2MPHD(6BAGeX%X<KU)!metWScK"gJ>#^Z'?n:Fq+6Emjl)kT4e+.T9D-PYM3:M(1'*sC^7+%Hi:i/D:oH+L#P7N
%h#4tlV7!lgk*@DY'Sfua]>_1;UI0F5IZ67Ig7%hLkB(:D5%\YKf(u`dS+d<u'33(+`qPNa%Etd)e)hasp'E[<$9)jE#-D'0]j^=h
%lULKkHndACro33qUNYB#`n/l[a[T2%f8B#ZaCb;3_p3VDO_m)$=B1r8\!uQ1Gt;JB&-)IqY:PEF1u"'0KC$"<G-d<_l.fp*PD(o!
%4+"eUDfqmU\+o]aR"BRirS'ZdU3Z+=5-oLr442MnZ7YA4]"7I/49+Y#c^NUjUP$F@o'>ts;WlT9*Vl5eXY;Z;I:H))@SiRKJ'8q"
%Z+;LPlLL[V\pRP&9o$STC%s`e<I:-pQoHW*):Xd[FQ'VY;+nrrW)DHZj"&RR+3UeB?f/B/f0\lr5*t'2iqJVYkC9^V]i2Y4<3#`8
%oT#iPi`KbQh0bWo[6!)K1m;[NZ(HO3L&;Xmn=dHSIu$dTf`489@\;2gUDrUoZ2&FQ>(=;0\=#3rs."DKClRfSRpBW>4M,>T!C?MY
%9U[qIc\P72BoT[#T]/mi#p9"`GB:0ue#a?cSb#%P(&s1f4PW*PT0I#]pA<[:SU!6ZT(.E6^56,)eW9ROCd$c)QVStdPLnYJ2]#f0
%[[Z*,BAH7QCDLP_nWrs)9tkj\7\02<rh)Eh/N;iOZFt>MI8O;9'i%eBe32SNaEF+tVtsU;DP)8WZ#&JY:DugXp94/7qXRc8IBJ^U
%?15]QbpjK/BQ8?5[?;^gO6no5X`]_"`;+Sbfbu$oe2p:Q6.]pA@1o/;[9%U*3-<HK>T03?fg*a3\aA,5VqO`r'+&u_$ntrD3C.[=
%%Dq.4mIXSYO*8Of\r<pTs)uHKIFe"k`q/FTX3l*shqIIfFM^1\NS.9Zd@'`>c0e?-h5jMZdGJaL%N:,c/r8Wgpq4`9hY]Yl!hNG(
%X4tb-I/l.D=m\IS]1$Sb?g*Hk^$YW5&+78no',P[RQK14SfJRFcB"tQ<o\pZ_HHC"#Ofs14T`$SZ/3(;WR^j5K\NkX41F2kkHqV2
%FkGRIFN+A.Q*raP1WON:C!^U]oJEJQ1@)/fj06D`d#)HnJD4,2"#9buKc&A:enso`!R,;a?l(00)0N7t5<tm0Gr3SUVsVIV)@uB*
%fNNC:7XSO=X^:bk]K2.]>+%?i?G0[]RIAqoiZ,G\kk39e^p6("fO?>[*Yd@O?KL01;aCsE]Ldh2q3t?^>^Va!k0Zq:0YcF-BD%H\
%LV96rkKKb5p%h1JG#%l]oi=:mDQXa7;>BA$DmgcjT%3*(q+c!tnUtQ,_>s]6NcW2O.V;m\kFB/l?/2Vl)gLp7QW<D@2)9`sH.LS6
%Xl]WK$6+B7mr@@cN`D!5>5S=\S1e[%pj+;flh-9Rs4m+.Wk4m'4f+ljNs0+<8U[(0'M["9<SOX^<g0The45MhanM$gh8?A$<ZK]S
%T@NnAZ$fU=,_,0tF!Qk6XOaSZA$F\4;.o3r_'5.DIp`N*a`#21ND@M4?I#Kmm[7MLTI<7Rp0TpeWib,bNncIKk.H!6ZkM+Y-I!9:
%^6?LVX:ifZ\XrAV(GNGYXb0D^MHtMPmU5M=K=?Z)-V]9c2M0?pihV<?A#$4Gffu0l[;1-b!5<-L-m$3_>+74teZH=[C:;``]q+:W
%2)cG'1nS@"]%1<%Bp=,G`HHU'M0!ZS>KKZ27[`qr"L9mGgM2C$r^@1[Tt0G;ZpWN!GSP'JT3YHGQ=th%r%P[__UG#r^;]9-b]Be4
%guA`O./H0WEi$gAWeZRoh$q\/Wm(H?5VCOn@3Ut:*@D;9I(f3<#Oc"VGFq0=0JiLc?8b5eNF&rWc&nHp")?M\"b6N#mE`IXVq,e%
%L66oP)W'hlb^=h'bir<+O$<uK+FAo%V9[\!om,TahgN&<FQ60QUY9.bRFSm>>.2f;0745>kq3&3=rk/V<qn)PC>"7,%6E0!X:;bN
%d8mU)U;jE7CH(=c:GDW'%M.<r/[:0*O1+cO_Q04B*cCS=aclCCfn_`4hR^=_^JLt<46l/WN+`-ShS=NS8'^P8eS?1sZ_*[=H.csR
%'`6sm\do_X_40TLlW3W'1DWP\>666W7K)<1Mcm%MdWt+=;gVY9Y&$^1GjY1j1pC.E%@m#20@,s&b72ZAlVlZ-S['uker+A8T3X<^
%s/?@2ngh@47fkW7:U%d.qS"V0fs!V<<64q\3u9L1kG"//6<!ba\'s/BI*kPEPf84KoB#h-(DB_'/6JIZ]'S]aI+Gp_*&HUPM6cHd
%m(fM0-Jd2[/&H^;4I-qA@d%`5U&;jhPO/i0arY*N+reOOG'j+_iU;KJGouu2/ArjtPOf]@K"^`>[[qE*4fadR@obZqfgj3][F@9N
%Y?n.!YPB[).:&EmQ$ci=6HQgKfsM'pMfhP($<.lRMd*m_An1>;nYt2'DS//[+tVp?a!\"7G,:L:_TSi5)LD,2R=1mJ1Y%`h7A$Ng
%nl4jS`,\dr\@S5RDel7^"lfs-n-iZbPL#OBJ#pssRrdcGaW5JSj-e^fXTO4.>`/f\PALJ']lD?bn@\^R-3Rt12N6!=`n5!/^Z0pb
%S*$%IOpVRk-L52800dS_esO<Scd+DDR;4YIpJ^%&Mp7NEJqB"B-nmhh3R8C[`&*9'r\A]X4QVGVh.+a!&"#s::PZ8Gi'TW*0ke;V
%4$)$\1g99=_PY!)bCUsK"h>omq=u=C(7"H'n"j^HZ)uM=;hisbg-jP94+e=d6WH<8Ba$!3^iP1am/A<g_6Xrh@l+'MX2IS]=lDeF
%d6grYr]BT?S@Ts$ac=%b%qNL][Kk*8a4ZZj<d#[$pBU:oh4ma5i$8R*e]rUQ&`tAuKVb!FrSkifl=ps7A<5@i1Z<)^?GCuSY!66=
%?iTBfn,8N*[7BJP#E>dt]1X))c_d?2GFmFP]f/]7-@#1BhX.^tK=(=0ft5"_[@`KQ*m?`oHMI6lJ(O#<Ip]2,Dd8d3f4Q1$A[bCN
%Vt\gBcMs4oVXE:+rOD-)5@!I3f9_EcYIj2gLT<XOs-cP$0&:;,PW,&a6\Y$dlX)k_c[NBINPF?MI;AL1I_EX+Qi,pi&,:9A._kn,
%lSa4Jiie9^O8`S]_sA(TrnV%hra@2Ol2"]`qD*EA_e\k%\$B@YT[qVNLKF5Bqq4cST&]D=bH:ce"oQME%9M\!bk8:ak$7oY_/cmV
%&\l&sYB0Gfs8M%0IV<9l9#DrnDmRJkV);u\DGbY?=*Us^oBY5IUS"=!^&+9PSZ)kOXW/q<qbM^Oi@ce,XY7EdfY@:@rmD6/qqeZo
%hVYtdqj3S=CQGX$4?;t^j&b:8oX!;Y#Au.hfCuqC<WAJrEoiYBcL7sm(OuHJF*OO*08^g[G,(CF5Q0s)YKndPllCJ'e+?4T3W?pV
%7Miemd4W):s0ECTrd(E-I@]UOI-[9j=bt8-o#Fm3Y<D\5/)P95b#>ds7;M@u^T>/j?T@2@=o*-uLW"]:I,9:]o[D,>(11nX0XGkN
%@63<cc-Gd,r9`Xhp\T1'cZJ($Ge!AuqL*)Xp@bV8++J#W'h2/OgGOpKgpun\[V,:u/fo+YNui]C@!+&YSnu)HDV]__qr[ii:Yg@>
%J(TWshLGC[H/r<mgA:^8L&K%fl8QI"oO@bkS]A2U2f@I;/@Tf3JV/ahhL.V\D7VsMpOD%FY]T@-o+1^+:NgU[n\HmHX(1Vim*9AG
%dG"OnkLS&?PFn^rZMsc@F(m9*nX#NkmF?"*m?ZK#gAXu3]Xf!$$iM)qZ+%.+hV:nV`C--jnT"9hVqo=OU\`ilV>K,p_aV$nGOs\^
%[EZ[$DLQ>3BC;>*ZLmM:pW#?rHh;4dk.g62fA4"6oYT0FI;8Z,LO+C19ooh@hK$=/_rCdSF@nX]qMej[lIVZCrE-gS42&JH0"m`S
%dFgVY.t3t:0\]<l^S<`/m@3kHf67o+Bb#d.5#\)Bq=SoZqUWg\qA&J]B)QJ7c/P/'CE[<+[G0!EqWna[?g?83Dfk;(T%oa;hu%J/
%WIF1+Dm/JJn*Y\(cYq*7Y:o7Nmadq]ocNL;5Ao'Nl+rXrJ+P4jLGRgNY",suJ#gWXqd)FrpWTh=%t[=EgTTnWeaI<kTpt=kBAUT"
%n%X@b<r_.Oh;.q@NdJ+HFSj'MIJK5op\"D>]dra\lQ>TG+'h$W='o5pS?>)E4'J^MD-VKrJ,[@1lh0q=BXRj"k$kC*Z2-#M^N/2F
%WkUao0NEVW]lh*hoD?.HGg*e/YN#Cs5ITJ"It&?mWc,V#Yu0D-H[)C$Zi0jOqHgWcW:/%lO6QtZJ,3:9Y0B24J)#AAYs,\Z4drCS
%2NFZ3&!rk^bq)T89[3"=I5Q.gq$1PIY(--=.HajocBRc]43/I!'n3[kGUdufD0G3imEW>Cn#nU_S%@5Kl/U:ahM[Am#JWD.VH/1P
%D,3<CpLnDYD>RHioqMCpBBn%*ouj>,SEr`6(>Dbdml0P#V`#'k8+559oqkorZ5XcW+9"<D\=Te]0nX8FU?SY:hNd>ni.o#1l`JDj
%drQJUUM8?[.@CZYr0u0W6)-[Ch=#Q2VXM4nnFQ:po>bXqO#EL5dnelfhjn)'pL>oUo#':ol(=iV?^q$P4e.sYX>bISc/"A3kmuX7
%&(tHi4"looVY`0-]2tl\Ib;2OmFLjrQ(,NOgq2S$H1Kod=FYI4-%5Oej-B)**7h;EYIN2e4Rs<OXus>l-G8p/<r_TQ2tOL#??s$L
%HMpIrp@L">G+LkM]<_H`s6.Vai8OUaqOOCnfjh21]RBeOlHQ)>n#j7J)kF%W@.EC0n".jQIs&ldfspltn&N,Bc^rq*IWZm,^N]@K
%WPR>i^U<f#?JYV-MQVDQs82ZC_k!o^RJM(OR(9Z?rSu-"be`73&5V,M\\7G1139Y,31E'Ck$doYaiq*#qjj.A1Uletr;>Tmc'a=8
%$>+INi@d!XPrJ:j7s!;>>asumRCbB/>^1TIGl?t+[6$V0H$=,i8N4/f]!eklD>i;b5?rQaRQ\=WgX4laCHKp>2m45a?%%3>Y^c*H
%XG5?@^K[>$hau_N7VQskp?m]H0RNi9S[YrOZ8H[rAS5Lbp>*@#f'N+j_l'j.,q#-%/3TE4IVl'pFa[]ok5+cGl-o+)s6s6BrqaNn
%/,ef"oD@:oh`b@qF8biNrQ4``pFl'(lQ=kQGiS)3a.#$MB7?8_&cK<3n\u*#K)HXLr%$#25L+?i2h($MJ%Mu=DS3Tdhtm#4)h[SU
%?Z'2b^AI4j0Bp3cH0<T)k091KSXl7rDlpBb^3TF\GI'$S^O#LhZXj't@-U1N4m(>^qrsq]hLjAA\%\?trc7=Rs$>u%g/`_"eka&`
%qmX"_p[@!#f\Cs42q<2a5<!fZqjVZsmCC3H`TJ?#bWT\/FQZtcn,0`Rhn=:n[m0n%Dsh<5B4q5+dP&r/URBC#r4Td24D+T7le+5g
%YFg8fA\R]qeYDs6j%ar0lEUBF_VC%cRg[@3FL\Q&o]Wc<[G(e5iTF:'Ip:!KA%;#JrO5L6G'<C;a+#t[n,*_T*]T2cldO/Fh3BqE
%k)XuTFKu.`=''%,ArgrfkLUO*],TArgsq/Nb^J$$4a5@\m^erZl`\"&+'XYpGPBfcn,)PO[eF>.\"C=B2s)3.gWb`1qtP:0RX]`s
%UZ4k\p##`0nFp#`HG&n&s#%K1ci<KV2[QA<X?"sDJq_&3c/A#6nP&HIVjgW$gDa2u61_!)rLiUdl%_4lD[aMT9fs.S>[G,_^04XN
%*cB6i3oS+`2ra&@NMR_k`;TX3oO)BA,C9/pj*e;fSo$t>e":73)t/A,:9SS#^^g,.[jQ+SfACrPnTM*_,OTJ[Z['"Q-Md)WUVl07
%nktSIr;E2L8aFL3&-'DWDsaj*\CLSM[IPD5&gnMO6eB#@4!"JYCp8c$\MGsmYmpI@@rd_cmr*^AO\-pBn$^-jK8E0?c@X^[?$DQ+
%;G!nQpQo4\PJ?YUjlu[bYMGg7Gk9M0e),'@U$hjKjZgNTh!Im$Gk&b^IeQNI?a%0Ai[6[&h1+tgLTas]c+N\(GJCoe;ET:&Xd:YF
%psTa,I<a_/btDDnoZj(8H?al5kiLdVhkufJ5Pk*IbEm.<>^ZADq"_Ies8L9@Is^;8[82fhH1e_Ocb8oKoiifI*+/T\]<C">-\YY%
%r:[`5?@CqP='rW:rk$K^I.d9`pHSe`hS4L=O09QD*.@S8X7&:JijDGR2j[m`rmm\p]_::_p$),c0"q5#lYi$WVq8+7HhNlZ^V9<q
%rAU>Dnr)tn#hM;QrPk=6Irb.?O)BF=bo>R>l2%ORIsUq&DpM3$r-7E&]D%'ckJ'.Zp@$>bIrOt+D<C'OrTD&F)h.DDd?TIth`:Pq
%X1,9<pqt-:IXRnpHN/a.mp%n9]^Wm1\)+W6s)7@3H1Q_S^3]\$oAaoThRr^\1N0pOqmee\]_/1`^A[#mQX70Z^%MAan#jCteYS$c
%]`$'4k?`Eq*K4@>IIZ+iB]e\8cCV]Cp>;K,pY[^Bo^:+6/mNkph-W@[p#`<)\b"VN2_Y1+_foJ$pr9jchd3tlfu_X\Dl:&d]Q<L2
%s8G*`hY@'@mp,\Xeedf1\p!,aGFuS@famPco')LmhQ:P><12q:LRVqs#G5g=3VH"d[CPk+2kJdZ](Xgdn""OG>^PqigZOXSqs`lf
%s5(6J?[Cl5kKD+Sn%Y"Br9XBCddQ(Cs3Af[?at4QhHMX=]("h>07EQ++9-`Qmr*[LVp#(jp"s,jptFmq?9Wi5jhhV#q;Rkc58`:h
%pU^qg:!]E5c$]$*oD.0KT7,\hnCQ:/\)jgF`YVtYl^ddR^2rCi)h5MHjm<l`qULia0:f`TiA87Gr:plD%ps\Z_oj\sHg/G;&&7r*
%l>n?)IXh%gBCEQZp!YFpIrP(sLG+("/UdGP]Ct*`=5UX`bobj@p7l]lYJf/=7rR2\k3>I/Nb<k9d=Z@DIIlLsQS6)OpsSc[^@^s?
%n(p/%jS?RhTmUn>MlU35o#56jr:HEC\%hb2`ESh`55jus0AcTucC<uTT=JlhGj_n^_p'i!qteL>?N'fW.jrYjIWY;WVk8J<ebrRa
%Gijq%5LsG\Gj5/C^\ZsT#?Nfjh#$U<nn#J*J,eW,B0Q:VbM2-hX2fusYJ,:0nQAqR:HlMcr85f=Ma.4.kcXgNDdRtenDsEf/q3Kh
%p"*Nbp<iP/?b_!MqMuFGJ+1u]J%^7*X(u'L]DU33kJ$fYanYkQCUKRo.mLPi:@>fBnbUl5cSrW;qLb!j_:Nn6I<P$JHtPu/0#-uA
%q&A35^%Bop_I*:ko$+"l55t)An%O'1g^HAO]Qrba+-1>hpVX[WDM8Vh^3&]3$[8c0qYn)3%rTG6cb4GtK<$YSG5L_))[N=uk0#+g
%^V046o67p^J+MYMhbAUurp0$U?$N,lpVXK7YCHTCRidUHJ+BAHET_Nfhg+n?lRuVUF6?3reiS*Uo^)4J]5R\jI=CqOL#J;DIkHKe
%n%J=ZnBnpR?bQ=,I6V!5rVao@NrO;&hXf(+;k*U[ppX>Rh`n\srHAdD$&:G\]RKXp[0OauQ+)6&GP7Njs1PENXZ+kSCeI!6J\m1F
%Vfu"UX4G!B((kJ&_WACYTmc&%oon-SDaJ0hOM-u]e8^\nDip[Z/2Fls[edH[9,nhu3A$odZTW8?b'4+$j5E:W1C<:-X5Ep==b#k`
%jt:B7[:<ut1Tk&sJF*!Mrs\o%g_l]WiOF>a[DsVfK?$OH7u7U<rkI@ik"#%Cm`ZXE,r+E<i28u(IL^K=Vp+U::5PU8Ro1<l8\-@k
%1>kAlo_tB&FSV,,Gg.gGK-iRVU2<]cT]jCgc@G^FfW=^(^\uF-hu74KoBa"D++H[Z^pTJ&!f:&oK=`#6f)Ak/"Q.0,o5imBhn8Qn
%O5EX_58[_c*j'"J[#$)=C3=he*kJV>8*t6K!]L;l#)nTHD=MNc7:ORaeA4P>VI6P-cC]UHU_<N2n'0Xk)jpk:%e3TkXNtkog_eC]
%00C"t6@JRF0^iqI!Lj;G0)8N*$2(LsD)-'7i5U;UB90s%:koS4#WJUq)G&V`IBZ2LgGSuC4k@<08nE<WRVfGBg8u,"(`s.>i_O$a
%ffmG.cu(_q^$o.n$2'_\NTkAK!OC6lQi&?&K_j:ZMs6tj!ps$p4aS1BKK=Lb7_!kNc)>W/[1Cj0G.YaA[+2&<0]_5+4&%E@d@:6t
%@mP`1M1&ts*1*&KA[ZO9Z/Ci10PqBMfjK<Q(:3u0X2'q`SEpL05I\Strj(@+*;3ohHa#i<ZBJl7\@orgCS\OAhil_tIQEG0c*ip'
%G%VOP)EWtc4g]g/U/,0$RD-ZEA2fe<=*P/IAGV2^@/:bb:YAO@07N$WPNc-nIa^0`JF$;l?$\@"A3,%@9pfeDfX4IYbBgBZQHQk2
%d.%gjF?"RgB'3(tm5@Q@N/n-ZnL&<CffmG.cu(5c^$o.n$2'_*3n)t?"(YWh0)8N*$2(LFEi+b4$ae[3p?ZeO'C,)')W>k=Dao`@
%X*q3A[bE\=]KKj7'[0>*N=kW+QRUAcTOU`2-u=(LA+m]1_#NUmpgG(BXA421AZ+[]Zj#0SRtjVs@k+fZ\dk1gCfpPEB#,=_<_%-&
%G]aE12BB5k49B[6"4b^T&2A;*duE8?r4`dq?21Q?\pbo/f3o)OO-q&d++9!Y]PKqT%^Q\fo8E>8hiZL!o,p+:E=9.$bmlcs*rI<b
%FEI`-cEYe($dY,VFW>1>5H,A\\USZ"n!@CkEpr9nZ_E4Meul1=3$u(=*nEKun+ul9`^!><3*1-p'd\lWk9A+MiVI_jINA20<c>%J
%lnl5>n?!a)_%l0*Y>i)XoB?(!jc+W_#J3m!X1O<JaXK`*FS[[dd5cN(H,*<dm7NCm:!mubg#9Opd%5`1]T:$\M5=GBrn6>^!EaTT
%AH)j^dVF,@q!aGrgV%YU7(\aFN>#UF'K9Lm%AEQJXpkkH5:bbNn5E#G^G7H*=?B_T'UZ/R[*<Csf$9NI)P?)BY4`sXg+"=Q)2#'N
%&b(ujd8,d?TE"?%s'<A2j%3HPHU4KPE[;\86TkjKF&b2?D"+(:_n):>_2SWaLrQF$>6$+d$C]sMCp@#2:uSf:=P.`J<q6N@<lm##
%>l-9T5GU[8lOdjo_h[2)5cV6p;:#_TMm%`I`/:^XTYbJSYjcJn<l_IGpFj`gpCUq&3K/4VEOMUp+/YFfUoC"m]O#t#r'aY.D$1S[
%)hWk-9=Hg>[CUijJS-'9_rp8<Qb'G7.ltY\O56<_'srnNMm%`IaGR-[TYbJSYjd&)f#FsqpFiUaltn!RK>Wn;EAf>`kJM"+Ero@g
%$sedpK"o78Y)WMYhoZce4BoVOENI^hbF&OBKqIOAo9)VliAccp_OB%CG+-3q;tRG2iu!pH*qF4?7.Paj<sJ*QMD'r>kn%PeSY$D0
%&=]f7@BS+NOIA'@l[Q,1[15gnbt<uQ'+$dFQ&"=q8r^Pmf8YP<3PJ+gTIU]-5*f+"kr9[nFS(j94N.*:=T94d<og'B)e3Gm(3F%l
%2u$lC2aJ!(#4\C9>e"%Zb2EnQ?05H,bib1nr?&*4KnHNQ<3Z?B@kaP*Y(niQ_-0JYUr6@Ac&[WY*Qna"0T:"I#-7ZcBr5WVUE9Pc
%3!9M5(q%PT&<G+70@FMFl:$uu'7-dQKu9.13rVb5<=EpaWP]dt^]cf%km-V*R`K=KX"gJ:dl]of&qET6]JK1)l$/c[!@+_aMf+sh
%#f3,n>$L2N+o!3&L7CAK0W2MWG:\R3S*L!RboDo@*L8[E"\@I3op6jZ_6r0gpi$>k"QSk0W2_:U+Zj-]6*X#g;lR0*WS7k*kn9aW
%2d4op5u0#u="[oGlN=.eNKkctLNl-ai6GTc*qPnq2l0eY.9Hg8N.JQ=;OD_"LFPpFpo10C:j6Y#Bs_6d[LMOW;!Rs-:ha<X5mG/-
%SV7Zb:':K*/503CE,3b<TZ@H*=#mgiT]p]=C<5!$:1ifV?kU,QimTkHALhsUB\82dnZWA=9+X44MV88cR'DI%rLniQ^fLl!ocH:6
%FZU0jAR[VtV:(TB2Z1@N*<\jX<jheuL`:'0L`\/#&J>.FT<[>iW'"T1LbgJlHA`\.MN7`HA+e?P.4r=rZ[$"LQ@8A.F&b`/I#],;
%L9ZnMSZ"N!"5s,9T.p2SKj8.,O.Z[A@&W)mbQ;:\+QC9uH<ip*E,qWJm#&9.5:hF;;Ak+nr[ufG_#OPFlo<9.5R0@Q#jF%>S.,Q+
%FlH]t1Bp[:^r'---cp!<=E%C\J0N,9%+Z6qC+;S*)nWO[`b`(Eb11B(+_:IQ+-5dgXV%$#O(JTlril:WJ8P=Mb"01Zmqd)Y&/Hkp
%^NO64cE<d>jtiiE3.N3-"Xkc]TN5&OYM&HqU8+J[GlTnfM)"\L[.?UJ>@Upu!QeCQc`G<Nor,L?)"[0Ar8E+:b,odtTq1f^><(2Z
%Dl3R9kYnR4(UAVaYHhstY]VKhXMYuj6L02.7UF=VL!*If,h23XO4ChCb_U=O^]r/Z!)&>q?\VF_;!hb,<8dq'Zgna4#g0!T\g8:,
%""%>C@K\[k,Z$LLKB"mEMo*-&bVYX%\i3kuNWYL7Pc@?9fc#cY&]A\X6.DY2e9c;k#Q%MtU-_DR]4*0(WC,d<V@Z`,=D3l<cq&6]
%PGkV6'0dp4I>9[.3V-D@GT@qLdBt24+\>ci\_+CE@LsLqF+Zd1-="PC=9g@#$Ua(@C%Sff$-b&(;aUMR@-c7Va&9&C:I:8Ln#C[S
%L)?EX4&2'NZ9Ja[nI7eaF6/FMNh?;RA_(AMj'dHP?[6m%T?Jf$.mN!E)80P"%13)sSS+hei]():I[d33au-Dpn"I1BlL>],9g\@p
%ocV8*:X7l:&%,fI`3HJ:7*smQ"#/kg:OkJtSiT__G%=VeVF`g7b,375!6Q.HDq2008AVU$A)i6sMdokZ,o*NEiFKB:74M"gg6m>]
%+VbggPcngtO<N.,3[5'_eL2k$2&3cBMFEFjiY0#pWK=rF]c\8HfNr\U=TsM&^,Ja#f3;s/)Q.HnWshP8%JSVfAA6!4*O4%)T2;2$
%gMuSDa&kJ-$_2c_4]T=4>e2NgO-Vc)d4!AF-8RLjLhFFJbb=bO92MZO=rGZ\/,[(qM=pWQ`(K(*)P8ZbL&&ZPb1k\QWeBKsqIMg)
%%OW[;1U&?N@k%k\).g_2WiY7oP1SQ,f",PHXGfl9WPhV/in",j_.9%%A$^;06oWPWA3*./ilWt&JqPU3"6&X+m=2u?S9!'e$#JWS
%;eX,SO,@\3FD@N7WZr,h7bVra&fCm[s/LHnOaX44S$`9uX\r0s`m?]3X!\sJZ>+ir2V*HF(NoI;!@IcLo<PCZAQX_#/8qQ#/PWRt
%.SC)YZ+O2h@N^jVR-$pB4(0(;j\n93,;'CT9R^H(FEN48b4ef861p9?19X7B[.3HW,#Ma*XK:D,9803MoI:$f$mo%++RtL]&<&9I
%:<ihS)rq9@+4Y)I\ZqPVN/Z6ik>-[Lh]85LWQb8i.*H$J;X:K+jY68qKJ(3qUcSifeB:8#;_nI$=OJlQdafnd1Ae0P&Y%8lC',6N
%`0QkAY@,g0W2_Dki\5?oMYBQ%q=MdA,Gb&\m'm0U7`SV"^rfl;h/!OJKp(bNC%AO6Bc4-(Bk4B"jI5,(5ijY-W8c:ir?FS6E*@W(
%XSm>&^`GGgV)<3m]^fOpVFQ0C/hP+-T:eH)V&O(D[Xt+=n9GqP@Mr;b1t=[D*Bl-lb$J1&!k7lk_+AqXN`;nl8DDg[I9(nu/VJ=Y
%M2AZA?tCo<8/>mk\(fjXli'']`.6C=pTRR);1!l:YcIA[k5@^hH#\A-^-kF*dHYA;SbK68e1%hlgT)=8q!ltNrCp=^ooJmgF7`68
%/k'fodopj5pUb:]25ob&ckT3VL!?^#eGMI+EcuiuWfCZ@WlslqG26>B:Wk@_mV1EEdJ^/Y4O>\W/m#QLKbm2P[.0mS5#u!SgW.UO
%[eT/VZ>/p;n;]D6[(N$](FAg_qkCiP>(54jck4QOhm3:-i8#s"kh&'W?lmZY<abVtfujl<66-/(bGn"`_DCnmC)$rc@M]6]Ve$]*
%H<4q#W,XKVE%AH&&#5C)$aGCu/:5o>%!]`d%!YQ@0oBl'MAb6n>24ufmDWjVrs2*"Ai[<hNj`HAn:&quPhaT6N:-+J6([\1<BKa[
%hT_5-*S\c'N1tZ&PM%m00738"GfbhSRF+06bI-9Ben#QObJ&peqcT:@bWTgeD2+?WB!-+q4#9@2Q_bQ'pTl`PZ[5lFH(8+4B(TZR
%i]MkD^2.J$*Ar$'2$UO%Itk;WSebuRh9uRfUAJ)e\`>qtBTuc,6j);l(<p.<`u<3>DV:d&hTI+fKA49jNIjg([)(n<>I.#,d?W.P
%*%*6PlK76=Zr-Ecp97Hdm-S;\k5OaXWEpIqqVIFBA'J`tGfst6E6E82E8,OFFN&Q3iALKii"ZVX.Ts#bYB>,;Fk:H_goE#B2T*/\
%Z[(J5(2\g#Z>$)tMH,"?0TTSg2%)A$4`/tn(#@?]c!I8ofX\QN5*g)Ngrn9.K)8]_0t/\,DS$OBJ;qg#6,.3$Dhe"lIIeBFAc:`t
%h95d\S'p+Di+l9\=K5`9L<j6bI03f\LsKJP[8sEh(7m,HWb$QY\!k-G*F+@9Q)n*//\L<*MNrR#$<O@k(,kl,^ag1A^ah<a^aiH,
%Y'Vh63>^MWSAXf@5MJ1jY#s!NYLq13SLk5\L$'tmAjr=D_,YW?r\hbl?FYC5>ompe\4AjLDsKH4l0%f2IV^c0LP%,fi=%\^/hK]t
%K]$%5@#3I8,*)s?aR34oYOFsIZL_q48ln1FcdZf=l(TeVEQfCQ[nJ&%FWb*X;MZLU;#F&-$Bq!B\1+`^N!RKCfrMIQ-]D&j0@8[n
%h?tM-/"m^I@u+SL/-2\K4g&gj?1fG0^dfkSB<a(/JN?Z,<#GF-GPJ`^>5]8\Pm-k8cV9&QC;3ZLA5Ro$S1%>A?<%tg2P73Q%bT]Z
%Lnet^*RY.3Plf]krbgbtA'a;,Wpgb1Ngas$'SO7]C4/XtofGO%XK+eG5Z8EeY--2T[n4Leg4@0_D5A)%-j=`<6enW<E"tI7KN"3a
%PO?PN*[84S=)<hL-mOj'YBHk'FnP&$6e3$ShbZC8O.aYVJde\P8b!3aJ*/pG+3hcXEstPHQ7l>08cU>@NuM/9d#VR7XKr#FAX`DR
%"Tlot1pOJ'<Fs>:o+[(`7'9d,!ll=+5mLK%5QtTuYH87r@Tn>QMAOti$*I_^3_%&PbeDca895#&geaeOQOjs-Q&6lR!(p7Dn=*Ac
%r._NBW7,l"cl(X$DBbCfRgR0@%:aK6iJ%]f.:%^Z4TME3isaf]JKu.Q_Tq^p'qP0!OB'$ob<n[>@qLHss'91lhKed4dMS*C"QlNV
%mnt%u#[%[nJc)[0]eg@9&15U1gu0tAWGb/3UNE38iI\41i"E)"%<oCf4oqaf;jh,li\2Zg]-s^FNgMbA'Y8$GnqBd(Wp8>%I\=j\
%g`kDo.T"9Lq@YA\nRO.Z,f9*u*Mu78:liZM+K!BZpXkF.%>0[#\n9g$^M->K'D$VabXi*[*O3m;>\*E#(T>k>9i_+pV$7n_\C5DQ
%Sf;+'ap_6uOjK3a/EHm7iIg6T&iGY&o+nEB-$_]`XDZ)j:=tJsbU9`*@?8pQT`e*<*AX;I\<pZkR8T=EcVuOZ'?&;@,k=pt=TI_\
%jVO2boc(q4:'C\#aCnX?W$m\T8$uX==Ptuk)Qs=ED@Wc=8l%=0#us?A`g2;i$oL>$'4*>tqrgN^$W-^;@;63-#!*<7hqZ@"W/$q6
%^L&.<c.m0b%<SQnI%:=2^g3^EIV9'JFBdPI!>m;U3E(_gZ\-D^Bcd\h@;*egNoijT_2nd?a8dKi;+6)EH/ESfL!PgqbeVS7AL)_]
%e[c&;<M6+F`]SRA+rB60^fUq\;=>f3V=d0Z%:^VA=R3$1pculDB:C`EAX^i7`:XP,<;S&IKm;>;\LnH]P;7-DOmh%#3'O%Y)oNpN
%e_in&kA_4Q^g?dC:4Pr56h:?G(aL>]O!*0k3fpD:`HPCo.N5Z^W;hOG&BNWr9+*lt*JQu=(On^n-cW(,62Dh_5"4(;B7O),QmYl;
%h5W$R4'qIZft+K*\e1]2[YN?pAi?7Em&+GNkl>VUdX6c&,]#$o=QAS5$d3??*`MZljM@0PheF)*R"hhF19G?Bd##Z&FV=kZ'/Oc]
%Ae+B@biU,T<ri(FJcjA!ifDemh98a[@=nGjD"f;Z!:ho__/*"+!7Z%_,/IZ:Y(m!YK2#Vf]o:B?4fKqcqR2M+i\C6c8l`Kr*]eOs
%oYjrai5pk;@o\IqD^t+j#rN"j(T]I?BlKY//4H0nmN$'0Qpm@oTt+ZU).M?]AEKsL&%`[S-ibOQJnkfp;d`66XC?'\JOYn46DQ(J
%+I0eX(r?Ce#=H$L/YiY-T2IHTPR6%5X(4"(TIu$[@Wn^>:!JE:=!d1BNe(H&eY?sS,9=r0g]9=g$)Dcq+=^^$\=LpJX?i.p_-Vi?
%\;H]GoWi77V6nlWVSPBT$imPI]#5g?qH9ih7O26-s(.bP@;>X3U:XU][7SV&A#SEu&Z@N9'b;lcX^f5A!ouMqQ'aoBYj*sh3)iFb
%.-_d%i*%Hs?./eaI[[Migl.8$*(h5MQi/+fHpf$eOn>!>2$LVO'U^je>/adlL]bEW*?I[:(gTX%dma#c<2f*^UEbL[:(X)o.<q#T
%fX093_lZ"dfMr=0<'?\<5("['39dG&)*msr$IhKI8(opl=aR0H$YEk:Z9<^l>6S2kHr?lKek:,s^VQGLG!]n_#[!J06@.1<:eI$+
%Z/KnBII4;t@A^#5Na;OB%4jAH4iY\i,I:2<*QC4b@fqbdTpUo!i>&^8q/'_ETF?_dMEkA9P;59XP^K`@O2qL;><f.b2`k&X5`t-p
%&Gas.;sa$qe1GWJhh[.[);._mCF[mpCeSZn[j"qUZ6)d!SU;ZMc&%RGl*X-m9Va?V<%^uFM,<5GVe02sq(Ub/308f!E-^2hb"S@=
%q71!XBh)DuTpEcG*K)#%/:qjgUX]9B78N$4g>R?eG'/IUh#04-`)pseNqs%fRmj#s3p(T9SObAk^'0eOO6Y+]>#lAO>/X<E'@1Fr
%7lFUjVp#Qh_H'"X6W2iq-T#BM6eY%lF#)2NH1l=[Sgl22-lIYeAE7;MnG8j-!Xi9!oe=7AA-d8)el_5`0$49KOOn.dAe=U=*MX$>
%.1",Z'A+-k5"uE-(fnq5b"SSnIG-E#i&%.>(9FM`).rd\-a&<Eq80UtjHC0p.&4bidjd8?M/5@c+=bH[+/Ta^+O^M3cNAMfM!EB^
%^BRf2E9Y<lB\]JJ^Z6A,Y^2Orh*<HfjXZXKIc?eD5sC3pLW"8(g:kKBaO;PK(9Dk4;h@02bYEj+q:sG[>+.(b,.JF]SlKc83F^sH
%OQ5AjY0Q7+](J[hV4$VbYJB@(>A^2R1IlY@O/@-e)"*Ymr,fs`(6R!_[QhRaL&7/COLm!5SAED,aKZEP]a->N,rWWuTMAmMFL'*^
%A`=C\\ZmiL%2$`gJe]bsO>)>'k)D5jM6K#GN]nA0Tl,o9S.[kj=E2C*G]>5D2RA,U[<7D!(2@X8iuJODC;f\-9i&/M>W^t$=_q33
%oOqi6@`&90Ob(^.YY`[0R@gi*<mTWi@\0SeJsjrRY^?I=(o-n=@!?=i@3Or2nDHoR_t(?Y2r&I2)]!mXTlLVt@O[sNXH&^:JStNo
%e?*/cR>.\"/llMa/>q1fRaDIEeWc@2E=K0_Gr!8!d-Xp8WesfX*=L=mKgs\]=I?]#s6.0ho7^Fg(#DfoAVQonUFpWd%?jXrk5'GK
%0$KW,,STZpR4D<\BsZ#.N&&L+1ZVNL2!E+VJoe<B%/[[rb=ml>c'PtMU<V+AK<^\PQFR*0R0Boi$?$+J#g=nMZ22!?',]Q<g,7u5
%@h+Lb2;XZ;Z8f!mq_Ef=1dsj"H"-6N^<EhP_)na%dX34)bM;r.73E2]3j49X!.Mh]#f%+W:8`mHKcWR!VZhrX!bNac39j%B2^0e"
%";1lWF#,SXmT9NBTiA.Kpg%;S+)TCk5uM`uL!78N,Y85G7tZsOQ%?r@<Ske^P@MWlq#kmT!uimDmtu4(T$U"<NHV2O/6^D!!]ql.
%X9LPSc0qZ$a3dI%`b7$pb5jGJD@;@)?ZFWF,gdTu306+`,:lQn9p_!=Nne*e@@N#G+:)D-^5dOX0M(D!jPu'0#P2R)9jJ[kESS=.
%a(f?%O,'5\_'=c$:PZKR;P%B+aJR=]BB4t,Z56uG<CEKHFOS`/cPTn^"-4/9<00(q#DtpOGaeF(apj&/%g-0X9dMf&/[DiO.#L"F
%0SkgLOKg(dPBk(i/cRenI7.O3M&S3<hA^:(WB@!$2I=Q/2hAd$aDCL2(ePsD]<Sp.<K`k[rq.JP<XM)U8XVQ(9,k<R=CsHJq10o%
%TUK90i"^7Up$7A#"O$-3IO5.MD4p=<&E]`m;/kHq^fQUA(l"a,^SM(Va#XF%R+k7R*D:dD"b7sSZRluD/+'?M@/2l,2PUE;FPoFb
%aFRGq9#-u`Z^6IT#R:U_Sb46&aA'>;l6=b7\$e;YM/@:922,Ei8!lf,5X/!0[6)7p70G(?!_mo."gVAQ[j1,LR-!=Pligq2_"-R>
%I%=FtoYbsk#!uZ[ghID+<%>YW!>W=Y,-&P:OaE>&dF_n9#LB8CChXF#LEWm0do[H9P6@gh0#6n9)iO\%&HK<ZHuJ(YF8\)OU6*VD
%r\F(>ME)XX9\GO#":J``Fh-hY_0NK6)uVb3rX"o=;36DLfLJ^OA-Gpu<idak<"7$0U`Z?\3erZCN;iTd*(<(]LIWa.1*mD]AS.om
%GDiXKN.02!lU3ra[uaEuqCt/`#j*l<0e+AYJ^rdGi>Jn9^=9O91\DU@UT5^>#_!P#m-:hWWZE\Ae7/J)AlXmhDr#i\WlHq2XF.6u
%$n%^,Le#j@d6hsA2<lnc6+W/,<0%?1er,,R:-0^2W.M+<.`aGX39*CmB)ePO<C&pj"L>bE$??]EAPnQ:+]_E##qkF`c3hr6$B$`B
%Z2kHj1!c*&!6ZL$r8pTeGo-XD6+N0_^ktLkP6F31jE`6_BS=3$04cT)A!lmd(4#ob>RecN/-)=;(.g,iJQ4airDkh<>@q/I^6K.`
%6:&n&F"81rB[X:/)$i"^V(@UXk.+d?_G,p-0%YK%_?ODEeSA;qA9H@^*.*Ob]e$%,KQE<eQW6`JAHS@<EN@a[AH>agTNA:0M_:mN
%]kjA*SN;&m;.SogmU`YVUf$Bq/0M7()ARIS+uW4_;"V1,(<8H(mY-@8Hh_#hZ/%RJ31K[1^/uemO#IismHfmfJDk@+/?W`#T.D&R
%mTs&(gg5G4>]+c3/<no,2iEI#]6>%5mGX\V9=+-7ig&3M7uM(rG;$)+/-4M^=tN7[Y5VU0D!A4DkjCW=*;[CUf+s82m'jrrr<pq'
%NnIe7DCK7D.MlIgD_\iqi*pfm_ps(HZPOERd]S%(O2r'@o]H:emEl)ZgS]tW*PK%od))ueJNJ4%EKpH_^0M_N^\$sRWoj:dgoXjF
%]MN>R+"pr]V3`"FIJga&*I%2KicGS:?`t22frWWNMUr[,H69mT:.DMXr*jVhh_15KpAX&n$VULQK?a\5jo`WemTs:u5K44md2bBd
%3)kB/?SKbkYe)hr951W:58`Q$f\%Kc&TP2F(WOt4]4VsVp!19[G2:Y0bbD`ELS<KE*b(LmI=/u#;KhdIj0dXt:Q51]Z_uGcU'>6o
%A,LZiY;)9op)=+FO67@h^Urr:9/s5XpDBf%=o+3LIU%2\=]Bgj\;$gr)0]`P8(R7$bWX&V3+mdmhIICmokVOAbbFB$2Fi7s<uFX/
%AA>G#F=,cAAJX+@_i1pGm-\B'q)<Kj1?89[48YG>fKPm=]U<s;2++pF^!/5WHha)$4l4NFCmigbg[E@\]6Kp@8%\Yi0dZ5RIF\[<
%BE,<Ea8:.T4be$]pnDapQ/0.$:i6en1ebnQ*bf;*B:lQ;a*W*.U"He\)HXAJB,XS7m_3BthVGlo\@p_se'9$'j.UYiGg/a<kAPPt
%24id_rRBC.O;37&7Md+]S,m0ZZR0BPG4\s*Z$lQ$:i6fi[BmpNq6"_JV=tnTD>uJOWX#"^GO],%Jc8V%2P/3"r7K`7mHhsGLg]2b
%eoJDS]\*]S;pEoVg=?ONgTumU?%(Hen]K:lNU,<O^CA0UnSlCMp[E1_@S8A`Zc?j1D?aCJ_R?Wef=UZu@s$\uep>':`uE@SY!-c>
%KWsk@#&neT2_MN1Iq*S5&%Jsdqt\$u4l4?imd0J4+5GQ02,?2acBipt)ii=B59-F+O#ZD"Y!-i<O8&1%>:"r>n$o^Eqt\:+gccd"
%.(=tm*/a.O-!*b,lmI#NGV;iQ0"1D;j)-N`jVZh0?gd:N?640#O8&764+"W,f,W,TdVnR?nQqf.]Rmcmc>@2H>'SEa>jglEa"+X2
%(EH<5dZ:Q)4*o?FPjI[.pUDJ;9<UBagO=8L24eq+h8Qi5jnA5Iirh\1qq%Oo*ZfKllYR_*T\Edr#+_@s/"UpC/q*+(?$P+DcZf,m
%j,)L?isqo/oXW_NTQP6rc2/"755oaS[uUb8b3e/?LLN>liGk0_Sc/%;44DUkO"8u4(QW3QGAfSbmdC(!gtqH?H(:aIGFuO6?>JMb
%f-YHL^HA+Ih*(A\8:AHE&*UH_*meaW4ao&0B0SO3[d_d^D_LSGX+t`-HgB3[/,jj"f?@`c]=#8s*[aG3h.r&fAa-Z/F<Agl?Hesg
%pNX*4hKpdFZK.ZC3??l:I/Wu&Ms:#]]3fKZs6I[WK7aAu^N&l=?%Plhru\lSh3iol-Z\%o%0Ia3+.KH_qjV6S\MK^F^:F3Za7!lJ
%?G(7>`A>g]s"h1FF(\gZ4hU!5j8*co&+fP(LGNl,+!:NTA;9E,iEB,<mZ8cAo04PK>=;6Q;YT??`0Qqu8hutN?XP=m0jlc0Q=!.!
%"lDFW,).m,>eKt'bd1BR]mY:if(Jo!55a%2)tVJW3<+I@9'ZeTi&*<@5NX]I*s;EBn.n?%WKQYO:.[bf_b0.u<L0dS")"E1cnuBP
%FGX/Q6)laFo4Gjb>,q!j&^R4DouIN^G?^c^cquBP6QERI'l=JG,RAG;p1qR+9TQU)[:n[B'oD;7Ee:$qMASfPWRWJ[i:;R%DKJ.L
%Ci:J3F:6&9"ur05BiZ5:G+:Ee2[pCcC0,/(&L&'Fakl,/(U4NS`s'Y*SYugn\dCZP'(-5Y]4[qGI>g9e1]\14-1m`lSWV\EIH"s:
%]kBog/quf!;VMK!3@/c.%brf^\s#sHC5cu#YohuILCape%t#3r/Xh/[GEd.s_3Jfm#Xg-^]8CL97`qc=dDCNjmiaQY]MO>mV_s/n
%#L8IiCqdg1*HcF;>sr_Y[7Qe?Z=,L5c6u+?9]D.g[<lL5Zl.]V)b5tBXQA>XekWf=,]qmZE?pkl"%I<B*^N/9e4U(fpV^A?#/u.M
%kq(m[K6b<S-db@=^/q+L8YQ73.<uZabYW-L:2>_VVG""cj"9<N(1lE(OkridL"nE*6Qn%Hp,OD57elKBk1Zb:$kA.%nk("N3lpG%
%i5JB:L3I#uY[3I-+43j&-$75@$)oRtWX=c]<de1GX@D2t&7",S$*O=DRR-l`Y8e8&eM2]D=M!)^9U#a(U2]Q>9guK\lPT+]WEQ>?
%Ca2j+:]$pfU":B.jq;3!T(FqYZnWnV77`aHbu=IR>qcX4D,o!!pHR:JoOnYSa;IN4JK7GT^;CAY1Dpn#-JDrL7$,W2n\A1;RcPt1
%!%hukJsRs/$R?#!XpT<_;7?5Jalt_Iea6nOMkGg45_hj;s&QXTUC)1bs7Ah%a7%irHfMq*rqkp9mCVbh#QMC8nD<O#UE:R?\8h9(
%?iNkH>4gstT@P0KiJuaa^DFG0mTFfNf/39[\MGmDH2-=kh4&&K4b*HjPER*Wr:SpalhGY[Kgdn-Z8__-W=QkQL[3klY`!X6iuO&G
%>h21k_J/ggoP"p(!gkGg1s4bhbZ1'Lj`'p@#iOehT8s(u4jYcpb00tBQCNSJ3!<>r@<3[u9RAHi=94sPQ%s>u30o;BJdA9Vau;I$
%86\4IB2t0E`+9-j=2,V^(Pr.'OX,URnJ"7LQq`[,'Z>(?'/$:5ED&Q=K5a'\Jj@g/Jd0[TrT=9G(jW&`[P9RsJa=;nP_;]qaFL]g
%!dbM^#WJ^B`)(1>%OF"L>9TXF;p?:+pLf1`=Yaq.g6Mg18Q4\&[i'/_RMJ15,(s4rbqPS9/rO@G7QRB#G-2%^E0@cue4BgfbO?TO
%mZ$]!Z:'a:5[:U8Fub^PNg6IL'pYKOSXN-qpqT_p)f-8;.VrR*A1]#a5nE18$XY)^HlDRo8j*c6Rt6..&\;XOPNURMMY7CBm.6f8
%PJRaML9XAQL+_JY'\]K5HA*7Xa#G:Y-D2&aP$qE/l)]kITg7'@Mcjp@W>%iK.<9[3cm2oj*8OJ'l+p3j(:mYC1'`Cj+aFI[<jQJr
%rc#J-SH;6.gWb-`GhPbJ)UC\>B&`].U`aGW(N1S(,R*G:E"t\$XMKA;pje(P1.hXc]uf8ORuLsJdI%#Y9Bi1kON0i:BNn\cPPFhp
%:D9<oafW!bMD!8qOdc[hKs0DISN@Kf`%pL@oZC:Fd1)]n<NJiZR,On+80SOBX)RC73EeS!*d917":5P8JZ`0UT#@n""1o,lrbYo8
%c6cl:X8@?DLu'="#15A(*nY!udQO3ij@;Q_j(14ag]`YFNfn+P0J6g7]X8@Thn\58\!c/#RhBeQ4td4<Dc$V>\!bo`N#3g=34u>M
%d0Z`s]RX9tX[F*WZ*flWE%BT,)To-Y7GFaTb1^9XqIZ=mb75'"$tiE.-aTK8ZTbUN"@:bGL88$/_9PX'UjDt1-6e3rQPPZY`:jMe
%D1L'Z5G:K>WP(K2Rgj2D<JZN1bR9&?XFVC>k7Cot*O$unm@Y0gC5Gclec\+gkD>hQH3AI4%P2&pnO.[XaQbmd&KIEr:gBMebAc)b
%6R/1''\D&,_lg%HW/k7m-CSN6(%E7dSN()`$YeOS8Q8bTiZ<FgR]tC>K?@fk1$A>m/8\/:"GY9jN@nC2;[(N[%h3)A[pa%-;_!TU
%c9P!<-*O6QB]O]17`2/)PoQ`=:_oI&F>]b/^n$)BW>bu7abs$jfc8^"'NfC58NL[]hN(-cdE^njg1k_dfP&LPY%6qf8:hjWqL7@i
%#q.i[D;GH-2P7Y1[Xh2Z,&M1+d;:C\["$X#Yr::gfW9"9m)t@m[8</pS,)kCKj*0L/u)iGdjTuQj);eHA(IKr,DrRG`+B8U_iO<U
%,g,)jKD4SSo)pqVY+Q_'.6ro,[`PW<,,mn#,hpBN4HZmNV<:DK7;>*m6LXRYe8&8.AuE!i7VFYR^M<stB,-,H>BQET+INQ;!3i?:
%ABs>;cif4SWfChL(`bH!_Y11<&ahK]7oqX4KaCh1NXo"G8Q2K+$5F5BE.T$QBJr"[2?_"iFTFo[[Ip(7_GgT3SL))Tmq<rUgmUZJ
%TKQF,?Cu(MC2jUp6n;a2cH?d9+gY]<BMn=M+bd9ZUht4kBPV3nqQY`H@h07`9etI2aF8keqO=0_29K>g_9(E/`Bi"oda'rpYT/I`
%fV"TVZH\;;;0GL9*fd"(c'aJ<i\<"1ghh/NW+54k2a">5QT7ei4$`H#i1p^h:_H;h0e2qX'V83oNlaQj;Mr4fo)]5oP[&c8;kDAk
%Y_s&)%$-af&#XT>%RrEaTGpAdfOfmi>l":kGa,FZg)DMYO)d>B)iKEj*FIcMZ(-n3@;JH:SX7F_ODIlPpVM[/;MI:Yqus["D21rP
%pmHfrqSRbmN!r<Jp!dm?iPfs^`QSDP1VW@:7WCb($.c>TR#dKc@Vk+'Gt$>Kjab?>)rI8V6`18_8O^3E4%%3BGAUPEA>Er&PO3:X
%jd9ULCY>f$6Uk'V2HDB?5a3IITI;U_=WJ4?KZd97W;Wr=H`aG,#MX'-,5p/cK%rh!W49f,N^P.Q:X;5/c>EIK%$+FLfp+`/-OVV@
%0apnG6I9_%,Is+79OP!7p8D^bKQ&g/H\OH=/'$<lO3M%cmdD-"orgKjET>?Z2uB4(X+/$9OZNRC?[N)DBfH`9%XSE\(JCWLCVs6'
%gAA:4FnA8\!^*s<2#t<#mX70CLiZD@F$/WfOr8tIYUrmN0a"uA0@pUn1kRObM>RpRF?hE#*%H8D'8,$9.:CK@B[D`-q^()#A_o]B
%Ig?$7?p>'A0t'aW$DEBC^!Q)2p;8pYE1A\k.5H%SV<G"9!<J>#\3r]r*3p]4gl5NOj@B\86_=4+XjC[Rh#/9Fg*CN>h'CNb]9>uL
%,k`(g5rUT!>RBP+%!(ZLWjQ5Q^4E/BU/>-NO4a81jP7#*[?WI`p/=7)]4%2^@]b5kLg?[Z!1c_[Op1(1e0-"`Tf_jS-Y0>S+dHpR
%C:[N4=7Oa:0LnmCT_!]0BRK+Xfa)DUTFqQ-oh+6CjjGb^HkBnI$h0"pO*bEpCn%`Zmo[pq\J*AEc#DU1[V@_3<s9?YAfBH8d*3!,
%e7_s<7=.t(`3kfr!arXpI/As2DDnI`TQb"M)cAR7*OVYS:_rH+=u=.P9ElV*&a8CEDR0)Re#uSP\J*8:hb`i/1=aM'g)A14:VcbK
%M`X-lZmdQ&SA5$l6q*RD(H`_0YiHFGKp'VT&6^j]=qH:N=cfD?/R2?9:t/)b]n08R8OtBo9.LL<Z,!fT[O!WKJ5B5=jD:c)hk>lM
%ic03;]cAE8FZUQaa3LJ/HW>7REHYC'SaZ\CH<ni;g@_&PFL</^cpLWA-ud<9L$DEV&Q(hHg(15Bj@X5i6"n.[6U+lc._Z<p>F_/X
%9:P;[as&-)(Mie5196OBg8e/n[VJ^jZLPLcAU1!k[jeH7.MBi_ebASDGSo)P20OaIk;$]A>bJS,AA9qoBQ1?mPRWiC/_n5E(LD2f
%/l:pYjDIb7.Nl+[7+\kafaL]g`2$dSpLm`on6+575aW3%M@*RLj[2N=%]2!M9Udi"a(,c'[fJm0[8U5>h%.t0d2[7[oM#ep)FrM0
%BEetuilJ9EB)NU(^.ZBK*/,`^@7Xml?tf4Uk;B'_p#Lq_jYP[j'K3p$>m<'$.N4boJ_ETVdqftAmJ$XF#N&<;g;ZW5jaXsls8MaO
%q!S`3SD:]&n,%GjTC>,_It\-`:K>dQd`B/0F"b5<j'5`5kr$g/CVBKmpf*c+^1ANeIiE^&p95T+c'Cn:"6"U0B`Ym(aH;lmdaYZ)
%E,9Ub+g'`@RY&ik!h"e_LZNJC.KhDK-)>!H9!kCL_?&)U9r3+ObB:c);KKfn03Jc5[iesq\fsu$VikgS44<6l]Wh=`m_VC[!uejX
%F`;?U/:"d\Vi+(:Om*;"rFYm:mCPD6JXlUmFrUUQ,2Z'R/IJ>@4XZ[KdfGJVp@'!qLAN*HIX<gA_s)\fm,W+@1n44?ClnhoUKoi!
%<,%uA/?'kB#.@CQ5U\2q@VA\9fuD+=.MIL_-u8SD3XU:L`aNj55c;e-R[Jnc!LKfC.70fVdE6*^'AX8;N_X_[@[n>^[g33]LI1Fn
%h@'I-800M"?.U(3"k482`G#\mT)nT'TVE&pk%qOqr&i)ck>Q8XjVU.r&^)tlRYWaB/Im-k2oddTauAHskS/QJ^W>8:c-b#!8t/@U
%gtUUP)<SNV)N#\<2n?d`C^h4E0q\`@d,t&<.HF^GYe&(&N\Jgt9AL%s`[BEuju=S,+gE0u?Lj^DM#W]LZoPg,\UAm#6[Ur=hs%oN
%Ct0q%3<*g62KmHe2F[e;.)o9:<q%1m??,*qjKgk&&peVS"7bSMZ\&tIddh#j^elj+F@*!n"7gj&OL)_/E%<b90T5*a!Y4.4fq[*5
%'BtqsBFDt&S63-bNPB0D4*8CQO-GK#dENZ=d>Wr@V^DqG,F<B7,Eb/caAI^f&0rP6;&tA,S8offFV`EX8rJ]VHn;XGGE08s/)&C,
%89;AX_t:>"`=@lRbZ^5OJPBukOP5#e!auurdJt*H*Gq?ULX[^nRN(!TPfQK_@DM+HSV6)J)]Jp2kZ*[5L$WC_]p#-4MB!+<d<c=_
%j">Lg2N&U3bY`KtZY4'HDmFghHuO2$4*8>:LJ/<B6_PHubp)G]Al7rhfig2]25cIpl5%7$[4TlO2t^=\kh(L/H>PfcDL4l<`M_M<
%m%Bsl+'np*el*79Q2ccg2%@F.k?<r+ZH&-JHPt05ENPs2i`t4g[&\QR^o=&6E.C5P2Tu9sEKX]0$#0ab$n5h<&o%=se76)S6F@`i
%eRBiad%`n947K`taZmVB^Gk/,5+p=Z#^&t]?n;qK'NE\&Ucf`,/KKEQ,X\i4l;DijmF)^p879>63KSG05.+^0HuBgVIY6.F4OCeH
%bt*dan!.UcGC;4,s-2JXhpBn>mWlPHrne+Lr9MU_[r+=<n`-/fbMpZo0oJs@'?fCb8&_b^j3M12j.io;4tTG<WROl9,SE'W.I?@&
%`DHt7/dZ%"+MrkE*SFB"Zc$kgC"pIF[R?9S]#t>!6;SLh1arrcqT*sa>@Z$NOYU!+nJkj!i@3k#,[ugE,&rM]*U2])q79_-/'W>C
%M1n9)JSl,#K8=ns`5ol;TV0Ee!f$t=dFfo(eaRr'7M7"QOUAo,GtP\%iHG5B7jL<5^k(B"3$:.HnP6+_%`:^4gZb/K']+Oa=(9QC
%]g+.$>_"jl:<PX"e=@E6.-c1YqgtLq8rIpZ_6VKKY(5_f0Z]GOS(0ef&j=e+V5]/l^oLcu>bmu%87?d/DP$4)iAlPV6$H!k-M%dY
%@7^?h'\*Im7EH9CVKh)?i<2'B05P:4\!2DOV!-qP,b1:9RI-$,Ft-lA,jQo5l,IhO4E7fCNJ.dN(OiTVF!+,r%#$!QUi3U+Q0pZ`
%%(.UFT9^#ON'#;,A5M0[/mV]C"e>]U_rqadqj(9VYDk&9?!ft\"F[,3?YoE(Zm2G-?P\AW)\?g6dd4ntDCa4S5`o3AY:r"*5$PN&
%+QfjLf$0_QLjO7bP#e(LTV+U(A#iA-U.r8^b1^sAJ(OuQPq>LP9">Jh8sN]0$qs:i)%$.b\<Hd*AU_I[8@LTtL)*b;=Y5#_.(Ca#
%l@4SFa<A$,/j_)Xr/PW81en]EAMD@aS\!S34#O#0)QdD?/\AFt:&cL,a,Ip3_<E34K#*0^BA:Xd!D',l9,Te87KciXi@4TW0.kri
%;g76tiR[Z,2h$!dlke]3Z#JTKZ)hcF^0F\o2h#*<<G/Hln>S+b]1?iL6+Y40dlYM@P)'Lr]6QNtNMU&=G'1<G"[&&;:j8VLm:X@S
%C+,W13F%dq2DC'H%__BX[dEL2in6.f]WaH,=ujo@E@60S\4rJ1U>%hg`QBEleB>d8[>'p*=aOX@d,q"2DGd]pm[$s6+o=Pa+ZRV^
%9$8k>Tc&kQVt;U$M)e\F!mcmO!T6O2a1Z:U*ZU4(&NqVu4h>U:-b_C(]$*5Z30fsfTKb!\>7g?MSs^h@4cRc1Ra]0)6(GDf9k/5_
%f*4_SUiht":+S=3]%I\G.GP`9B_O86dCMfR`^$o80MqrqHN@1?@j#5!p$UVo%4G!b\o1nT*`!Y^Ei+#c?qX>9=Yd8(h2n[8l7eAj
%2\^D?$^l(5P>G,F2cl#e!d2gXH5`V#OF?51V&uVSI>FXgr'U`cRRNN`U=lNV1d\T&/oeYZb7.7uQ-;en:2tuOp8dT`a$<6H9i,o!
%6c:=Rs.oY]DEnORlCh8mS&:d$Kgc&[?A.h3-i9EP=q8\U3d5tWbME-Tq`TWm`shA&!J4u)a9"=uBLtSLdmc?r-rm&<N;X#6;L)SJ
%KUOIaCb]AXDi-eecOtMqG6GJ9fa56CBgYECVe$PQ6'Rme%-BaO[D<nJZ/mtI16Kn]\>Hlh'7DBO_Be&bg>k'B1@rj8DUT'mr"jLN
%1H`>$8sG8`(Z#NdMPRq4B=;Eho.o]^W@oLe'0<iMOtD<NM<*P.NT]B\q%?:ep4:3pk5B0MQ<b4l?XethJPMTgd?Etk6Y$E4Bf9MT
%"OUb<!B2Zr*AL0^e7OOqhb8^(o/&;f)S7c2*<DU-5HT;l?aZ^<?>^qq_M=a`\\N0)aj!GqmF&=^Cu1!MH$V!46uX<kmWTWU2-m_J
%`D)B%@.W**QWS.6PihMH4N!fRHar3TEoH`:gL'pFiJja)P+DT1-/%^#3PUAcNgfQt3-"1>TK6hjJPV2X)ZG_\-(ZZ)P$nqtCN5lu
%.4LFNU>8;GYr-Wu"AiX<#])>eN/&[a<"T3Q1mJiH'RZ>%Sn@2f&%r0>@)9KG)s`6oc0EYNH,Bl:6$f;m`'c=Y*/sN)C\&#"6\X?I
%-*,H(RfiTCZ`B$ORF<JTZK.?SFaar>H98X!X!\MjEpVsg6'd'iP&N>N.;jd&L/1mhEI)F,d]Uo/j<n)C2&tOVTIdUMXd.;+dNX3L
%@+25T[i*b7b2g`,HL8MtEcOKK<Jh([YW.K;WDcu<.4qWt>1%3pD=qL:Efs@"0"ShY-G("4:=nl*L5@[1&g=@WM?cKs@\I"083142
%BeY*#%&'<lR^[#t-1X%'mt^R<pBq50Q0I%::uoGX&,_MVguNbu+YK%7^uo4k]cH=aG60cP"HkeBB&Mf.$&Y\M8dDVHHi?2:;K<,D
%*`bA2Ce6:u"FW,mD]D_`4+MZU+PEJNoK%<:goEPV!2$9J/baQ)U)V=FZ..C6UUiGdn`DZDmCM5P1N#DcoM5#eMO\1u)V)'G=rPmV
%e%"_`l9.@No]B$j?Lp-OLRqD'72$^Og)ZWO5Vs-T`F6nJ!L0.liA0kI"bJR?U$d]k;:1I`F"iLgZa9`]9,lZS/pU<JdW%lAd^pnP
%UsqG1]JGpHr6bCpFi!I$QCpr)r#,@*R]XBrjoIAM],^,B]age@RGB4`N^k=bfoW-N'Kj1+@Up)$mVVErT-:M*%WPSOHmuC]$V(Uq
%]V6fEb+r0Da$Gm.=WO6,.p^%VN/;p@V]`6q<R9crZ630lK8>aD(mn?jp,aTF]@>\5G3M@61ffPVI$g?pcs9]`"(uWTaKBrH/rb/=
%b(pmiBq/rKH;6qdn(u9s]J5,0/MF'UnkHGK42)m0%BlDGITJqG]=F75op2oI?.C<XaCiIO6g61.*AO3J`HGDbQ"25&,"I_#\4KY'
%h8HKBW_<VQT/H]1,b@DsXLk1$TRjhfAn^M'1a8YrmgE]4&q31#U'MctSsXaM,u8T^`UV1OWg:GIJ.#,iIQI5u'74L(e@?D)O5+[b
%l;sBJ(WpkH0I-Ehf9R[]R%X3<>VgeM3sUp(Q6nH\HeC]lr1W"cDXHLlgHCF,`U_i3GOBnX']o'2reknpNC32E>-lTchUpR>jM??n
%NaW[1(&V]ODQ;Kt_"d'2i/_kEUr+-]#FmEbS`)tf&CL"\o_dO(Nh!>/H)C>,3i]Ba87`C-"Pnt/7cDEPMG?XeFL)X.HdDHe%t$>9
%H%huI+W*%m[sZZf.[7E2236CWmYr-fcj%l"0D]&[+eSNn.JfU\S-3Mm.Fr)Co>o;\dQJiuU%#*H"G>o7%G5$08V^<i$teL"QM$Kn
%24]9FGKi44J;R:$UR9>X&r1i(HpY=O>G(F8FFRV0S1%NFa7OX-0C!DM8#FIC+BgKFl%Kc7<EqrlWltM.C=(0*LiAkH"9n\%>i]\&
%%3=rrVP6WMaB=1B-gB"u]RrBe$`3]Y-($u>ZH^ddWS*l[;gN;J*N1E29Z)INmc?ohoGl3pBqMCcS5P$$aW&_<36Ora3`B0m61%@q
%1E$YBGm!SNRt%cE%5^^220SOE9c2TIE>T&LUYVB(?^Xj"bB$2:ob2iC,5hm[`,Yer&,OrM^'Ao8j'"f9$u"W^<m`:7hX;'IOUe9S
%kET`<G8TGsan4LNVqK!OgZTJhBgF7Nod%,-H=*UH<cf%n`];W\>*IYWYIII!),<;,:jQN@d%37A)CEcX+fBD#'A.PAS=okI&8pc\
%j'`Qn!D.fnjM3!Dp07Ku8:A%^7b9XlX,sXp!7`-&,Re>pV*0N`P\ai^>4,dDUnW?-2<&ntd(!^IcJa1T)GIO.,*E$F-p8h=qlW^h
%P8YWI-U4.sXokK.!Gt9AKV9E38d1!j[IJk>6o-(7&\i,q*!n0JU,0m;8GW1kGfJM%n9P2dP*QoshO_60qY8?$elZ7ZSq\0OCc%!f
%4KHr[m/uaDn**pe"]VhgK:$36iNO56G[iMZq<#!j[$B2QHZFM[cNOt-#6`m+n<An6BId<584l&(a.@lhEp`V)W&GhL55sqr%J"[q
%T@?E/mmm-gojki':N&duIm7X0YY5Kh\)%I4;L]hV4UF^0hk;8ir6'@43k@&f]sT[J$Zn(Xri/oCo'7ZGQQhK+H8`g)C.9LbG*k`g
%)^D>f/W7O+]!B2+T&PZ82uSuiGB<Z?NT6401-M3*hoMm7%qCSeZA5E9>-^=G)MthY4tZ'/LL3Gg9fH#nI91\?NO5WY;*ti)@,'&.
%r3`;UF._UWB*O$mHIsmj6Bi,dYKkHj</@G@V\j8j=R&ABc+.M];:D$R<8qDp]&KNshJU_rnW:&al;YTm)]MZ%Q)9P#W:8g3$&IGU
%no?aG(^k@<l,_7g_TaAJSS1`3mA6l_Om2?U-*N2W#*ULGUP6)n;k#>qauZ0GJN['m)KT"W%c3^*AO/:HEoY'E+<:1E3$BXZ6'7fd
%?24b'/;48d^dHMq:g0+;bTK4a(Cr4tcKI_06T,8YeS&6ZC:$i22%^%(()RJ1Us^;\RScdJM\&8aUDQG.kj+h[p*S(DCim*;fg'`)
%hP):XdJK5%2?kpIUSs96f%.rTH]_)s2K/u"kDK-\&_W+;P*dh7K&><>UPBm*Uap1&Z_Rej2:_!gRVKHX9a`^gVT"^AE)_lY"3P/l
%/_cWFP2Q;P)!iHAK2jfM(JA+UHQLO5Vi[?o%%?j_+"S"2W9W0rD7r'lYU^*#g*MHVTdtE)#qD.@4P"PC`nWR_VpZE":WC3`U*>n2
%%4\]Z[IlQ0B'o<>0&#]FFD@&$</UudcK/^Y0p(XZU=*hZXUf8qB)Y`'k.Xn]M'^==s7u0K\bGnWVFKE&HH&RK)CK%V7MA^1:^rXl
%".ooVON+]D.,MjSH?S5,WWTLB`t:_EE-`$Zl2F.;8/ta3;DSm21*jp:1M6rY^_*Nkc,3\XfR;fi."/piR?V"cgp\TW/X;Ulc&E&&
%kWpp_?+Q)A&'4goc52<2-]:A2>OP%lSSJMBdaL/Lc[&[r6M+G`KL2+HbFi;c;9s+*O3SKpW^%pi&BB1NVc1f*#.!V71s/q$B(&8a
%8s1hF$'k\8X\#&oeAL,ZFTmI\r@h&djG(deSeSMU8TS-NUL-']H[ePlp"9jURGl&(/!pE!q3r=QLXN!Y1MHOWLIVe,\p2Z=Pq.t2
%0$jn09N3cdZO_&n6/lMiU,7sG=4,m@+[Q"L4H(%XdD@.)E%.qV5ae#LLS%8.X?<>m57'ip@;KTH0Lp53-oO)BamaQ7N,2$J^n^0@
%M<J0:'4/f?kfE06p8A-ZE>(n9lppas)9aFogua&@>S&>>=QPp57#]Z^.Jos.J0'@8-XA;`.Dq"&6HFnQ5.q3[%43edAZbX#r=Eme
%:hIphWNqUDCVV".2`C\U_tpfdjF?G1l)0=DffYU?p[4$)Vat"dT?&ZK^GHR4RU$h'fRa,](h!l$>&7/WHAekXApk+fIDMWEF>$Yl
%3Ei&:k3+\.!P_d&JV90RW1-Ec]MU[b(Qb6L(eM1"C"SFIij[TR:b4+ckMSi.!DUsf5gmiiVJi^8PDMNiUJ;&=-Tf8Dpi[J(!N[QQ
%/k;JLbr,b"M,?]))?i.,:@&%"-m*VH&rr3Y6c^F0VZ)D@A"!#P+0+S5B=$INeUd:MXWYl,*f+gV*SXRp?QJ[U"VR<fD&G<"Y@As@
%5TU/*Uhr>u7idLu1@Z8f,&Nh]<=Wi<.8A7n20*U!DFT.,3Z1N5lL`.+bZ"973:s1%KjI-KK$`X-?<cH/WG<2b!)5U4o%(;)>NCq1
%C!Mh.C(.^Acd`-&SKsY5+slKb1pRtMEj-)A-DiVTcUpl2Kbbn;G<`8m,*o3r?[)TQTfOdI[X(=elj>6OfslOkV=@5!0t3Q5^h_.]
%C_d`Ts,SBfr@;1tZfhDjeW&3(c"2!'DuoNm(:s&$7H%?P>d-ADY7c+OpE@biJ$CWu<R?c5)^Y<^`m&`7N<^ij].t$N^C>'%$&Y4R
%WNj5g43lPK*nMAJCY@11lb]bi&iD@I9B7m(.2l[ME3a[_mI'A2#eF*]o6Z_WI9:m.9u=Y#Dd:o,EBh&6O.VT_j?JcMh#20P*M:i:
%V>K2>S+_k&")@(Ce:@SH(H:UOLPQV1[!=W=ggN-C5/B<!Ofp$]mke%Z"**[&L)n/^RoHEbbIZ,^0m\Eq+Sr`<nENBT!:!&$j%dF(
%Jk.pN4eX6i85JWd>oD4M7a'c<%haDm8Cij2)*#GD6>p;[3seZHmd:eDOV;oCbl`3bq(BoA8u=1`ap#E.]X;^$b[acTg8\g>CUe39
%7+k!AOB?JcSZFf2gd2sn\7Rc6#g@s4I>)nL"dMhW#jbrP@g@9aoJV#5qVE%Z[B25N@W(;`ib]'s#m.S/m8u*)XQp2U@i$sm>4Z'+
%R+-DJRgkh.b]GL_kqR(3-R.2OM^ARq:P#/XG&Cme>)V]/9-\%79Q..S@IeM0BCURRW:8*:AMmlucnOH'#I]4b[YiOU]G[Y?c6U9N
%as&nS4i)a,nBMm95u3dl-]aVHnV/nf&9Pg-f9C0LKBgDCjB8ZG<>j0Din\b^?LdrB33p[`:YWH+j=j4U)463oZBW_`e5Ofil;D@"
%W9pHZ.8W*n>I:)a,&_N-JJO`k)bT<mW5\X%;_Bt3c+YC!1K[@Hc&D%o>]qh')WF<8X9`ik&cj@S#DpKD]JCB12%P7%'5fUYA5Y#5
%?WrQ6S.&*GF?2(Gk6\Y,O;1/8%0;VIicOB&J%.aJn`$FONK+]&4KF_.CBN*C`V\4Zh)S^'L/H!%e%chfo6"p?RGn*!Dh#5]!<k4k
%00`^7o[4G-LNTV7+"kpb.SA#,qCsZlX4iFad*4$IL]]D<C1hT<^-FWXkStf3fd\%RH52<L3Ypp[4&I=rTk#KaJSl4KB'fO-/ZSt*
%gB/Ht#<H`5FBTPqQn@L96g`UPAWoW8:\230K4@(*mH\t6*1o@'nb):):JY"\pM5.W@].i[UTsG>!iq%]Ap"b=]oG8WNFflWK">_q
%ZD[=87MGU4G80K;foJi?@!Cdc*9am=Ec@lhch(,(L"UU(F+h[r#1tB<`0P/\7842kO$5OCYh(fT_"cRn]YC>j\JKPX,H?dEd4S`S
%]g<,QC.S7&no%>K6:Z4Oemeh-;.g#:7m_7L5]H+nX-d%BkhdO6hUMDLTok&US5ceGX#?Lt3Ju/VfF0F#F<:GTlC?997\_/4er7HC
%&d\07ac4AKj!e(@SJK5)[EUni*pQ@pOnlFk1VM\D`1,h"eX8<AVBh@R5O\)<8a,G6T4W21N74?*C]$Pdh#O]_h^*]iaL%F2Hj7Vs
%5W_^RTYXJFJ3%+tWP.cMeS%44Kj]Z)UJr6piH]=q76`>Zqep>YfT%F)P#n&-ffXhk`uTP-GYXA&JC4^2'WoP_.sY=P5U=Z@23oSf
%[&7%$jp&LjZ>`#'am?*E2C(^_\d+imXmNqP*23KX^/G8gIOJJXerGMjTj]&JMJs5hAP#E[dNI47+X;-.CM4*%WA6j[\[Fs\<I/(8
%7l#'J)9.lmG'+a.Q(9[+K(K2f=35C-;9Z65\\M6QJ?<MJ?Ua[;M.3P$#fK$F:uhI@SU1Zf6+r;J9f)Lc6!@$hgB)D%X?pc>D(XkK
%M$&dl,AEh(&4\%[8GQjigK[:q94$-+p5O=_M*r-di9Ok7!Jb*C7h-%POj\k1s$m^T&e/lu:\8V9X8/p)s#<S\(Pm$Fk>3OlWoe?1
%:FP1]*G!Pa]T\r:V>%p6^!d_"BQ0d=\OhM[DF)g`c<]_76jfC7fOr)s-)ZTf'mXkl*hCAW<ZeXMRcq24gjs#)o.+l!7AH0Nof;\B
%d2AE)gDpq1kN'$NKCj.+Ds7rEYA[iqr2-YjB'T0n!`5B_\e,$O/I)q==!`W(h!@CRP0$Z^+XKl?8d$_kV,<i!kX@<V/L%a[UF8>?
%"^;)o9+K]^UdcWW-j$(d`MP`BL0?"HEc<9VGnZo2q3E`NBPSF10#1>=]P+f\aa?N@H?'/4;!)ITUl4)-?Q;4+UV'@.k*usHk+ub&
%J1di)8SA=m2:Eb+OU;XipVXM>F&5AufcoNh**ic,WU$?l<r8JS5drB/dH`C.S!-"3Wt:SEYl%kSe^Qr`OdqdY"]ACT0LR1EM6mMU
%D%/Y2G%b$24*8>T`9FJLLNWI5R1Tm))94'Hp$<Da:<YV>Oc_'*(u%#Z,<u>7]ep$Un\Hjo9R:c6fn%e4[hePar80BPqgLo[KEKgX
%Na4heWTIYS;rJ?&PMo7''PqCS)!.QQE%iFb#^WF-q(2fIWs!ck8j"nWjItk_#DsMBQ,#B!#>ee!#ldZ6CD!O/,1^.NHpm`L0F=^I
%hUEr,7&+&%NX*L<Nj,34"p8;HBPi]Wp>JR2J[ctpSAKoT<UDMc&$ZR8Iu;n/_BMC,.[;Sdkd5-^@sImB^;G#!=90*3e(A(oXp]o^
%ndWo%fOVSXO?I+M%>7aXoJ%Pbj@,u87W'Pl02dg.OJ_/jm,K"ZoI:>FcF.0"W&PW*Th\i8MlCMP<I&+cW%:j1,0"2jd%Lm8r88*4
%`%pc3Gena*1O0k]B^u']4b:t`)Na-Jh_,#Zbl[Dc-[e0_g#R4];i3q$P2mVDPhBBbe'^^gI:hS*39:CO=XXo5SlpmWY1l#%on%?'
%,uR)r4rcVs6P+]C>-:9;_MX$jFK)U9,5QkD2[X$"2aSlCY`>g*pCBas*2YWt9t$ue=s!TNM7YGkS^DX?Fl?;UPu/MUYA7Y>?!XQ@
%,`qQ3GEo(`<(qaIK8f;o-0ImBOsaOBl\#\p.')c)Em8TQe>^;>7"KkoW^1d\:!O"a.r4r2$b5_X%A+I*4hUdd(e4Na*htRC;2sj!
%k"Q#],ui'kUJHe<#<?V+=<ZGk%S,LK'4B+uJrNmr._U)um/iOQ6Na_@e3[*#)%7uBQ\??i683[r)bgJLmZ&t^\J37+PZJL@VisAR
%VIX6lSdbJTV3BPA`+9IASJE.,eE>7bel0Q39o8gh8=i$2?Z,XMYtQgH\D0h9KYEE;oSGI7MbnA<dDHC'@%%NN8$V4K!@,o`@W+Fd
%1Dg,XfhmKub8cu`^ok=Q&VJ6S)+YNfRqdu5@0WotAeO:f1B.i>7S\&1#md>MhD$k.!]DH?KSr8h/^(PU;2Ru@6)?qsl*I-(7a!bn
%'EQrs/B'MU+O_,qH`+9_4u@+8C8f;K]^Y=oSP4[;QVFs)[RC3U()217%ZX0*0sSEsd3CCYPaF%E@T+&0&*oW%S@@#d84>=eMV>D)
%UIk/eDaZE*di3jujqA>LGc?M3f8J[N0;<[2"Vf2U%%8It*"%",`[1&G[VNN\9HT7\M]#2AY!W\*`b-HcD+3:3gk9*ODSiV92hGp,
%6p>1KD"6j\;A'l&6=t*LQ/$V]3[)'Li]MP0Dj-ZpFSYVprqZ0l9>AKerH=#k2I_i(+C!6kK2s,[`E0mRj:[lNf4&V]CVl_:SNL_I
%*^L_7bQcaT/\56*j2U^)hAiff9WNRs*q.g/)S<qn;T#L2"P78:1juj3P;\hsSL'6uJ_e5a`p.^?[V@d=T4"-@Y$%U>HPb9TET6jb
%DcWiXDbh^I4S73+C,g@.WWYo>@.`3:48^d<i7iFYY,)D;p1)6<[-Gl'7)>Oj`(I_@m:i,RdC\Q)WO(2h`+qaHk*4>4i,J!Fh6,_d
%<$ma5h%Fjc"6)?"<-R;=Pb4+W#J3me<Xkto;ig2JNJOtJ@G&K%78Nl%[i+RMfC1St?))"O2kErsYYRX['ohM3]i)bo5l(>8k_s:W
%)B\/P_&:ik85SI%ds\]'_p>f8;$0D7.bT*q'f@eQ;T!5GA7e4_WpJB_fqS'P;A[5PC,g@.WkoZVkAk2%j?5qI.DS&+FrrWSI\hct
%p'IT4n)@fFn2to&IDJSjmZ>RJ5Cp;eT:2-^jhWU1A^cU3n(o47-uYG:2&gK?M/=k.IG(9dZ<9>kmUk*_[ZAFEeSse;FcddWh<<@\
%EpQXJF#h&ro<)'^1[MVpcB^TIE?XK,UE])mdl424PIfhILR9PMR>PcpRlE&&*V/PTPiesY><*KhEW7pLL!f:&:X.Iac2-Q@Q&V/m
%MR`606_t(l`]JIBL/UlST+H(l7&9]kLQ&3ZQCA1P)A6d4cUNsJX$&$B$f_+/Ys)P4<EGo*[!(9&g2^>2(>Hf(c+sr`4*i-SUI.$.
%8s@F[pWO<hch7J&?sD_g4%&S+G5#g_A&iF%d`de*NgWNBDUj$tBp/rhh7&4Y5N`:?f2I\!o?5D7>dRY9i3`*AOf"eA;4$6'p=(N\
%S\PV>hDZP&^+H^a=jcV?:H`c)<\X'/7]ru>6R<#U-<=k@rR<^I(.YFY*frq;3OrdfgUG@uZ9uBOL;/jfA03p]e3acH#ohUu`3[=e
%BT/7KB,6KS0P`E/Kic*gjfT1uBLE[D>ou5jGC+>6EmcZ&^2`P;MKl!B,4JFG/-10/l[1M9]M")k+R;[YO7hW]9DG9fYI%BC5#S>T
%69Xl;-+h<07e4(`;:<T9Ub3&[%H]Oqb4D)qh@+Pdj<s-lC_MN_DB$3lO?Ts\d3a+llEXBemFq=3[#ZP&L8*h$"bS.c\ju(WTtLP[
%RVq7R\uCeR9=(S@\Q1'thR&d&WQ=]dgK/kd>)%Jg=]FNgQb1>/.pWkL?7Sh&G*'4_5;*sHae[Rfdq2Yn8_-sY6[\/5>=^@[2]c:m
%XE_%Y:!D.f^.D#HF]23iSSRBFSlDY@'-3;(;MlgA+M+rpN"V+"%rXd6V?JhO7ePUsh2A9NX`XE%kVm\)9faHh[E\TCW-LAYoZa&f
%d"`BXXWXcr]shA.V;BQ==(qXA9\i^KA%A_9nt$n2Zo*`=r7]B&CU<X4H?_e!NHj0?aS9-&o8^HDO+E5.0L_Hp7\Ga_*b/)&BptDH
%ckQIThP!C!ga(],W-JP\2r[pJ)!M3DHG?l@=+Q;4*-d']`rHP?N_o69i`\Nf,NfAN#pc/QEdf\7=[;Bc%[n*'K>\>fPUL_V#&tu(
%8-^F[`C*K@459Sm(f*p(Org@/TNhWmblTk&'Sm#&$%DNBW/6gs1_bE"QRF\Mb`I.:obKcQ4L#R]3mEh*-R31XV:Y#37-;%sVYh[^
%LsM<TCQMA?af=Cg",-?/V5$^&e>t&iZUtYu\<#*H9'"$[.'/$fNIaX8\&lXE?uhf?U_Ge=$.9ISpjo<?IjPIAB[dC9N@6P2S7n2n
%jEu]'Ffu"CPjgj$N=!t[l]AreIoPS`idnCAN<$;n"?[OTJ9B/.FB[Sk,g,em2"?ZKi&Qu,$.$%mE\cr0IVP:h0#`VE3Plch?`Lk)
%@$3,7cg#a'NLq=*WRT!cV]dPBC."_kMlj<)#5L,mf+(=;%t7c8cWZqT_O6DJ3FPrSQu@&%SOVSl#fN0@TcK$_`q'"[1WX,%b4fiD
%C0J_VCD"??-(+C'l8]-02PdSf1iC)^dFk]AIk\q\$n4*Kj]WX22\oeG/bZb'aVcA^Wolf#/[!FS(ItNXj=+eLgP)$dR/(;Xc"o6,
%o4hDM3COXkk=</V&Pu!6]:'.!O>pqA.Kp94j?ToKB-e+l4K?2mF<luRW!Z5Brapa=6'S%sOCGMfeW#gX-16d![EmP?c7.QNi[BaX
%]AA[d,gnu-6$b8j^RZm'#b>fbg%&jpde)HoTcQ]=H`[\.ZWYCAW.6n,"S7fi;`u*KWMQJ'@Y42C_lc$lqu3Ite0MCX,%Y@C8D?II
%-+':EU"9o#i_;F?WhqTQaO,t#@)P\toXpgWri1_T4eHMsm27=@^^P&4U10%[oN>Mu22F6)cG8#c28g)DqQ(?B_'1ISV"]@Pc`3oP
%U0s+2<E0?am:>X1coRms;&`>RgDQBT/>ku/765%BW=QXoUNYZPaEHi+M$BLob_Qfi9EG*@1b3IZhUTXh&fs+:Va^QJG*UMeGkKUY
%JRVQMJSD0$T.pi)opUGV##8e0)%;/kUa(=p>8YTEi!/P3p)$2AS,rM_FegD0l\Jj:#.gq>Xs%u-3uAb+4.X9LjL'StM%*4HZ6A)k
%E<GJI2rJ^crDptOg#E9Ap3$mJl+c-@IoEd>=a[Y@W$N'5"/Z7X@O]n?Dg"MRQNLS^<i.'W%=AUfR>S4;@r]$a77is85linPYkPRN
%SbP9UGt81H+cHp)Aa2hT/TZj^%4gk>4p!JAh4,pNLQ-=:\`>lYN%q+GJ*p^51Y%S/s"Y)qC.m:c2tlV%8nUA16C)n\o?.7OcG4<C
%Yi$d<q%sQ0lgKWcB3tnWl!"DiJ]jHf7!/9Y5O2]A?FLM)q1^XdE')\_>Rla#78tNf?lp^g)CrlgP;G>a6pqnq(t:fYJ/i,BqXIY/
%M=dpscaD8okRF:1^EpDKCq>0AL1@i-KP8ADdu"CE^+XEq9?!kOa3]S&Bc[8.1?S<FWJ[)7Uk>A1:-(.&qTQ35\_=-U[24OgcL-8[
%4ca?E=gpfR;qj\i.62i*V;EJrfg=+YW3J_B+V6Sqc,cch`SMeY5H+f3O\@>52d>-3A(,uY?M..t_I>fL5&$<k!E:mWXJb9!eq,M#
%61$>,d](V$TP"R[<3+.).$=KWh-Nk".<UdV75H+GKo(:;TXnFR5jjS"=P'iLT6q$d[G#jS/`Pp#M'+^Wbt)J'Y[udqs#'?D5-e.,
%hrL]-9nL_<\7)V'E[[)(OIYN[J0HEcWtn;1jGPaG/]#[?b`_T31#;blPLemlTn1Jo\$/o"USJEprW!i2)6tNqO*Hb<*YQpZY[E^A
%WflN[\]17aYbgd+F0\MsCb6R$-^(lF,C2I5[IQD&6.J5qZkW\Vo[(nX:\^[r$>YR5kDm2BI+1!OmI`HH<c*I.P;C[CASt?e1oi(g
%8bIBmW2Wu)m)DHt,Uoi<-T:@uIO7P1hYYH-VV$j48kRq3\s4OCBj;2_HtL/h&49)++NG#&#i-8<jFiq:SVY[Bem>fjdb%?$(eOfN
%7`/J@HZrTo-l%TEPne:n^NQhWKeRGeFJ:e)9l?V@E5Nfrd86%S)T$!S)3NuZ&[3>eCI#@8pY<kfPtlj@Le^5Yj,gdSmEC0#<UksR
%g?.=J:Qh6iSCZ@gh9uH/_\eYh9>KA1e:^WPTV_V$-jEf?UG*Q$\HHONFmC--ce@aedZD8)'KX&K7.Xh+Yg9'J458_"+$)bJaC#i*
%/q=DUFp9-IX*c7Qjtaf(3b8N^NM`Z6A,gDkEJ6k<S-G6=%i)p)L01TA#A4=ei'/!LFfru:>VjPB7%)73gt8Ag;RYd,'?mGnkE+)%
%[_WhJ<W-Ft=[/rK''4eBZd5RU(=VqRX<7!7$rT$V[727.JbIUVF#l_V=%E2de<d6b-aSEqR`4<LdTNsYqb03Yl1T-*p'H'S'"Vak
%_!M_N,C7'CE*,e/44ufcIHJ!C^4r^_L#3fYhc^M.\;(+&p/:ah62@Y^]+s:&/7:8E.B!/+Zcoq14ZVB/qs]AFf,spTGD(DoY7L@X
%o_S?^StA/[[W28-SD2&1USm'/?65PRHOY?(Xri!:i+=VKaY_`BDf^A"mj'o8Q)!PTaT.?.*A\R*HeL;blPn./2Whpj\;9at&QTgi
%oc^XsAUX&2`LJ'r4P?X*`]7^i@(@q+@!`#3Beip#PO_:D\oDr-^A"?NF7!UN+gDc%dV3beB6'=(;f;Y?HIh5$2SnRCmcu/0X$q>P
%_@B?.[^t)/U)!jd*_TL!(4^]8L\iNZ4:uT`[X3/@b_.O0(81Je;F`VmS5d7K,Udrs=Q"NgaN8R8&3g>W,[CL$Y)J6Cj3Qjq/"7P9
%^8^p:=G4@H/CH3O\%tLMU[?oJ_.g#-/"di7qB(Xf[&aV7qP7Lp+,m[/4K7A(XL<#97*1W\AO#/pOsts\M7DoAUutG<Gn1X@LmCcG
%,>On8fgqbOH=\*RnY?B]R_O"imi&IV+nt9c&47f]"uGZ[eYnIdL5GK-"HCR?"E;M\h?6^YG]0a%P]i!n#;A-`m;cr5U`$$Wco![i
%Y=d%rb(:mem#2+e8LK^62p!iL0aTUF62!*D6+.tL5uA@\bUe+XB`+:\'c$m$GRHS8M2Z3]I4%QOmgVJp^>pRl-J\V6=ZRk.kgkT2
%8rN8(FK5"jV55Y-<0?,g&ub_XYs?jGlktASBB_3=O_4#;dZ^Ql>6CK1Dd#7)lRCG'BPd\YV\^9b4/MVV5XD:P+!d1G`*m:d<M'A=
%CGq:26KOO=K&h@GLgDY_kY7)F%LR"&qF-CpDO:f<%jRqn7g1geN9\$YP@-[%?DX1N!d\fI^.3$P*eUDR6:&$tna(BP2_d\cQV$%?
%Mc6X(S3mh\$:cfZR[VkRI<%0s`aE+O:MA]ed$-^'&c^i^:tmKt(U!dWlfhiRiE+)kGKB)]=D6%=AXK-&oeP=.kO2TjScAlK.i+8Q
%.Da$kRnc;TdC=%4A&gJI"J&1`$j"+f1qm]S_rULb!IK!8@O<+;.]lFljlk)-KCscfL/kdK68j8(?L>LU2q<&LM3Yaa&\WNY7MbG5
%nnQeC=L8BP"DaO4Nuo/k*$?Q6e<(t3SK1+0nDk`;GqY*R3'!JoG"'Ud'c`_Be#VcWY["pf%?`N<ELQ[$a4EgoVEdC.0*j'Fa2MR4
%:(O@1#9CIb?#dFg"u0UbYcXm*-*+1#]#cL+:C&YVF]^Lg*NoWneeS9\_RF\6.l*TA!C`9ICcql2E1+<))*WAhKA2h7Ic9/.V`D7=
%rc]D1&rAe.E,lfmbeVmUgWd"NA(XkeVaM;U1EXC%;gOC'4Uh8(MS=a$<='9k#>iEE<b)_[%HncV4ZM7@NeHt'\(aRl[=aoT^i/FJ
%.BdZi&J$@?;@n4*P_g!ujf2'?2D9GTSB8O9*duJ_l;:9dZ+Z?/oE"r:7D!NWdGQ&3ET\L*7X;b'qC-2L;H([<Y"i97n`PL#)e]T'
%_]B&%[*+RB%g"7+UDXf=!6d1B6e$IO:eqCDIT]njWn^oc]D&)'_]Ngfjp(#T;8@1o390'0#e.S8d+:7R"m"OFQP,XPN6Ebk1+)-0
%Bq/'WkUS<IED^+#iZfZ]%*oT]mS`'.Tn_L5%=VKUG99eN1Cf5G)-^P@G%%-?/@KAh+JcVGV]%j$<6V[@'Uf"i'Ft#P"Bp@aalZPK
%#<A7;J4]E%GOc>NfdMsq/"=8oeL;qFCoKSW'EJ9@D,l_N'K%X&dBblR?EfBB2dZNC?`,C@7&2nAHI#,U\ZK7dpW-!&!lPu)SkPTL
%+D0&u7a4IhC!%e*da_a"E(>PbA#L?k<\e(+:/L$5X(ej'SN9<3MNeI4<Z("hOWL;$r><'gLDHqh"AtWaX'=-=_1,:jGV55eTl$-I
%dbf9Ng>,#3DaWg=Pp9CF-or)+X+Fjs`N=kRDN@:%H-a&",VB;h:gkj=pkG_@8s1T/BIK,qkG*RR<YO7r-m[<!:ki6ik-R&f:+k$b
%QK`@5Dno:b5LK/T*<++KHbF(Nk5?5p:Q?NhIRPI-<V,tII/T+E>YN1VhYilIF)Xs,Z^7lQ]^as5laOXDn_gmk\bX/9J)!#)rU*rj
%HfKSR:M4Q/\FIJSHOk"aq;Ko<rr[j>]ti=-DdIbU\%hb=E7P&n~>
%AI9_PrivateDataEnd
